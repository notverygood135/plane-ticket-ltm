Thu Jan 11 21:03:42 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Jan 11 21:03:42 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            
            <div id="navbar_list">
                
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>

            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");

            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        }
        else {
            authElements.forEach(item => item.style.display = "flex");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Jan 11 21:03:43 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:03:43 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 21:03:43 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:03:43 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 21:03:43 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:03:43 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Jan 11 21:03:43 2024

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:03:43 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Thu Jan 11 21:03:46 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:03:46 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <head>
        
        <title>Bootstrap Example</title>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
        <link rel="stylesheet" href="../static/login.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    </head>
   
    <body>

        <section class="h-100 gradient-form" style="background-color: #eee;">
            <div class="container py-5 h-100">
              <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-xl-10">
                  <div class="card rounded-3 text-black">
                    <div class="row g-0">
                      <div class="col-lg-6">
                        <div class="card-body p-md-5 mx-md-4">
          
                          <div class="text-center">
                            <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/lotus.webp"
                              style="width: 185px;" alt="logo">
                            <h4 class="mt-1 mb-5 pb-1">We are The Lotus Team</h4>
                          </div>
          
                          <div>
                            <p>Please login to your account</p>
          
                            <div class="form-outline mb-4">
                              <input type="email" id="email" class="form-control"
                                placeholder="Email" name="email" >
                              <label class="form-label" for="form2Example11">Email</label>
                            </div>
          
                            <div class="form-outline mb-4">
                              <input type="password" id="password" class="form-control" name="password" placeholder="Password" >
                              <label class="form-label" for="form2Example22">Password</label>
                            </div>
          
                            <div class="text-center pt-1 mb-5 pb-1">
                              <button class="btn btn-primary btn-block fa-lg gradient-custom-2 mb-3" type="button" onclick="submit()">Log
                                in</button>
                              <a class="text-muted" href="#!">Forgot password?</a>
                            </div>
          
                            <div class="d-flex align-items-center justify-content-center pb-4">
                              <p class="mb-0 me-2">Don't have an account?</p>
                              <button type="button" class="btn btn-outline-danger""> <a  href="http://localhost:8001/register">Create new account</a></button>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="col-lg-6 d-flex align-items-center gradient-custom-2">
                        <div class="text-white px-3 py-4 p-md-5 mx-md-4">
                          <h4 class="mb-4">We are more than just a company</h4>
                          <p class="small mb-0">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
                            tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud
                            exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </section>
          <!-- <h1>login</h1>
          <input type="text" name="email" id="email" placeholder="Email">
          <input type="password" name="password" id="password" placeholder="Password">
          <button type="button" onclick="submit()">Submit</button> -->
        <script>
          localStorage.removeItem('ticket_id_old');
            function submit() {
              console.log("a");
                let email = document.getElementById("email").value;
                let password = document.getElementById("password").value;
                console.log(`email: ${email}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "multipart/form-data"
                    },
                    body: `email=${email}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                  console.log(data);
                    if (data[0] != "[") {
                      alert("Invalid email or password");
                      return;
                    }
                    const loggedInUser = JSON.parse(data)[0];
                    if (loggedInUser.type == "1") {
                      window.location.replace("http://localhost:8001/manage/flights");
                    }
                    else if (loggedInUser.type == "0") {
                      window.location.replace("http://localhost:8001");
                    }
                    localStorage.setItem("email", loggedInUser.email);
                })
            }
        </script>
    </body>
</html>


Thu Jan 11 21:03:46 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:03:46 2024

HTTP/1.1 200 OK

.gradient-custom-2 {
    /* fallback for old browsers */
    background: #fccb90;
    
    /* Chrome 10-25, Safari 5.1-6 */
    background: -webkit-linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);
    
    /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
    background: linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);
    }
    
    @media (min-width: 768px) {
    .gradient-form {
    height: 100vh !important;
    }
    }
    @media (min-width: 769px) {
    .gradient-custom-2 {
    border-top-right-radius: .3rem;
    border-bottom-right-radius: .3rem;
    }
    }


Thu Jan 11 21:04:01 2024

GET /signup HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Jan 11 21:04:01 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Thu Jan 11 21:04:41 2024

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Jan 11 21:04:41 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1>register</h1>
        <input type="email" name="email" id="email" placeholder="Email">
        <input type="password" name="password" id="password" placeholder="Password">
        <input type="password" name="confirm" id="confirm" placeholder="Confirm password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let email = document.getElementById("email").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `email=${email}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid email or password");
                    }
                })
            }
        </script>
    </body>
</html>


Thu Jan 11 21:04:56 2024

POST /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/register
Content-Type: text/html
Content-Length: 47
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&password=1&confirm=1
Thu Jan 11 21:04:56 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 21:04:57 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:04:57 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <head>
        
        <title>Bootstrap Example</title>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
        <link rel="stylesheet" href="../static/login.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    </head>
   
    <body>

        <section class="h-100 gradient-form" style="background-color: #eee;">
            <div class="container py-5 h-100">
              <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-xl-10">
                  <div class="card rounded-3 text-black">
                    <div class="row g-0">
                      <div class="col-lg-6">
                        <div class="card-body p-md-5 mx-md-4">
          
                          <div class="text-center">
                            <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/lotus.webp"
                              style="width: 185px;" alt="logo">
                            <h4 class="mt-1 mb-5 pb-1">We are The Lotus Team</h4>
                          </div>
          
                          <div>
                            <p>Please login to your account</p>
          
                            <div class="form-outline mb-4">
                              <input type="email" id="email" class="form-control"
                                placeholder="Email" name="email" >
                              <label class="form-label" for="form2Example11">Email</label>
                            </div>
          
                            <div class="form-outline mb-4">
                              <input type="password" id="password" class="form-control" name="password" placeholder="Password" >
                              <label class="form-label" for="form2Example22">Password</label>
                            </div>
          
                            <div class="text-center pt-1 mb-5 pb-1">
                              <button class="btn btn-primary btn-block fa-lg gradient-custom-2 mb-3" type="button" onclick="submit()">Log
                                in</button>
                              <a class="text-muted" href="#!">Forgot password?</a>
                            </div>
          
                            <div class="d-flex align-items-center justify-content-center pb-4">
                              <p class="mb-0 me-2">Don't have an account?</p>
                              <button type="button" class="btn btn-outline-danger""> <a  href="http://localhost:8001/register">Create new account</a></button>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="col-lg-6 d-flex align-items-center gradient-custom-2">
                        <div class="text-white px-3 py-4 p-md-5 mx-md-4">
                          <h4 class="mb-4">We are more than just a company</h4>
                          <p class="small mb-0">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
                            tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud
                            exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </section>
          <!-- <h1>login</h1>
          <input type="text" name="email" id="email" placeholder="Email">
          <input type="password" name="password" id="password" placeholder="Password">
          <button type="button" onclick="submit()">Submit</button> -->
        <script>
          localStorage.removeItem('ticket_id_old');
            function submit() {
              console.log("a");
                let email = document.getElementById("email").value;
                let password = document.getElementById("password").value;
                console.log(`email: ${email}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "multipart/form-data"
                    },
                    body: `email=${email}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                  console.log(data);
                    if (data[0] != "[") {
                      alert("Invalid email or password");
                      return;
                    }
                    const loggedInUser = JSON.parse(data)[0];
                    if (loggedInUser.type == "1") {
                      window.location.replace("http://localhost:8001/manage/flights");
                    }
                    else if (loggedInUser.type == "0") {
                      window.location.replace("http://localhost:8001");
                    }
                    localStorage.setItem("email", loggedInUser.email);
                })
            }
        </script>
    </body>
</html>


Thu Jan 11 21:04:57 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:04:57 2024

HTTP/1.1 200 OK

.gradient-custom-2 {
    /* fallback for old browsers */
    background: #fccb90;
    
    /* Chrome 10-25, Safari 5.1-6 */
    background: -webkit-linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);
    
    /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
    background: linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);
    }
    
    @media (min-width: 768px) {
    .gradient-form {
    height: 100vh !important;
    }
    }
    @media (min-width: 769px) {
    .gradient-custom-2 {
    border-top-right-radius: .3rem;
    border-bottom-right-radius: .3rem;
    }
    }


Thu Jan 11 21:05:12 2024

POST /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Content-Type: multipart/form-data
Content-Length: 37
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&password=1
Thu Jan 11 21:05:12 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "password": "1", "money": "10000.0", "type": "0", "bonus": "0"}]


Thu Jan 11 21:05:12 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:05:12 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            
            <div id="navbar_list">
                
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>

            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");

            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        }
        else {
            authElements.forEach(item => item.style.display = "flex");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Jan 11 21:05:13 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:05:13 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 21:05:13 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:05:13 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 21:05:13 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:05:13 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:05:13 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:05:13 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "10000.0", "type": "0", "bonus": "0"}]


Thu Jan 11 21:05:13 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:05:13 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Jan 11 21:08:54 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:08:54 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Thu Jan 11 21:08:54 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:08:54 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 21:08:54 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:08:54 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 21:08:54 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:08:54 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:08:54 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:08:54 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "10000.0", "type": "0", "bonus": "0"}]


Thu Jan 11 21:08:55 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:08:55 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:08:55 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:08:55 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Thu Jan 11 21:08:55 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:08:55 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Thu Jan 11 21:22:56 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:22:56 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Thu Jan 11 21:22:57 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:22:57 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 21:22:57 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:22:57 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 21:22:57 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:22:57 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:22:57 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:22:57 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:22:57 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:22:57 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "10000.0", "type": "0", "bonus": "0"}]


Thu Jan 11 21:22:57 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:22:57 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Thu Jan 11 21:22:57 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:22:57 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Thu Jan 11 21:22:58 2024

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:22:58 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Thu Jan 11 21:22:59 2024

GET /buy/31 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:22:59 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        function submit() {
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
        // gui email
    function emailSend(){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "Password",
            To : 'jadepegasus235@gmail.com',
            From : "jadeuma235@gmail.com",
            Subject : "This is the subject",
            Body : messageBody
            }).then(
            message => {
            if(message=='OK'){
                swal("Secussful", "You clicked the button!", "success");
            }
            else{
                swal("Error", "You clicked the button!", "error");
            }
            }
        );
    }

    </script>
</html>


Thu Jan 11 21:22:59 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/31
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:22:59 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:22:59 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/31
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:22:59 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:22:59 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/31
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:22:59 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:22:59 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/31
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:22:59 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "10000.0", "type": "0", "bonus": "0"}]


Thu Jan 11 21:22:59 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/31
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:22:59 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:22:59 2024

GET /ticket/31 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/31
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:22:59 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}]


Thu Jan 11 21:24:22 2024

GET /buy/31 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:24:22 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        function submit() {
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            emailSend();
        }
        // gui email
    function emailSend(){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "Password",
            To : 'jadepegasus235@gmail.com',
            From : "jadeuma235@gmail.com",
            Subject : "This is the subject",
            Body : messageBody
            }).then(
            message => {
            if(message=='OK'){
                swal("Secussful", "You clicked the button!", "success");
            }
            else{
                swal("Error", "You clicked the button!", "error");
            }
            }
        );
    }

    </script>
</html>


Thu Jan 11 21:24:22 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/31
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:24:22 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:24:22 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/31
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:24:22 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:24:24 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/31
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:24:24 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:24:24 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/31
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:24:24 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "10000.0", "type": "0", "bonus": "0"}]


Thu Jan 11 21:24:24 2024

GET /ticket/31 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/31
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:24:24 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}]


Thu Jan 11 21:24:24 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/31
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:24:24 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:24:41 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/31
Content-Type: text/html
Content-Length: 98
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=31&full_name=&number=&security_code=&expiration_date=&bonus=0
Thu Jan 11 21:24:41 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 21:24:41 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/31
Content-Type: text/html
Content-Length: 329
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 12.\nSafe travels!\n\nYour boarding pass number: 31&date=2024-01-11&time=21:24
Thu Jan 11 21:24:41 2024

HTTP/1.1 200 OK

[]


Thu Jan 11 21:25:59 2024

GET /buy/31 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:25:59 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        function submit() {
            emailSend();
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        }
        // gui email
    function emailSend(){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "Password",
            To : 'jadepegasus235@gmail.com',
            From : "jadeuma235@gmail.com",
            Subject : "This is the subject",
            Body : messageBody
            }).then(
            message => {
            if(message=='OK'){
                swal("Secussful", "You clicked the button!", "success");
            }
            else{
                swal("Error", "You clicked the button!", "error");
            }
            }
        );
    }

    </script>
</html>


Thu Jan 11 21:25:59 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/31
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:25:59 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:25:59 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/31
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:25:59 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:26:00 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/31
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:00 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Thu Jan 11 21:26:00 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/31
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:00 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "9799.75", "type": "0", "bonus": "0"}]


Thu Jan 11 21:26:00 2024

GET /ticket/31 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/31
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:00 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "1"}]


Thu Jan 11 21:26:00 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/31
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:00 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Thu Jan 11 21:26:09 2024

GET /buy/23 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:26:09 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        function submit() {
            emailSend();
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        }
        // gui email
    function emailSend(){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "Password",
            To : 'jadepegasus235@gmail.com',
            From : "jadeuma235@gmail.com",
            Subject : "This is the subject",
            Body : messageBody
            }).then(
            message => {
            if(message=='OK'){
                swal("Secussful", "You clicked the button!", "success");
            }
            else{
                swal("Error", "You clicked the button!", "error");
            }
            }
        );
    }

    </script>
</html>


Thu Jan 11 21:26:09 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/23
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:09 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:26:09 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/23
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:09 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:26:09 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/23
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:09 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Thu Jan 11 21:26:09 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/23
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:09 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "9799.75", "type": "0", "bonus": "0"}]


Thu Jan 11 21:26:09 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/23
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:09 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Thu Jan 11 21:26:09 2024

GET /ticket/23 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/23
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:09 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}]


Thu Jan 11 21:26:41 2024

GET /buy/23 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:26:41 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "Password",
            To : 'jadepegasus235@gmail.com',
            From : "jadeuma235@gmail.com",
            Subject : "This is the subject",
            Body : messageBody
            }).then(
            message => {
            if(message=='OK'){
                swal("Secussful", "You clicked the button!", "success");
            }
            else{
                swal("Error", "You clicked the button!", "error");
            }
            }
        );
    }
        function submit() {
            emailSend();
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        }
     

    </script>
</html>


Thu Jan 11 21:26:41 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/23
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:41 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:26:41 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/23
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:41 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:26:41 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/23
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:41 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Thu Jan 11 21:26:41 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/23
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:41 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "9799.75", "type": "0", "bonus": "0"}]


Thu Jan 11 21:26:41 2024

GET /ticket/23 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/23
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:41 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}]


Thu Jan 11 21:26:41 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/23
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:41 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Thu Jan 11 21:26:48 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:26:48 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Thu Jan 11 21:26:48 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:48 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 21:26:48 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:48 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 21:26:48 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:48 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Thu Jan 11 21:26:49 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:49 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "9799.75", "type": "0", "bonus": "0"}]


Thu Jan 11 21:26:49 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:49 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Thu Jan 11 21:26:49 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:49 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "1"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Thu Jan 11 21:26:49 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:49 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Thu Jan 11 21:26:50 2024

GET /buy/23 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:26:50 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "Password",
            To : 'jadepegasus235@gmail.com',
            From : "jadeuma235@gmail.com",
            Subject : "This is the subject",
            Body : messageBody
            }).then(
            message => {
            if(message=='OK'){
                swal("Secussful", "You clicked the button!", "success");
            }
            else{
                swal("Error", "You clicked the button!", "error");
            }
            }
        );
    }
        function submit() {
            emailSend();
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        }
     

    </script>
</html>


Thu Jan 11 21:26:51 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/23
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:51 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:26:51 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/23
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:51 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:26:51 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/23
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:51 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Thu Jan 11 21:26:51 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/23
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:51 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "9799.75", "type": "0", "bonus": "0"}]


Thu Jan 11 21:26:51 2024

GET /ticket/23 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/23
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:51 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}]


Thu Jan 11 21:26:51 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/23
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:26:51 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Thu Jan 11 21:28:20 2024

GET /buy/23 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:28:20 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "Password",
            To : 'jadepegasus235@gmail.com',
            From : "jadeuma235@gmail.com",
            Subject : "This is the subject",
            Body : "body1"
            }).then(
            message => {
                alert(message);
            // if(message=='OK'){
            //     swal("Secussful", "You clicked the button!", "success");
            // }
            // else{
            //     swal("Error", "You clicked the button!", "error");
            // }
            }
        );
    }
        function submit() {
            emailSend();
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        }
     

    </script>
</html>


Thu Jan 11 21:28:20 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/23
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:28:20 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:28:20 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/23
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:28:20 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:28:22 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/23
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:28:22 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Thu Jan 11 21:28:22 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/23
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:28:22 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "9799.75", "type": "0", "bonus": "0"}]


Thu Jan 11 21:28:22 2024

GET /ticket/23 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/23
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:28:22 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}]


Thu Jan 11 21:28:22 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/23
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:28:22 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Thu Jan 11 21:28:24 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/23
Content-Type: text/html
Content-Length: 98
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=23&full_name=&number=&security_code=&expiration_date=&bonus=0
Thu Jan 11 21:28:24 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 21:28:24 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/23
Content-Type: text/html
Content-Length: 328
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 23&date=2024-01-11&time=21:28
Thu Jan 11 21:28:24 2024

HTTP/1.1 200 OK

[]


Thu Jan 11 21:28:28 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/23
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:28:28 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/notifications.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>

            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>


        <button onclick="clearNotifications()">Clear</button>
        <ul id="notifications"></ul>
    </body>
    <script>
         //navbar
         const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            // fetch(`/unread/${email}`, {
            //     method: "GET",
            // })
            // .then(response => {
            //     return(response.text());
            // })
            // .then(data => {
            //     const user = JSON.parse(data)[0];
            //     const unread = document.getElementById("unread");
            //     unread.innerText = user.count;
            //     const money = document.getElementById("money");
            // })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        

        const notificationsElement = document.getElementById("notifications");

        fetch(`/notification/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

        fetch(`/read/${email}`, {
            method: "PUT"
        })

        function clearNotifications() {
            fetch(`/notification/${email}`, {
                method: "DELETE",
            })
            .then(response => {
                return(response.text());
            })
            
            notificationsElement.innerText = "";
        }
    </script>
</html>


Thu Jan 11 21:28:29 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:28:29 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan 11 21:28:29 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:28:29 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan 11 21:28:29 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:28:29 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "9699.5", "type": "0", "bonus": "0"}]


Thu Jan 11 21:28:29 2024

GET /notification/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:28:29 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 12.\nSafe travels!\n\nYour boarding pass number: 31", "date": "2024-01-11", "time": "21:24"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 23", "date": "2024-01-11", "time": "21:28"}]


Thu Jan 11 21:28:29 2024

PUT /read/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin
Content-Length: 0


Thu Jan 11 21:28:29 2024

HTTP/1.1 200 OK




Thu Jan 11 21:30:25 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:30:25 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Thu Jan 11 21:30:25 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:30:25 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 21:30:25 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:30:25 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 21:30:25 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:30:25 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:30:25 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:30:25 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "9699.5", "type": "0", "bonus": "0"}]


Thu Jan 11 21:30:26 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:30:26 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:30:26 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:30:26 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Thu Jan 11 21:30:26 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:30:26 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "1"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "1"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Thu Jan 11 21:30:28 2024

GET /buy/25 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:30:28 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : 'jadepegasus235@gmail.com',
            From : "jadeuma235@gmail.com",
            Subject : "This is the subject",
            Body : "body1"
            }).then(
            message => {
                alert(message);
            // if(message=='OK'){
            //     swal("Secussful", "You clicked the button!", "success");
            // }
            // else{
            //     swal("Error", "You clicked the button!", "error");
            // }
            }
        );
    }
        function submit() {
            emailSend();
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        }
     

    </script>
</html>


Thu Jan 11 21:30:29 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/25
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:30:29 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:30:29 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/25
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:30:29 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:30:29 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:30:29 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:30:29 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:30:29 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "9699.5", "type": "0", "bonus": "0"}]


Thu Jan 11 21:30:29 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:30:29 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:30:30 2024

GET /ticket/25 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:30:30 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}]


Thu Jan 11 21:30:32 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Content-Type: text/html
Content-Length: 98
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=25&full_name=&number=&security_code=&expiration_date=&bonus=0
Thu Jan 11 21:30:32 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 21:30:32 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Content-Type: text/html
Content-Length: 328
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25&date=2024-01-11&time=21:30
Thu Jan 11 21:30:32 2024

HTTP/1.1 200 OK

[]


Thu Jan 11 21:30:37 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/25
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:30:37 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/notifications.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>

            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>


        <button onclick="clearNotifications()">Clear</button>
        <ul id="notifications"></ul>
    </body>
    <script>
         //navbar
         const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            // fetch(`/unread/${email}`, {
            //     method: "GET",
            // })
            // .then(response => {
            //     return(response.text());
            // })
            // .then(data => {
            //     const user = JSON.parse(data)[0];
            //     const unread = document.getElementById("unread");
            //     unread.innerText = user.count;
            //     const money = document.getElementById("money");
            // })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        

        const notificationsElement = document.getElementById("notifications");

        fetch(`/notification/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

        fetch(`/read/${email}`, {
            method: "PUT"
        })

        function clearNotifications() {
            fetch(`/notification/${email}`, {
                method: "DELETE",
            })
            .then(response => {
                return(response.text());
            })
            
            notificationsElement.innerText = "";
        }
    </script>
</html>


Thu Jan 11 21:30:37 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:30:37 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan 11 21:30:37 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:30:37 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan 11 21:30:37 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:30:37 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "9598.25", "type": "0", "bonus": "0"}]


Thu Jan 11 21:30:37 2024

GET /notification/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:30:37 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 12.\nSafe travels!\n\nYour boarding pass number: 31", "date": "2024-01-11", "time": "21:24"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 23", "date": "2024-01-11", "time": "21:28"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "21:30"}]


Thu Jan 11 21:30:37 2024

PUT /read/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin
Content-Length: 0


Thu Jan 11 21:30:37 2024

HTTP/1.1 200 OK




Thu Jan 11 21:32:14 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:32:14 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Thu Jan 11 21:32:14 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:32:14 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 21:32:14 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:32:14 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 21:32:15 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:32:15 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:32:15 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:32:15 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "9598.25", "type": "0", "bonus": "0"}]


Thu Jan 11 21:32:15 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:32:15 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Thu Jan 11 21:32:15 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:32:15 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "1"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "1"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "1"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Thu Jan 11 21:32:15 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:32:15 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:32:17 2024

GET /buy/27 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:32:17 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : 'jadepegasus235@gmail.com',
            From : "jadeuma235@gmail.com",
            Subject : "This is the subject",
            Body : "body1"
            }).then(
            message => {
                alert(message);
            // if(message=='OK'){
            //     swal("Secussful", "You clicked the button!", "success");
            // }
            // else{
            //     swal("Error", "You clicked the button!", "error");
            // }
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            emailSend();
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        }
     

    </script>
</html>


Thu Jan 11 21:32:18 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/27
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:32:18 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:32:18 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/27
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:32:18 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:32:18 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:32:18 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:32:18 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:32:18 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "9598.25", "type": "0", "bonus": "0"}]


Thu Jan 11 21:32:19 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:32:19 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:32:19 2024

GET /ticket/27 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:32:19 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}]


Thu Jan 11 21:32:21 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Content-Type: text/html
Content-Length: 98
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=27&full_name=&number=&security_code=&expiration_date=&bonus=0
Thu Jan 11 21:32:21 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 21:32:22 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Content-Type: text/html
Content-Length: 328
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 8.\nSafe travels!\n\nYour boarding pass number: 27&date=2024-01-11&time=21:32
Thu Jan 11 21:32:22 2024

HTTP/1.1 200 OK

[]


Thu Jan 11 21:32:25 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/27
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:32:25 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/notifications.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>

            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>


        <button onclick="clearNotifications()">Clear</button>
        <ul id="notifications"></ul>
    </body>
    <script>
         //navbar
         const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            // fetch(`/unread/${email}`, {
            //     method: "GET",
            // })
            // .then(response => {
            //     return(response.text());
            // })
            // .then(data => {
            //     const user = JSON.parse(data)[0];
            //     const unread = document.getElementById("unread");
            //     unread.innerText = user.count;
            //     const money = document.getElementById("money");
            // })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        

        const notificationsElement = document.getElementById("notifications");

        fetch(`/notification/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

        fetch(`/read/${email}`, {
            method: "PUT"
        })

        function clearNotifications() {
            fetch(`/notification/${email}`, {
                method: "DELETE",
            })
            .then(response => {
                return(response.text());
            })
            
            notificationsElement.innerText = "";
        }
    </script>
</html>


Thu Jan 11 21:32:25 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:32:25 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan 11 21:32:25 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:32:25 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan 11 21:32:26 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:32:26 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "9497.0", "type": "0", "bonus": "0"}]


Thu Jan 11 21:32:26 2024

PUT /read/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin
Content-Length: 0


Thu Jan 11 21:32:26 2024

HTTP/1.1 200 OK




Thu Jan 11 21:32:26 2024

GET /notification/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:32:26 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 12.\nSafe travels!\n\nYour boarding pass number: 31", "date": "2024-01-11", "time": "21:24"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 23", "date": "2024-01-11", "time": "21:28"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "21:30"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 8.\nSafe travels!\n\nYour boarding pass number: 27", "date": "2024-01-11", "time": "21:32"}]


Thu Jan 11 21:33:42 2024

GET /buy/27 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:33:42 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : 'jadepegasus235@gmail.com',
            From : "jadeuma235@gmail.com",
            Subject : "This is the subject",
            Body : "body1"
            }).then(
            message => {
                alert(message);
            // if(message=='OK'){
            //     swal("Secussful", "You clicked the button!", "success");
            // }
            // else{
            //     swal("Error", "You clicked the button!", "error");
            // }
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            // alert("You have a new notification!");
                            emailSend();
                            // window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        }
     

    </script>
</html>


Thu Jan 11 21:33:43 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/27
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:33:43 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:33:43 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/27
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:33:43 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:33:44 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:33:44 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "9497.0", "type": "0", "bonus": "0"}]


Thu Jan 11 21:33:45 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:33:45 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:33:45 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:33:45 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:33:45 2024

GET /ticket/27 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:33:45 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}]


Thu Jan 11 21:33:46 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Content-Type: text/html
Content-Length: 98
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=27&full_name=&number=&security_code=&expiration_date=&bonus=0
Thu Jan 11 21:33:46 2024

HTTP/1.1 500 Internal Server Error




Thu Jan 11 21:34:25 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Content-Type: text/html
Content-Length: 98
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=27&full_name=&number=&security_code=&expiration_date=&bonus=0
Thu Jan 11 21:34:25 2024

HTTP/1.1 500 Internal Server Error




Thu Jan 11 21:34:31 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:34:31 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Thu Jan 11 21:34:31 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:34:31 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 21:34:31 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:34:31 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 21:34:32 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:34:32 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:34:32 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:34:32 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "9497.0", "type": "0", "bonus": "0"}]


Thu Jan 11 21:34:32 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:34:32 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:34:32 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:34:32 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Thu Jan 11 21:34:32 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:34:32 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "1"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "1"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "1"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Thu Jan 11 21:34:34 2024

GET /buy/26 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:34:34 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : 'jadepegasus235@gmail.com',
            From : "jadeuma235@gmail.com",
            Subject : "This is the subject",
            Body : "body1"
            }).then(
            message => {
                alert(message);
            // if(message=='OK'){
            //     swal("Secussful", "You clicked the button!", "success");
            // }
            // else{
            //     swal("Error", "You clicked the button!", "error");
            // }
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                           
                            // window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            emailSend();
        }
     

    </script>
</html>


Thu Jan 11 21:34:35 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/26
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:34:35 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:34:35 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/26
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:34:35 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:34:36 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/26
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:34:36 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:34:36 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/26
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:34:36 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "9497.0", "type": "0", "bonus": "0"}]


Thu Jan 11 21:34:36 2024

GET /ticket/26 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/26
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:34:36 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}]


Thu Jan 11 21:34:36 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/26
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:34:36 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:34:38 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/26
Content-Type: text/html
Content-Length: 98
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=26&full_name=&number=&security_code=&expiration_date=&bonus=0
Thu Jan 11 21:34:38 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 21:34:39 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/26
Content-Type: text/html
Content-Length: 328
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 7.\nSafe travels!\n\nYour boarding pass number: 26&date=2024-01-11&time=21:34
Thu Jan 11 21:34:39 2024

HTTP/1.1 200 OK

[]


Thu Jan 11 21:42:23 2024

GET /buy/26 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:42:23 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                alert(email);
                alert(typeof email);
            // if(message=='OK'){
            //     swal("Secussful", "You clicked the button!", "success");
            // }
            // else{
            //     swal("Error", "You clicked the button!", "error");
            // }
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            emailSend(email,content,dateString,timeString);
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                           
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        }
     

    </script>
</html>


Thu Jan 11 21:42:23 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/26
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:42:23 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:42:23 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/26
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:42:23 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:42:24 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/26
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:42:24 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Thu Jan 11 21:42:24 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/26
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:42:24 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "9395.75", "type": "0", "bonus": "0"}]


Thu Jan 11 21:42:24 2024

GET /ticket/26 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/26
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:42:24 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "1"}]


Thu Jan 11 21:42:24 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/26
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:42:24 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Thu Jan 11 21:42:28 2024

GET /buy/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:42:28 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                alert(email);
                alert(typeof email);
            // if(message=='OK'){
            //     swal("Secussful", "You clicked the button!", "success");
            // }
            // else{
            //     swal("Error", "You clicked the button!", "error");
            // }
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            emailSend(email,content,dateString,timeString);
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                           
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        }
     

    </script>
</html>


Thu Jan 11 21:42:29 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/29
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:42:29 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:42:29 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/29
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:42:29 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:42:30 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:42:30 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Thu Jan 11 21:42:30 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:42:30 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "9395.75", "type": "0", "bonus": "0"}]


Thu Jan 11 21:42:30 2024

GET /ticket/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:42:30 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}]


Thu Jan 11 21:42:30 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:42:30 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Thu Jan 11 21:42:33 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Content-Type: text/html
Content-Length: 98
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=29&full_name=&number=&security_code=&expiration_date=&bonus=0
Thu Jan 11 21:42:33 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 21:42:33 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Content-Type: text/html
Content-Length: 329
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 10.\nSafe travels!\n\nYour boarding pass number: 29&date=2024-01-11&time=21:42
Thu Jan 11 21:42:33 2024

HTTP/1.1 200 OK

[]


Thu Jan 11 21:42:36 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/29
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:42:36 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/notifications.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>

            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>


        <button onclick="clearNotifications()">Clear</button>
        <ul id="notifications"></ul>
    </body>
    <script>
         //navbar
         const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            // fetch(`/unread/${email}`, {
            //     method: "GET",
            // })
            // .then(response => {
            //     return(response.text());
            // })
            // .then(data => {
            //     const user = JSON.parse(data)[0];
            //     const unread = document.getElementById("unread");
            //     unread.innerText = user.count;
            //     const money = document.getElementById("money");
            // })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        

        const notificationsElement = document.getElementById("notifications");

        fetch(`/notification/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

        fetch(`/read/${email}`, {
            method: "PUT"
        })

        function clearNotifications() {
            fetch(`/notification/${email}`, {
                method: "DELETE",
            })
            .then(response => {
                return(response.text());
            })
            
            notificationsElement.innerText = "";
        }
    </script>
</html>


Thu Jan 11 21:42:36 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:42:36 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan 11 21:42:36 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:42:36 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan 11 21:42:36 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:42:36 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "9195.5", "type": "0", "bonus": "0"}]


Thu Jan 11 21:42:36 2024

PUT /read/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin
Content-Length: 0


Thu Jan 11 21:42:36 2024

HTTP/1.1 200 OK




Thu Jan 11 21:42:37 2024

GET /notification/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:42:37 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 12.\nSafe travels!\n\nYour boarding pass number: 31", "date": "2024-01-11", "time": "21:24"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 23", "date": "2024-01-11", "time": "21:28"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "21:30"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 8.\nSafe travels!\n\nYour boarding pass number: 27", "date": "2024-01-11", "time": "21:32"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 7.\nSafe travels!\n\nYour boarding pass number: 26", "date": "2024-01-11", "time": "21:34"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 10.\nSafe travels!\n\nYour boarding pass number: 29", "date": "2024-01-11", "time": "21:42"}]


Thu Jan 11 21:48:00 2024

DELETE /notification/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:48:00 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 21:48:32 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:48:32 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            
            <div id="navbar_list">
                
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>

            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");

            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        }
        else {
            authElements.forEach(item => item.style.display = "flex");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Jan 11 21:48:32 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:48:32 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 21:48:32 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:48:32 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 21:48:32 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:48:32 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:48:33 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:48:33 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "9195.5", "type": "0", "bonus": "0"}]


Thu Jan 11 21:48:33 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:48:33 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Jan 11 21:51:48 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Jan 11 21:51:48 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            
            <div id="navbar_list">
                
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>

            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");

            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        }
        else {
            authElements.forEach(item => item.style.display = "flex");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Jan 11 21:51:49 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:51:49 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 21:51:49 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:51:49 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 21:51:50 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:51:50 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Jan 11 21:51:50 2024

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:51:50 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Thu Jan 11 21:51:53 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:51:53 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <head>
        
        <title>Bootstrap Example</title>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
        <link rel="stylesheet" href="../static/login.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    </head>
   
    <body>

        <section class="h-100 gradient-form" style="background-color: #eee;">
            <div class="container py-5 h-100">
              <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-xl-10">
                  <div class="card rounded-3 text-black">
                    <div class="row g-0">
                      <div class="col-lg-6">
                        <div class="card-body p-md-5 mx-md-4">
          
                          <div class="text-center">
                            <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/lotus.webp"
                              style="width: 185px;" alt="logo">
                            <h4 class="mt-1 mb-5 pb-1">We are The Lotus Team</h4>
                          </div>
          
                          <div>
                            <p>Please login to your account</p>
          
                            <div class="form-outline mb-4">
                              <input type="email" id="email" class="form-control"
                                placeholder="Email" name="email" >
                              <label class="form-label" for="form2Example11">Email</label>
                            </div>
          
                            <div class="form-outline mb-4">
                              <input type="password" id="password" class="form-control" name="password" placeholder="Password" >
                              <label class="form-label" for="form2Example22">Password</label>
                            </div>
          
                            <div class="text-center pt-1 mb-5 pb-1">
                              <button class="btn btn-primary btn-block fa-lg gradient-custom-2 mb-3" type="button" onclick="submit()">Log
                                in</button>
                              <a class="text-muted" href="#!">Forgot password?</a>
                            </div>
          
                            <div class="d-flex align-items-center justify-content-center pb-4">
                              <p class="mb-0 me-2">Don't have an account?</p>
                              <button type="button" class="btn btn-outline-danger""> <a  href="http://localhost:8001/register">Create new account</a></button>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="col-lg-6 d-flex align-items-center gradient-custom-2">
                        <div class="text-white px-3 py-4 p-md-5 mx-md-4">
                          <h4 class="mb-4">We are more than just a company</h4>
                          <p class="small mb-0">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
                            tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud
                            exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </section>
          <!-- <h1>login</h1>
          <input type="text" name="email" id="email" placeholder="Email">
          <input type="password" name="password" id="password" placeholder="Password">
          <button type="button" onclick="submit()">Submit</button> -->
        <script>
          localStorage.removeItem('ticket_id_old');
            function submit() {
              console.log("a");
                let email = document.getElementById("email").value;
                let password = document.getElementById("password").value;
                console.log(`email: ${email}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "multipart/form-data"
                    },
                    body: `email=${email}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                  console.log(data);
                    if (data[0] != "[") {
                      alert("Invalid email or password");
                      return;
                    }
                    const loggedInUser = JSON.parse(data)[0];
                    if (loggedInUser.type == "1") {
                      window.location.replace("http://localhost:8001/manage/flights");
                    }
                    else if (loggedInUser.type == "0") {
                      window.location.replace("http://localhost:8001");
                    }
                    localStorage.setItem("email", loggedInUser.email);
                })
            }
        </script>
    </body>
</html>


Thu Jan 11 21:51:53 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:51:53 2024

HTTP/1.1 200 OK

.gradient-custom-2 {
    /* fallback for old browsers */
    background: #fccb90;
    
    /* Chrome 10-25, Safari 5.1-6 */
    background: -webkit-linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);
    
    /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
    background: linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);
    }
    
    @media (min-width: 768px) {
    .gradient-form {
    height: 100vh !important;
    }
    }
    @media (min-width: 769px) {
    .gradient-custom-2 {
    border-top-right-radius: .3rem;
    border-bottom-right-radius: .3rem;
    }
    }


Thu Jan 11 21:52:01 2024

POST /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Content-Type: multipart/form-data
Content-Length: 26
Origin: http://localhost:8001
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=admin&password=admin
Thu Jan 11 21:52:01 2024

HTTP/1.1 200 OK

[{"email": "admin", "password": "admin", "money": "1.0e+15", "type": "1", "bonus": "0"}]


Thu Jan 11 21:52:02 2024

GET /manage/flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/login
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:52:02 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="manage">
            <div id="navbar">
                <div class="logo">
                    <a href="http://localhost:8001">
                        <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                    </a>
                </div>

                <div id="navbar_list">
                    <a href="http://localhost:8001">home</a>
                    <a href="http://localhost:8001/manage/users">users</a>
                    <a href="http://localhost:8001/manage/users">flights</a>
                </div>
            </div>
            


            <div id="flights-info">
                <div id="flights-search">
                    <input type="text" name="from" id="from" placeholder="From">
                    <input type="text" name="to" id="to" placeholder="To">
                    <input type="airline" name="airline" id="airline" placeholder="Airline">
                    <input type="datetime-local" name="datetime" id="datetime">
                    <button type="button" onclick="filter()">Filter</button>
                    <select name="sort" id="sort" onchange="sortFlights()">
                        <option value="flight">Flight</option>
                        <option value="time">Time</option>
                        <option value="airline">Airline</option>
                    </select>
                </div>
                <div id="flights-column">
                    <span>Flight</span>
                    <span>From</span>
                    <span>To</span>
                    <span>Date</span>
                    <span>Time</span>
                    <span>Airline</span>
                </div>
                <ul id="flights"></ul>
            </div>
        </div>
    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const email = localStorage.getItem("email");

        if (email != "admin") {
            const manage = document.getElementById("manage");
            manage.innerText = "";
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/manage/flight/${ticket.flight_id}`);
                a.innerHTML = "Edit";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        
    </script>
</html>


Thu Jan 11 21:52:02 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/manage/flights
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:02 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 21:52:02 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/manage/flights
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:02 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 21:52:02 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/manage/flights
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:02 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Jan 11 21:52:07 2024

GET /manage/flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:52:07 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="manage">
            <div id="navbar">
                <div class="logo">
                    <a href="http://localhost:8001">
                        <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                    </a>
                </div>

                <div id="navbar_list">
                    <a href="http://localhost:8001">home</a>
                    <a href="http://localhost:8001/manage/users">users</a>
                    <a href="http://localhost:8001/manage/users">flights</a>
                </div>
            </div>
            


            <div id="flights-info">
                <div id="flights-search">
                    <input type="text" name="from" id="from" placeholder="From">
                    <input type="text" name="to" id="to" placeholder="To">
                    <input type="airline" name="airline" id="airline" placeholder="Airline">
                    <input type="datetime-local" name="datetime" id="datetime">
                    <button type="button" onclick="filter()">Filter</button>
                    <select name="sort" id="sort" onchange="sortFlights()">
                        <option value="flight">Flight</option>
                        <option value="time">Time</option>
                        <option value="airline">Airline</option>
                    </select>
                </div>
                <div id="flights-column">
                    <span>Flight</span>
                    <span>From</span>
                    <span>To</span>
                    <span>Date</span>
                    <span>Time</span>
                    <span>Airline</span>
                </div>
                <ul id="flights"></ul>
            </div>
        </div>
    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const email = localStorage.getItem("email");

        if (email != "admin") {
            const manage = document.getElementById("manage");
            manage.innerText = "";
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/manage/flight/${ticket.flight_id}`);
                a.innerHTML = "Edit";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        
    </script>
</html>


Thu Jan 11 21:52:07 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/manage/flights
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:07 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 21:52:07 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/manage/flights
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:07 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 21:52:07 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/manage/flights
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:07 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Jan 11 21:52:14 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/manage/flights
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:52:14 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            
            <div id="navbar_list">
                
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>

            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");

            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        }
        else {
            authElements.forEach(item => item.style.display = "flex");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Jan 11 21:52:14 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:14 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 21:52:14 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:14 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 21:52:14 2024

GET /unread/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:14 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:52:14 2024

GET /user/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:14 2024

HTTP/1.1 200 OK

[{"email": "admin", "money": "1.0e+15", "type": "1", "bonus": "0"}]


Thu Jan 11 21:52:14 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:14 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Jan 11 21:52:16 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:52:16 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            
            <div id="navbar_list">
                
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>

            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");

            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        }
        else {
            authElements.forEach(item => item.style.display = "flex");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Jan 11 21:52:17 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:17 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 21:52:17 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:17 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 21:52:17 2024

GET /unread/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:17 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:52:17 2024

GET /user/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:17 2024

HTTP/1.1 200 OK

[{"email": "admin", "money": "1.0e+15", "type": "1", "bonus": "0"}]


Thu Jan 11 21:52:17 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:17 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Jan 11 21:52:20 2024

GET /manage/flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:52:20 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="manage">
            <div id="navbar">
                <div class="logo">
                    <a href="http://localhost:8001">
                        <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                    </a>
                </div>

                <div id="navbar_list">
                    <a href="http://localhost:8001">home</a>
                    <a href="http://localhost:8001/manage/users">users</a>
                    <a href="http://localhost:8001/manage/users">flights</a>
                </div>
            </div>
            


            <div id="flights-info">
                <div id="flights-search">
                    <input type="text" name="from" id="from" placeholder="From">
                    <input type="text" name="to" id="to" placeholder="To">
                    <input type="airline" name="airline" id="airline" placeholder="Airline">
                    <input type="datetime-local" name="datetime" id="datetime">
                    <button type="button" onclick="filter()">Filter</button>
                    <select name="sort" id="sort" onchange="sortFlights()">
                        <option value="flight">Flight</option>
                        <option value="time">Time</option>
                        <option value="airline">Airline</option>
                    </select>
                </div>
                <div id="flights-column">
                    <span>Flight</span>
                    <span>From</span>
                    <span>To</span>
                    <span>Date</span>
                    <span>Time</span>
                    <span>Airline</span>
                </div>
                <ul id="flights"></ul>
            </div>
        </div>
    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const email = localStorage.getItem("email");

        if (email != "admin") {
            const manage = document.getElementById("manage");
            manage.innerText = "";
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/manage/flight/${ticket.flight_id}`);
                a.innerHTML = "Edit";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        
    </script>
</html>


Thu Jan 11 21:52:20 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/manage/flights
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:20 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 21:52:20 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/manage/flights
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:20 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 21:52:20 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/manage/flights
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:20 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Jan 11 21:52:25 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:52:25 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            
            <div id="navbar_list">
                
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>

            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");

            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        }
        else {
            authElements.forEach(item => item.style.display = "flex");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Jan 11 21:52:26 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:26 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 21:52:26 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:26 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 21:52:26 2024

GET /unread/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:26 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:52:26 2024

GET /user/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:26 2024

HTTP/1.1 200 OK

[{"email": "admin", "money": "1.0e+15", "type": "1", "bonus": "0"}]


Thu Jan 11 21:52:26 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:26 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Jan 11 21:52:37 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:52:37 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Thu Jan 11 21:52:39 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:39 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 21:52:39 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:39 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 21:52:39 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:39 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:52:39 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:39 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "9195.5", "type": "0", "bonus": "0"}]


Thu Jan 11 21:52:39 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:39 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:52:39 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:39 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Thu Jan 11 21:52:39 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:39 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "1"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "1"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "1"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "1"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "1"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Thu Jan 11 21:52:45 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:52:45 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Thu Jan 11 21:52:45 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:45 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 21:52:45 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:45 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 21:52:45 2024

GET /unread/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:45 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:52:45 2024

GET /user/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:45 2024

HTTP/1.1 200 OK

[{"email": "admin", "money": "1.0e+15", "type": "1", "bonus": "0"}]


Thu Jan 11 21:52:46 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:46 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Thu Jan 11 21:52:46 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:46 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "1"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "1"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "1"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "1"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "1"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Thu Jan 11 21:52:46 2024

GET /unread/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:46 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:52:47 2024

GET /buy/30 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:52:47 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            // if(message=='OK'){
            //     swal("Secussful", "You clicked the button!", "success");
            // }
            // else{
            //     swal("Error", "You clicked the button!", "error");
            // }
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            emailSend(email,content,dateString,timeString);
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                           
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        }
     

    </script>
</html>


Thu Jan 11 21:52:48 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/buy/30
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:48 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:52:48 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/buy/30
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:48 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:52:49 2024

GET /unread/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/30
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:49 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:52:49 2024

GET /user/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/30
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:49 2024

HTTP/1.1 200 OK

[{"email": "admin", "money": "1.0e+15", "type": "1", "bonus": "0"}]


Thu Jan 11 21:52:49 2024

GET /ticket/30 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/30
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:49 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}]


Thu Jan 11 21:52:49 2024

GET /unread/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/30
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:49 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:52:50 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/30
Content-Type: text/html
Content-Length: 83
Origin: http://localhost:8001
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=admin&ticket_id=30&full_name=&number=&security_code=&expiration_date=&bonus=0
Thu Jan 11 21:52:50 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 21:52:50 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/30
Content-Type: text/html
Content-Length: 299
Origin: http://localhost:8001
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=admin&content=Boarding pass confirmed\nDear admin,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 11.\nSafe travels!\n\nYour boarding pass number: 30&date=2024-01-11&time=21:52
Thu Jan 11 21:52:50 2024

HTTP/1.1 200 OK

[]


Thu Jan 11 21:52:58 2024

GET /buy/30 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:52:58 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            // if(message=='OK'){
            //     swal("Secussful", "You clicked the button!", "success");
            // }
            // else{
            //     swal("Error", "You clicked the button!", "error");
            // }
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            emailSend(email,content,dateString,timeString);
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                           
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        }
     

    </script>
</html>


Thu Jan 11 21:52:58 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/30
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:58 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:52:58 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/30
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:52:58 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 21:53:00 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/30
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:53:00 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:53:01 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/30
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:53:01 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "9195.5", "type": "0", "bonus": "0"}]


Thu Jan 11 21:53:01 2024

GET /ticket/30 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/30
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:53:01 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}]


Thu Jan 11 21:53:01 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/30
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:53:01 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 21:53:02 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/30
Content-Type: text/html
Content-Length: 98
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=30&full_name=&number=&security_code=&expiration_date=&bonus=0
Thu Jan 11 21:53:02 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 21:53:02 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/30
Content-Type: text/html
Content-Length: 329
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 11.\nSafe travels!\n\nYour boarding pass number: 30&date=2024-01-11&time=21:53
Thu Jan 11 21:53:02 2024

HTTP/1.1 200 OK

[]


Thu Jan 11 21:53:04 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/30
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 21:53:04 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/notifications.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>

            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>


        <button onclick="clearNotifications()">Clear</button>
        <ul id="notifications"></ul>
    </body>
    <script>
         //navbar
         const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            // fetch(`/unread/${email}`, {
            //     method: "GET",
            // })
            // .then(response => {
            //     return(response.text());
            // })
            // .then(data => {
            //     const user = JSON.parse(data)[0];
            //     const unread = document.getElementById("unread");
            //     unread.innerText = user.count;
            //     const money = document.getElementById("money");
            // })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        

        const notificationsElement = document.getElementById("notifications");

        fetch(`/notification/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

        fetch(`/read/${email}`, {
            method: "PUT"
        })

        function clearNotifications() {
            fetch(`/notification/${email}`, {
                method: "DELETE",
            })
            .then(response => {
                return(response.text());
            })
            
            notificationsElement.innerText = "";
        }
    </script>
</html>


Thu Jan 11 21:53:04 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:53:04 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan 11 21:53:04 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:53:04 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan 11 21:53:05 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:53:05 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "8995.25", "type": "0", "bonus": "0"}]


Thu Jan 11 21:53:05 2024

GET /notification/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:53:05 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 11.\nSafe travels!\n\nYour boarding pass number: 30", "date": "2024-01-11", "time": "21:53"}]


Thu Jan 11 21:53:05 2024

PUT /read/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin
Content-Length: 0


Thu Jan 11 21:53:05 2024

HTTP/1.1 200 OK




Thu Jan 11 21:53:15 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/buy/30
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin


Thu Jan 11 21:53:15 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/notifications.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>

            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>


        <button onclick="clearNotifications()">Clear</button>
        <ul id="notifications"></ul>
    </body>
    <script>
         //navbar
         const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            // fetch(`/unread/${email}`, {
            //     method: "GET",
            // })
            // .then(response => {
            //     return(response.text());
            // })
            // .then(data => {
            //     const user = JSON.parse(data)[0];
            //     const unread = document.getElementById("unread");
            //     unread.innerText = user.count;
            //     const money = document.getElementById("money");
            // })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        

        const notificationsElement = document.getElementById("notifications");

        fetch(`/notification/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

        fetch(`/read/${email}`, {
            method: "PUT"
        })

        function clearNotifications() {
            fetch(`/notification/${email}`, {
                method: "DELETE",
            })
            .then(response => {
                return(response.text());
            })
            
            notificationsElement.innerText = "";
        }
    </script>
</html>


Thu Jan 11 21:53:15 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:53:15 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan 11 21:53:15 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:53:15 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan 11 21:53:15 2024

GET /user/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:53:15 2024

HTTP/1.1 200 OK

[{"email": "admin", "money": "999999999999800.0", "type": "1", "bonus": "0"}]


Thu Jan 11 21:53:15 2024

GET /notification/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 21:53:15 2024

HTTP/1.1 200 OK

[{"email": "admin", "content": "Boarding pass confirmed\nDear admin,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 11.\nSafe travels!\n\nYour boarding pass number: 30", "date": "2024-01-11", "time": "21:52"}]


Thu Jan 11 21:53:15 2024

PUT /read/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Origin: http://localhost:8001
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin
Content-Length: 0


Thu Jan 11 21:53:15 2024

HTTP/1.1 200 OK




Thu Jan 11 22:10:40 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 22:10:40 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            
            <div id="navbar_list">
                
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>

            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");

            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus=document.getElementById("bonus");
            bonus.innerText=user.bonus;
        })

        }
        else {
            authElements.forEach(item => item.style.display = "flex");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Jan 11 22:10:43 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:10:43 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 22:10:43 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:10:43 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 22:10:44 2024

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:10:44 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Thu Jan 11 22:10:45 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:10:45 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 22:10:45 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:10:45 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Jan 11 22:11:01 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 22:11:01 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            
            <div id="navbar_list">
                
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>

            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");

            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus=document.getElementById("bonus");
            bonus.innerText=user.bonus;
        })

        }
        else {
            authElements.forEach(item => item.style.display = "flex");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Jan 11 22:11:03 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:11:03 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 22:11:03 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:11:03 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 22:11:03 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:11:03 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 22:11:04 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:11:04 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "8995.25", "type": "0", "bonus": "0"}]


Thu Jan 11 22:11:04 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:11:04 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Jan 11 22:41:33 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 22:41:33 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Thu Jan 11 22:41:34 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:41:34 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 22:41:34 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:41:34 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 22:41:34 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:41:34 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 22:41:34 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:41:34 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 22:41:34 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:41:34 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "8995.25", "type": "0", "bonus": "0"}]


Thu Jan 11 22:41:34 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:41:34 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Thu Jan 11 22:41:34 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:41:34 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "1"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "1"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "1"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "1"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "1"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Thu Jan 11 22:41:38 2024

GET /buy/34 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 22:41:38 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            if(message=='OK'){
                swal("Successful", "You clicked the button!", "success");
            }
            else{
                swal("Error", "You clicked the button!", "error");
            }
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            emailSend(email,content,dateString,timeString);
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                           
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        }
     

    </script>
</html>


Thu Jan 11 22:41:39 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/34
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:41:39 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 22:41:39 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/34
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:41:39 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 22:41:39 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/34
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:41:39 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 22:41:39 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/34
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:41:39 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "8995.25", "type": "0", "bonus": "0"}]


Thu Jan 11 22:41:40 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/34
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:41:40 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 22:41:40 2024

GET /ticket/34 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/34
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:41:40 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}]


Thu Jan 11 22:41:42 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/34
Content-Type: text/html
Content-Length: 98
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=34&full_name=&number=&security_code=&expiration_date=&bonus=0
Thu Jan 11 22:41:42 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 22:41:42 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/34
Content-Type: text/html
Content-Length: 329
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 15.\nSafe travels!\n\nYour boarding pass number: 34&date=2024-01-11&time=22:41
Thu Jan 11 22:41:42 2024

HTTP/1.1 200 OK

[]


Thu Jan 11 22:45:00 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 22:45:00 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Thu Jan 11 22:45:01 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:45:01 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 22:45:01 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:45:01 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 22:45:01 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:45:01 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Thu Jan 11 22:45:01 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:45:01 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "8795.0", "type": "0", "bonus": "0"}]


Thu Jan 11 22:45:01 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:45:01 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Thu Jan 11 22:45:01 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:45:01 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "1"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "1"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "1"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "1"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "1"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "1"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Thu Jan 11 22:45:01 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:45:01 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Thu Jan 11 22:45:04 2024

GET /buy/32 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 22:45:04 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            emailSend(email,content,dateString,timeString);
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                swal("Successful", "You have a new notification!", "success");
                        }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
            
        }
     

    </script>
</html>


Thu Jan 11 22:45:05 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/32
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:45:05 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 22:45:05 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/32
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:45:05 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 22:45:06 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/32
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:45:06 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Thu Jan 11 22:45:06 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/32
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:45:06 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "8795.0", "type": "0", "bonus": "0"}]


Thu Jan 11 22:45:06 2024

GET /ticket/32 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/32
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:45:06 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}]


Thu Jan 11 22:45:07 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/32
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 22:45:07 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Thu Jan 11 22:45:14 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/32
Content-Type: text/html
Content-Length: 98
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=32&full_name=&number=&security_code=&expiration_date=&bonus=0
Thu Jan 11 22:45:14 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 22:45:14 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/32
Content-Type: text/html
Content-Length: 329
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 13.\nSafe travels!\n\nYour boarding pass number: 32&date=2024-01-11&time=22:45
Thu Jan 11 22:45:14 2024

HTTP/1.1 200 OK

[]


Thu Jan 11 23:06:18 2024

GET /buy/32 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:06:18 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            emailSend(email,content,dateString,timeString);
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    var result =swal("Successful", "You have a new notification!", "success");
                            if(result){
                                window.location.replace("http://localhost:8001/notification");
                            }
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
            
        }
     

    </script>
</html>


Thu Jan 11 23:06:18 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/32
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:06:18 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 23:06:18 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/32
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:06:18 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 23:06:20 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/32
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:06:20 2024

HTTP/1.1 200 OK

[{"count": "2"}]


Thu Jan 11 23:06:21 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/32
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:06:21 2024

HTTP/1.1 200 OK

[{"count": "2"}]


Thu Jan 11 23:06:21 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/32
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:06:21 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "8594.75", "type": "0", "bonus": "0"}]


Thu Jan 11 23:06:21 2024

GET /ticket/32 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/32
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:06:21 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "1"}]


Thu Jan 11 23:06:33 2024

GET /buy/35 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:06:33 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            emailSend(email,content,dateString,timeString);
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    var result =swal("Successful", "You have a new notification!", "success");
                            if(result){
                                window.location.replace("http://localhost:8001/notification");
                            }
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
            
        }
     

    </script>
</html>


Thu Jan 11 23:06:33 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/35
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:06:33 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 23:06:33 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/35
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:06:33 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 23:06:34 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/35
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:06:34 2024

HTTP/1.1 200 OK

[{"count": "2"}]


Thu Jan 11 23:06:34 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/35
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:06:34 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "8594.75", "type": "0", "bonus": "0"}]


Thu Jan 11 23:06:34 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/35
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:06:34 2024

HTTP/1.1 200 OK

[{"count": "2"}]


Thu Jan 11 23:06:34 2024

GET /ticket/35 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/35
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:06:34 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Thu Jan 11 23:06:38 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/35
Content-Type: text/html
Content-Length: 98
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=35&full_name=&number=&security_code=&expiration_date=&bonus=0
Thu Jan 11 23:06:39 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 23:06:39 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/35
Content-Type: text/html
Content-Length: 329
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 16.\nSafe travels!\n\nYour boarding pass number: 35&date=2024-01-11&time=23:06
Thu Jan 11 23:06:39 2024

HTTP/1.1 200 OK

[]


Thu Jan 11 23:06:39 2024

GET /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/35
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:06:39 2024

HTTP/1.1 200 OK

[]


Thu Jan 11 23:06:59 2024

GET /buy/35 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:06:59 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            emailSend(email,content,dateString,timeString);
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    var result =swal("Successful", "You have a new notification!", "success");
                            if(result){
                                window.location.replace("http://localhost:8001/notification");
                            }
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
            
        }
     

    </script>
</html>


Thu Jan 11 23:07:00 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/35
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:00 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 23:07:00 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/35
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:00 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 23:07:00 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/35
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:00 2024

HTTP/1.1 200 OK

[{"count": "3"}]


Thu Jan 11 23:07:00 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/35
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:00 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "8394.5", "type": "0", "bonus": "0"}]


Thu Jan 11 23:07:00 2024

GET /ticket/35 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/35
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:00 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "1"}]


Thu Jan 11 23:07:00 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/35
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:00 2024

HTTP/1.1 200 OK

[{"count": "3"}]


Thu Jan 11 23:07:03 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/35
Content-Type: text/html
Content-Length: 98
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=35&full_name=&number=&security_code=&expiration_date=&bonus=0
Thu Jan 11 23:07:03 2024

HTTP/1.1 500 Internal Server Error




Thu Jan 11 23:07:07 2024

GET /buy/35 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:07:07 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            emailSend(email,content,dateString,timeString);
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    var result =swal("Successful", "You have a new notification!", "success");
                            if(result){
                                window.location.replace("http://localhost:8001/notification");
                            }
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
            
        }
     

    </script>
</html>


Thu Jan 11 23:07:07 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/35
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:07 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 23:07:07 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/35
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:07 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 23:07:08 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/35
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:08 2024

HTTP/1.1 200 OK

[{"count": "3"}]


Thu Jan 11 23:07:08 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/35
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:08 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "8394.5", "type": "0", "bonus": "0"}]


Thu Jan 11 23:07:08 2024

GET /ticket/35 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/35
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:08 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "1"}]


Thu Jan 11 23:07:08 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/35
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:08 2024

HTTP/1.1 200 OK

[{"count": "3"}]


Thu Jan 11 23:07:10 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/35
Content-Type: text/html
Content-Length: 98
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=35&full_name=&number=&security_code=&expiration_date=&bonus=0
Thu Jan 11 23:07:10 2024

HTTP/1.1 500 Internal Server Error




Thu Jan 11 23:07:14 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:07:14 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Thu Jan 11 23:07:14 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:14 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 23:07:14 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:14 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 23:07:14 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:14 2024

HTTP/1.1 200 OK

[{"count": "3"}]


Thu Jan 11 23:07:14 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:14 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "8394.5", "type": "0", "bonus": "0"}]


Thu Jan 11 23:07:14 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:14 2024

HTTP/1.1 200 OK

[{"count": "3"}]


Thu Jan 11 23:07:14 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:14 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Thu Jan 11 23:07:14 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:14 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "1"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "1"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "1"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "1"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "1"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "1"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "1"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "1"}]


Thu Jan 11 23:07:17 2024

GET /buy/33 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:07:17 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            emailSend(email,content,dateString,timeString);
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    var result =swal("Successful", "You have a new notification!", "success");
                            if(result){
                                window.location.replace("http://localhost:8001/notification");
                            }
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
            
        }
     

    </script>
</html>


Thu Jan 11 23:07:18 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/33
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:18 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 23:07:18 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/33
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:18 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 23:07:18 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/33
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:18 2024

HTTP/1.1 200 OK

[{"count": "3"}]


Thu Jan 11 23:07:18 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/33
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:18 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "8394.5", "type": "0", "bonus": "0"}]


Thu Jan 11 23:07:18 2024

GET /ticket/33 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/33
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:18 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}]


Thu Jan 11 23:07:18 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/33
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:18 2024

HTTP/1.1 200 OK

[{"count": "3"}]


Thu Jan 11 23:07:21 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/33
Content-Type: text/html
Content-Length: 98
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=33&full_name=&number=&security_code=&expiration_date=&bonus=0
Thu Jan 11 23:07:21 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 23:07:21 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/33
Content-Type: text/html
Content-Length: 329
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 14.\nSafe travels!\n\nYour boarding pass number: 33&date=2024-01-11&time=23:07
Thu Jan 11 23:07:21 2024

HTTP/1.1 200 OK

[]


Thu Jan 11 23:07:22 2024

GET /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/33
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:07:22 2024

HTTP/1.1 200 OK

[]


Thu Jan 11 23:07:49 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:07:49 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Thu Jan 11 23:07:49 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:49 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 23:07:49 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:49 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 23:07:50 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:50 2024

HTTP/1.1 200 OK

[{"count": "4"}]


Thu Jan 11 23:07:50 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:50 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "8194.25", "type": "0", "bonus": "0"}]


Thu Jan 11 23:07:50 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:50 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Thu Jan 11 23:07:50 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:50 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "1"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "1"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "1"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "1"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "1"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "1"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "1"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "1"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "1"}]


Thu Jan 11 23:07:50 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:50 2024

HTTP/1.1 200 OK

[{"count": "4"}]


Thu Jan 11 23:07:51 2024

GET /buy/2 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:07:51 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            emailSend(email,content,dateString,timeString);
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    var result =swal("Successful", "You have a new notification!", "success");
                            // if(result){
                            //     window.location.replace("http://localhost:8001/notification");
                            // }
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
            
        }
     

    </script>
</html>


Thu Jan 11 23:07:52 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/2
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:52 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 23:07:52 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/2
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:52 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 23:07:53 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/2
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:53 2024

HTTP/1.1 200 OK

[{"count": "4"}]


Thu Jan 11 23:07:53 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/2
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:53 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "8194.25", "type": "0", "bonus": "0"}]


Thu Jan 11 23:07:53 2024

GET /ticket/2 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/2
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:53 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}]


Thu Jan 11 23:07:53 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/2
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:07:53 2024

HTTP/1.1 200 OK

[{"count": "4"}]


Thu Jan 11 23:07:54 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/2
Content-Type: text/html
Content-Length: 97
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=2&full_name=&number=&security_code=&expiration_date=&bonus=0
Thu Jan 11 23:07:54 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 23:07:55 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/2
Content-Type: text/html
Content-Length: 327
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 2.\nSafe travels!\n\nYour boarding pass number: 2&date=2024-01-11&time=23:07
Thu Jan 11 23:07:55 2024

HTTP/1.1 200 OK

[]


Thu Jan 11 23:16:40 2024

GET /buy/2 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:16:40 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            emailSend(email,content,dateString,timeString);
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button swal-button--confirm")
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notification");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
            
        }
     

    </script>
</html>


Thu Jan 11 23:16:41 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/2
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:16:41 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 23:16:41 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/2
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:16:41 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 23:16:41 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/2
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:16:41 2024

HTTP/1.1 200 OK

[{"count": "5"}]


Thu Jan 11 23:16:41 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/2
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:16:41 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "8093.0", "type": "0", "bonus": "0"}]


Thu Jan 11 23:16:41 2024

GET /ticket/2 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/2
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:16:41 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}]


Thu Jan 11 23:16:41 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/2
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:16:41 2024

HTTP/1.1 200 OK

[{"count": "5"}]


Thu Jan 11 23:16:44 2024

GET /buy/2 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:16:44 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            emailSend(email,content,dateString,timeString);
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button swal-button--confirm")
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notification");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
            
        }
     

    </script>
</html>


Thu Jan 11 23:16:45 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/2
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:16:45 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 23:16:45 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/2
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:16:45 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 23:16:45 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/2
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:16:45 2024

HTTP/1.1 200 OK

[{"count": "5"}]


Thu Jan 11 23:16:46 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/2
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:16:46 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "8093.0", "type": "0", "bonus": "0"}]


Thu Jan 11 23:16:46 2024

GET /ticket/2 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/2
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:16:46 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}]


Thu Jan 11 23:16:46 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/2
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:16:46 2024

HTTP/1.1 200 OK

[{"count": "5"}]


Thu Jan 11 23:16:50 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/2
Content-Type: text/html
Content-Length: 97
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=2&full_name=&number=&security_code=&expiration_date=&bonus=0
Thu Jan 11 23:16:50 2024

HTTP/1.1 500 Internal Server Error




Thu Jan 11 23:16:54 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:16:54 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Thu Jan 11 23:16:55 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:16:55 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 23:16:55 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:16:55 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 23:16:55 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:16:55 2024

HTTP/1.1 200 OK

[{"count": "5"}]


Thu Jan 11 23:16:55 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:16:55 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "8093.0", "type": "0", "bonus": "0"}]


Thu Jan 11 23:16:55 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:16:55 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Thu Jan 11 23:16:55 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:16:55 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "1"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "1"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "1"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "1"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "1"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "1"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "1"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "1"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "1"}]


Thu Jan 11 23:16:55 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:16:55 2024

HTTP/1.1 200 OK

[{"count": "5"}]


Thu Jan 11 23:16:57 2024

GET /buy/24 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:16:57 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            emailSend(email,content,dateString,timeString);
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button swal-button--confirm")
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notification");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
            
        }
     

    </script>
</html>


Thu Jan 11 23:16:58 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/24
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:16:58 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 23:16:58 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/24
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:16:58 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 23:16:59 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/24
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:16:59 2024

HTTP/1.1 200 OK

[{"count": "5"}]


Thu Jan 11 23:16:59 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/24
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:16:59 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "8093.0", "type": "0", "bonus": "0"}]


Thu Jan 11 23:16:59 2024

GET /ticket/24 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/24
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:16:59 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}]


Thu Jan 11 23:16:59 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/24
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:16:59 2024

HTTP/1.1 200 OK

[{"count": "5"}]


Thu Jan 11 23:17:01 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/24
Content-Type: text/html
Content-Length: 98
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=24&full_name=&number=&security_code=&expiration_date=&bonus=0
Thu Jan 11 23:17:01 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 23:17:01 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/24
Content-Type: text/html
Content-Length: 328
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 5.\nSafe travels!\n\nYour boarding pass number: 24&date=2024-01-11&time=23:17
Thu Jan 11 23:17:01 2024

HTTP/1.1 200 OK

[]


Thu Jan 11 23:18:09 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:18:09 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Thu Jan 11 23:18:09 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:18:09 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 23:18:09 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:18:09 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 23:18:10 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:18:10 2024

HTTP/1.1 200 OK

[{"count": "6"}]


Thu Jan 11 23:18:10 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:18:10 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7991.79", "type": "0", "bonus": "0"}]


Thu Jan 11 23:18:10 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:18:10 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Thu Jan 11 23:18:10 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:18:10 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "1"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "1"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "1"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "1"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "1"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "1"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "1"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "1"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "1"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "1"}]


Thu Jan 11 23:18:10 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:18:10 2024

HTTP/1.1 200 OK

[{"count": "6"}]


Thu Jan 11 23:18:11 2024

GET /buy/28 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:18:11 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = 0; // diem thuong moi cua nguoi dung
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            emailSend(email,content,dateString,timeString);
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notification");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
            
        }
     

    </script>
</html>


Thu Jan 11 23:18:12 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/28
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:18:12 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 23:18:12 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/28
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:18:12 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 23:18:12 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:18:12 2024

HTTP/1.1 200 OK

[{"count": "6"}]


Thu Jan 11 23:18:13 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:18:13 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7991.79", "type": "0", "bonus": "0"}]


Thu Jan 11 23:18:13 2024

GET /ticket/28 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:18:13 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}]


Thu Jan 11 23:18:13 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:18:13 2024

HTTP/1.1 200 OK

[{"count": "6"}]


Thu Jan 11 23:18:14 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Content-Type: text/html
Content-Length: 98
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=28&full_name=&number=&security_code=&expiration_date=&bonus=0
Thu Jan 11 23:18:14 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 23:18:14 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Content-Type: text/html
Content-Length: 328
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28&date=2024-01-11&time=23:18
Thu Jan 11 23:18:14 2024

HTTP/1.1 200 OK

[]


Thu Jan 11 23:18:16 2024

GET /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/28
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:18:16 2024

HTTP/1.1 200 OK

[]


Thu Jan 11 23:21:00 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Jan 11 23:21:00 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/notifications.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>

            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>


        <button onclick="clearNotifications()">Clear</button>
        <ul id="notifications"></ul>
    </body>
    <script>
         //navbar
         const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            // fetch(`/unread/${email}`, {
            //     method: "GET",
            // })
            // .then(response => {
            //     return(response.text());
            // })
            // .then(data => {
            //     const user = JSON.parse(data)[0];
            //     const unread = document.getElementById("unread");
            //     unread.innerText = user.count;
            //     const money = document.getElementById("money");
            // })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        

        const notificationsElement = document.getElementById("notifications");

        fetch(`/notification/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

        fetch(`/read/${email}`, {
            method: "PUT"
        })

        function clearNotifications() {
            fetch(`/notification/${email}`, {
                method: "DELETE",
            })
            .then(response => {
                return(response.text());
            })
            
            notificationsElement.innerText = "";
        }
    </script>
</html>


Thu Jan 11 23:21:00 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:00 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan 11 23:21:00 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:00 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan 11 23:21:00 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:00 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:00 2024

PUT /read/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin
Content-Length: 0


Thu Jan 11 23:21:00 2024

HTTP/1.1 200 OK




Thu Jan 11 23:21:01 2024

GET /notification/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:01 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 11.\nSafe travels!\n\nYour boarding pass number: 30", "date": "2024-01-11", "time": "21:53"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 15.\nSafe travels!\n\nYour boarding pass number: 34", "date": "2024-01-11", "time": "22:41"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 13.\nSafe travels!\n\nYour boarding pass number: 32", "date": "2024-01-11", "time": "22:45"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 16.\nSafe travels!\n\nYour boarding pass number: 35", "date": "2024-01-11", "time": "23:06"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 14.\nSafe travels!\n\nYour boarding pass number: 33", "date": "2024-01-11", "time": "23:07"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 2.\nSafe travels!\n\nYour boarding pass number: 2", "date": "2024-01-11", "time": "23:07"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 5.\nSafe travels!\n\nYour boarding pass number: 24", "date": "2024-01-11", "time": "23:17"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28", "date": "2024-01-11", "time": "23:18"}]


Thu Jan 11 23:21:07 2024

DELETE /notification/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:07 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 23:21:08 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:08 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        

        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        
        
        if (email == null || email == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("email").innerHTML = email;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Thu Jan 11 23:21:08 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:08 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:08 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:08 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:09 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:09 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:09 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:09 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:09 2024

GET /inventory/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:09 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "2", "seat": "2", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "23", "seat": "4", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "24", "seat": "5", "price": "101.21"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "25", "seat": "6", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "26", "seat": "7", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "27", "seat": "8", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "28", "seat": "9", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "seat": "10", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "30", "seat": "11", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "31", "seat": "12", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "32", "seat": "13", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "33", "seat": "14", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "34", "seat": "15", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "35", "seat": "16", "price": "200.25"}]


Thu Jan 11 23:21:09 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:09 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:09 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:09 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:14 2024

GET /info/35 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:14 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="email"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info" class="print">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
            })
        
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:200,
                width:200,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Thu Jan 11 23:21:14 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/35
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:14 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:14 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/35
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:14 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:15 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/35
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:15 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:15 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/35
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:15 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:15 2024

GET /ticket/35 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/35
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:15 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "1"}]


Thu Jan 11 23:21:17 2024

DELETE /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/35
Content-Type: text/html
Content-Length: 54
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=35&money=-100.125
Thu Jan 11 23:21:17 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 23:21:17 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/35
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:17 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        

        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        
        
        if (email == null || email == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("email").innerHTML = email;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Thu Jan 11 23:21:17 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:17 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:17 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:17 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:17 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:17 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:17 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:17 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:17 2024

GET /inventory/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:17 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "2", "seat": "2", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "23", "seat": "4", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "24", "seat": "5", "price": "101.21"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "25", "seat": "6", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "26", "seat": "7", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "27", "seat": "8", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "28", "seat": "9", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "seat": "10", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "30", "seat": "11", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "31", "seat": "12", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "32", "seat": "13", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "33", "seat": "14", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "34", "seat": "15", "price": "200.25"}]


Thu Jan 11 23:21:17 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:17 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:17 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:17 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:18 2024

GET /info/23 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:18 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="email"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info" class="print">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
            })
        
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:200,
                width:200,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Thu Jan 11 23:21:19 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/23
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:19 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:19 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/23
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:19 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:19 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/23
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:19 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:19 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/23
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:19 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:19 2024

GET /ticket/23 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/23
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:19 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "1"}]


Thu Jan 11 23:21:20 2024

DELETE /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/23
Content-Type: text/html
Content-Length: 53
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=23&money=-50.125
Thu Jan 11 23:21:20 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 23:21:20 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/23
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:20 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        

        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        
        
        if (email == null || email == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("email").innerHTML = email;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Thu Jan 11 23:21:20 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:20 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:20 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:20 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:20 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:20 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:20 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:20 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:20 2024

GET /inventory/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:20 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "2", "seat": "2", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "24", "seat": "5", "price": "101.21"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "25", "seat": "6", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "26", "seat": "7", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "27", "seat": "8", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "28", "seat": "9", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "seat": "10", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "30", "seat": "11", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "31", "seat": "12", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "32", "seat": "13", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "33", "seat": "14", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "34", "seat": "15", "price": "200.25"}]


Thu Jan 11 23:21:20 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:20 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:20 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:20 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:21 2024

GET /info/2 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:21 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="email"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info" class="print">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
            })
        
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:200,
                width:200,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Thu Jan 11 23:21:21 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/2
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:21 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:21 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/2
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:21 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:22 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/2
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:22 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:22 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/2
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:22 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:22 2024

GET /ticket/2 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/2
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:22 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}]


Thu Jan 11 23:21:22 2024

DELETE /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/2
Content-Type: text/html
Content-Length: 52
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=2&money=-50.625
Thu Jan 11 23:21:22 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 23:21:23 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/2
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:23 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        

        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        
        
        if (email == null || email == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("email").innerHTML = email;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Thu Jan 11 23:21:23 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:23 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:23 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:23 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:23 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:23 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:23 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:23 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:23 2024

GET /inventory/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:23 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "24", "seat": "5", "price": "101.21"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "25", "seat": "6", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "26", "seat": "7", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "27", "seat": "8", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "28", "seat": "9", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "seat": "10", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "30", "seat": "11", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "31", "seat": "12", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "32", "seat": "13", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "33", "seat": "14", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "34", "seat": "15", "price": "200.25"}]


Thu Jan 11 23:21:23 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:23 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:23 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:23 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:25 2024

GET /info/25 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:25 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="email"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info" class="print">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
            })
        
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:200,
                width:200,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Thu Jan 11 23:21:25 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/25
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:25 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:25 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/25
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:25 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:25 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:25 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:26 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:26 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:26 2024

GET /ticket/25 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:26 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "1"}]


Thu Jan 11 23:21:26 2024

DELETE /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/25
Content-Type: text/html
Content-Length: 53
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=25&money=-50.625
Thu Jan 11 23:21:26 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 23:21:26 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/25
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:26 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        

        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        
        
        if (email == null || email == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("email").innerHTML = email;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Thu Jan 11 23:21:26 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:26 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:26 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:26 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:26 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:26 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:26 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:26 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:26 2024

GET /inventory/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:26 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "24", "seat": "5", "price": "101.21"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "26", "seat": "7", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "27", "seat": "8", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "28", "seat": "9", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "seat": "10", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "30", "seat": "11", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "31", "seat": "12", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "32", "seat": "13", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "33", "seat": "14", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "34", "seat": "15", "price": "200.25"}]


Thu Jan 11 23:21:26 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:26 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:27 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:27 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:28 2024

GET /info/27 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:28 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="email"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info" class="print">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
            })
        
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:200,
                width:200,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Thu Jan 11 23:21:28 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/27
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:28 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:28 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/27
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:28 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:28 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:28 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:28 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:28 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:28 2024

GET /ticket/27 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:28 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}]


Thu Jan 11 23:21:29 2024

DELETE /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/27
Content-Type: text/html
Content-Length: 53
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=27&money=-50.625
Thu Jan 11 23:21:29 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 23:21:29 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/27
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:29 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        

        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        
        
        if (email == null || email == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("email").innerHTML = email;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Thu Jan 11 23:21:29 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:29 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:29 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:29 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:29 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:29 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:29 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:29 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:30 2024

GET /inventory/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:30 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "24", "seat": "5", "price": "101.21"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "26", "seat": "7", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "28", "seat": "9", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "seat": "10", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "30", "seat": "11", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "31", "seat": "12", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "32", "seat": "13", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "33", "seat": "14", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "34", "seat": "15", "price": "200.25"}]


Thu Jan 11 23:21:30 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:30 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:30 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:30 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:31 2024

GET /info/28 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:31 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="email"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info" class="print">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
            })
        
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:200,
                width:200,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Thu Jan 11 23:21:31 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/28
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:31 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:31 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/28
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:31 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:31 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:31 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:31 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:31 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:31 2024

GET /ticket/28 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:31 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "1"}]


Thu Jan 11 23:21:32 2024

DELETE /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/28
Content-Type: text/html
Content-Length: 53
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=28&money=-50.625
Thu Jan 11 23:21:32 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 23:21:32 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/28
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:32 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        

        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        
        
        if (email == null || email == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("email").innerHTML = email;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Thu Jan 11 23:21:32 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:32 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:32 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:32 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:32 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:32 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:32 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:32 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:32 2024

GET /inventory/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:32 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "24", "seat": "5", "price": "101.21"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "26", "seat": "7", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "seat": "10", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "30", "seat": "11", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "31", "seat": "12", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "32", "seat": "13", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "33", "seat": "14", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "34", "seat": "15", "price": "200.25"}]


Thu Jan 11 23:21:32 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:32 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:32 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:32 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:33 2024

GET /info/26 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:33 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="email"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info" class="print">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
            })
        
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:200,
                width:200,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Thu Jan 11 23:21:33 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/26
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:33 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:34 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/26
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:34 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:34 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/26
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:34 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:34 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/26
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:34 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:34 2024

GET /ticket/26 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/26
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:34 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "1"}]


Thu Jan 11 23:21:35 2024

DELETE /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/26
Content-Type: text/html
Content-Length: 53
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=26&money=-50.625
Thu Jan 11 23:21:35 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 23:21:35 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/26
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:35 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        

        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        
        
        if (email == null || email == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("email").innerHTML = email;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Thu Jan 11 23:21:35 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:35 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:35 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:35 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:35 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:35 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:35 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:35 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:35 2024

GET /inventory/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:35 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "24", "seat": "5", "price": "101.21"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "seat": "10", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "30", "seat": "11", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "31", "seat": "12", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "32", "seat": "13", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "33", "seat": "14", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "34", "seat": "15", "price": "200.25"}]


Thu Jan 11 23:21:35 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:35 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:35 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:35 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:36 2024

GET /info/30 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:36 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="email"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info" class="print">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
            })
        
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:200,
                width:200,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Thu Jan 11 23:21:37 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/30
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:37 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:37 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/30
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:37 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:37 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/30
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:37 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:37 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/30
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:37 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:37 2024

GET /ticket/30 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/30
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:37 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}]


Thu Jan 11 23:21:38 2024

DELETE /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/30
Content-Type: text/html
Content-Length: 54
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=30&money=-100.125
Thu Jan 11 23:21:38 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 23:21:38 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/30
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:38 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        

        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        
        
        if (email == null || email == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("email").innerHTML = email;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Thu Jan 11 23:21:38 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:38 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:38 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:38 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:38 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:38 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:38 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:38 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:38 2024

GET /inventory/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:38 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "24", "seat": "5", "price": "101.21"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "seat": "10", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "31", "seat": "12", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "32", "seat": "13", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "33", "seat": "14", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "34", "seat": "15", "price": "200.25"}]


Thu Jan 11 23:21:38 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:38 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:38 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:38 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:39 2024

GET /info/32 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:39 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="email"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info" class="print">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
            })
        
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:200,
                width:200,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Thu Jan 11 23:21:40 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/32
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:40 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:40 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/32
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:40 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:40 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/32
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:40 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:40 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/32
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:40 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:40 2024

GET /ticket/32 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/32
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:40 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "1"}]


Thu Jan 11 23:21:41 2024

DELETE /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/32
Content-Type: text/html
Content-Length: 54
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=32&money=-100.125
Thu Jan 11 23:21:41 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 23:21:41 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/32
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:41 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        

        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        
        
        if (email == null || email == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("email").innerHTML = email;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Thu Jan 11 23:21:41 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:41 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:41 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:41 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:41 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:41 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:41 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:41 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:41 2024

GET /inventory/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:41 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "24", "seat": "5", "price": "101.21"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "seat": "10", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "31", "seat": "12", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "33", "seat": "14", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "34", "seat": "15", "price": "200.25"}]


Thu Jan 11 23:21:41 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:41 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:41 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:41 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:42 2024

GET /info/31 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:42 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="email"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info" class="print">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
            })
        
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:200,
                width:200,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Thu Jan 11 23:21:43 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/31
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:43 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:43 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/31
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:43 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:43 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/31
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:43 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:43 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/31
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:43 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:43 2024

GET /ticket/31 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/31
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:43 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "1"}]


Thu Jan 11 23:21:44 2024

DELETE /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/31
Content-Type: text/html
Content-Length: 54
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=31&money=-100.125
Thu Jan 11 23:21:44 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 23:21:44 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/31
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:44 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        

        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        
        
        if (email == null || email == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("email").innerHTML = email;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Thu Jan 11 23:21:44 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:44 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:44 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:44 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:44 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:44 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:44 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:44 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:44 2024

GET /inventory/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:44 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "24", "seat": "5", "price": "101.21"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "seat": "10", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "33", "seat": "14", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "34", "seat": "15", "price": "200.25"}]


Thu Jan 11 23:21:44 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:44 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:44 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:44 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:45 2024

GET /info/33 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:45 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="email"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info" class="print">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
            })
        
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:200,
                width:200,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Thu Jan 11 23:21:45 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/33
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:45 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:45 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/33
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:45 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:46 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/33
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:46 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:46 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/33
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:46 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:46 2024

GET /ticket/33 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/33
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:46 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "1"}]


Thu Jan 11 23:21:46 2024

DELETE /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/33
Content-Type: text/html
Content-Length: 54
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=33&money=-100.125
Thu Jan 11 23:21:46 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 23:21:47 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/33
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:47 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        

        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        
        
        if (email == null || email == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("email").innerHTML = email;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Thu Jan 11 23:21:47 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:47 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:47 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:47 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:47 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:47 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:47 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:47 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:47 2024

GET /inventory/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:47 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "24", "seat": "5", "price": "101.21"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "seat": "10", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "34", "seat": "15", "price": "200.25"}]


Thu Jan 11 23:21:47 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:47 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:47 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:47 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:48 2024

GET /info/34 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:48 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="email"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info" class="print">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
            })
        
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:200,
                width:200,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Thu Jan 11 23:21:48 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/34
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:48 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:48 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/34
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:48 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:48 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/34
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:48 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:48 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/34
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:48 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:49 2024

GET /ticket/34 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/34
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:49 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "1"}]


Thu Jan 11 23:21:49 2024

DELETE /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/34
Content-Type: text/html
Content-Length: 54
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=34&money=-100.125
Thu Jan 11 23:21:49 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 23:21:49 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/34
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:49 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        

        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        
        
        if (email == null || email == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("email").innerHTML = email;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Thu Jan 11 23:21:49 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:49 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:49 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:49 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:49 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:49 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:49 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:49 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:49 2024

GET /inventory/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:49 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "24", "seat": "5", "price": "101.21"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "seat": "10", "price": "200.25"}]


Thu Jan 11 23:21:49 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:49 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:49 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:49 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:50 2024

GET /info/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:50 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="email"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info" class="print">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
            })
        
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:200,
                width:200,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Thu Jan 11 23:21:51 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/29
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:51 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:51 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/29
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:51 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:51 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:51 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:51 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:51 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:51 2024

GET /ticket/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:51 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "1"}]


Thu Jan 11 23:21:51 2024

DELETE /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/29
Content-Type: text/html
Content-Length: 54
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=29&money=-100.125
Thu Jan 11 23:21:51 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 23:21:51 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/29
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:51 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        

        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        
        
        if (email == null || email == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("email").innerHTML = email;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Thu Jan 11 23:21:52 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:52 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:52 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:52 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:52 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:52 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:52 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:52 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:52 2024

GET /inventory/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:52 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "24", "seat": "5", "price": "101.21"}]


Thu Jan 11 23:21:52 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:52 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:52 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:52 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:53 2024

GET /info/24 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:53 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="email"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info" class="print">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
            })
        
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:200,
                width:200,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Thu Jan 11 23:21:53 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/24
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:53 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:53 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/24
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:53 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan 11 23:21:54 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/24
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:54 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:54 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/24
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:54 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:54 2024

GET /ticket/24 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/24
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:54 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "1"}]


Thu Jan 11 23:21:54 2024

DELETE /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/24
Content-Type: text/html
Content-Length: 53
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=24&money=-50.605
Thu Jan 11 23:21:54 2024

HTTP/1.1 200 OK

OK


Thu Jan 11 23:21:54 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/24
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:21:54 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        

        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        
        
        if (email == null || email == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("email").innerHTML = email;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Thu Jan 11 23:21:55 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:55 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:55 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:55 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan 11 23:21:55 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:55 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:55 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:55 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:21:55 2024

GET /inventory/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:55 2024

HTTP/1.1 200 OK

[]


Thu Jan 11 23:21:55 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:55 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:21:55 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:21:55 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:36:05 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:36:05 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Thu Jan 11 23:36:06 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:36:06 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 23:36:07 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:36:07 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Thu Jan 11 23:36:07 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:36:07 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:36:07 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:36:07 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Thu Jan 11 23:36:08 2024

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:36:08 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Thu Jan 11 23:36:10 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:36:10 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Thu Jan 11 23:36:11 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:36:11 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 23:36:11 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:36:11 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan 11 23:36:11 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:36:11 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:36:11 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:36:11 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:36:11 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:36:11 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Thu Jan 11 23:36:11 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:36:11 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Thu Jan 11 23:36:11 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:36:11 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:36:13 2024

GET /buy/30 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan 11 23:36:13 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: <span id="bonus"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
               
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus=document.getElementById("bonus");
            bonus.innerText=user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonus = Math.floor(ticket.price/100); // diem thuong cua moi nguoi khi mua ve 
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            emailSend(email,content,dateString,timeString);
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
            
        }
     

    </script>
</html>


Thu Jan 11 23:36:14 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/30
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:36:14 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 23:36:14 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/30
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:36:14 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Thu Jan 11 23:36:14 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/30
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:36:14 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:36:15 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/30
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:36:15 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Thu Jan 11 23:36:15 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/30
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:36:15 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan 11 23:36:15 2024

GET /ticket/30 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/30
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan 11 23:36:15 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:01:01 2024

GET /buy/30 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:01:01 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonusAll}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            emailSend(email,content,dateString,timeString);
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=user.bonus+Math.floor(ticket.price/100);
            })
            console.log(bonusAll);
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
            
        }
     

    </script>
</html>


Fri Jan 12 00:01:02 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/30
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:01:02 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:01:02 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/30
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:01:02 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:01:03 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/30
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:01:03 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:01:03 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/30
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:01:03 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:01:03 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/30
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:01:03 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Fri Jan 12 00:01:03 2024

GET /ticket/30 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/30
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:01:03 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:01:53 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/30
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:01:53 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7890.54", "type": "0", "bonus": "0"}]


Fri Jan 12 00:01:53 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/30
Content-Type: text/html
Content-Length: 98
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=30&full_name=&number=&security_code=&expiration_date=&bonus=0
Fri Jan 12 00:01:53 2024

HTTP/1.1 200 OK

OK


Fri Jan 12 00:01:53 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/30
Content-Type: text/html
Content-Length: 329
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 11.\nSafe travels!\n\nYour boarding pass number: 30&date=2024-01-11&time=00:01
Fri Jan 12 00:01:53 2024

HTTP/1.1 200 OK

[]


Fri Jan 12 00:02:02 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/30
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:02:02 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/notifications.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>

            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>


        <button onclick="clearNotifications()">Clear</button>
        <ul id="notifications"></ul>
    </body>
    <script>
         //navbar
         const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            // fetch(`/unread/${email}`, {
            //     method: "GET",
            // })
            // .then(response => {
            //     return(response.text());
            // })
            // .then(data => {
            //     const user = JSON.parse(data)[0];
            //     const unread = document.getElementById("unread");
            //     unread.innerText = user.count;
            //     const money = document.getElementById("money");
            // })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        

        const notificationsElement = document.getElementById("notifications");

        fetch(`/notification/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

        fetch(`/read/${email}`, {
            method: "PUT"
        })

        function clearNotifications() {
            fetch(`/notification/${email}`, {
                method: "DELETE",
            })
            .then(response => {
                return(response.text());
            })
            
            notificationsElement.innerText = "";
        }
    </script>
</html>


Fri Jan 12 00:02:02 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:02:02 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Fri Jan 12 00:02:02 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:02:02 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Fri Jan 12 00:02:03 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:02:03 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7690.29", "type": "0", "bonus": "0"}]


Fri Jan 12 00:02:03 2024

GET /notification/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:02:03 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 11.\nSafe travels!\n\nYour boarding pass number: 30", "date": "2024-01-11", "time": "00:01"}]


Fri Jan 12 00:02:03 2024

PUT /read/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin
Content-Length: 0


Fri Jan 12 00:02:03 2024

HTTP/1.1 200 OK




Fri Jan 12 00:02:10 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:02:10 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Fri Jan 12 00:02:10 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:02:10 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:02:10 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:02:10 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:02:10 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:02:10 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:02:10 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:02:10 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7690.29", "type": "0", "bonus": "0"}]


Fri Jan 12 00:02:10 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:02:10 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:02:10 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:02:10 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Fri Jan 12 00:02:11 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:02:11 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:02:13 2024

GET /buy/27 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:02:13 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonusAll}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            emailSend(email,content,dateString,timeString);
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=user.bonus+Math.floor(ticket.price/100);
            })
            console.log(bonusAll);
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
            
        }
     

    </script>
</html>


Fri Jan 12 00:02:13 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/27
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:02:13 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:02:13 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/27
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:02:13 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:02:14 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:02:14 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:02:14 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:02:14 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7690.29", "type": "0", "bonus": "0"}]


Fri Jan 12 00:02:15 2024

GET /ticket/27 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:02:15 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}]


Fri Jan 12 00:02:15 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:02:15 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:03:28 2024

GET /buy/27 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:03:28 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonusAll}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            emailSend(email,content,dateString,timeString);
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=user.bonus+Math.floor(ticket.price/100);
                console.log(`1.....${bonusAll}`)
            })
            console.log(`2.....${bonusAll}`);
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
            
        }
     

    </script>
</html>


Fri Jan 12 00:03:28 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/27
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:03:28 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:03:28 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/27
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:03:28 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:03:28 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:03:28 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:03:28 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:03:28 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7690.29", "type": "0", "bonus": "0"}]


Fri Jan 12 00:03:28 2024

GET /ticket/27 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:03:28 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}]


Fri Jan 12 00:03:28 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:03:28 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:03:33 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:03:33 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Fri Jan 12 00:03:34 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:03:34 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:03:34 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:03:34 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:03:34 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:03:34 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:03:34 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:03:34 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7690.29", "type": "0", "bonus": "0"}]


Fri Jan 12 00:03:35 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:03:35 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Fri Jan 12 00:03:35 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:03:35 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:03:35 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:03:35 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:03:36 2024

GET /buy/27 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:03:36 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonusAll}`
            }

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            emailSend(email,content,dateString,timeString);
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=user.bonus+Math.floor(ticket.price/100);
                console.log(`1.....${bonusAll}`)
            })
            console.log(`2.....${bonusAll}`);
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
            
        }
     

    </script>
</html>


Fri Jan 12 00:03:37 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/27
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:03:37 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:03:37 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/27
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:03:37 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:03:38 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:03:38 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:03:38 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:03:38 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7690.29", "type": "0", "bonus": "0"}]


Fri Jan 12 00:03:38 2024

GET /ticket/27 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:03:38 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}]


Fri Jan 12 00:03:38 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:03:38 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:03:41 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:03:41 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7690.29", "type": "0", "bonus": "0"}]


Fri Jan 12 00:03:41 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Content-Type: text/html
Content-Length: 98
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=27&full_name=&number=&security_code=&expiration_date=&bonus=0
Fri Jan 12 00:03:41 2024

HTTP/1.1 200 OK

OK


Fri Jan 12 00:03:41 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/27
Content-Type: text/html
Content-Length: 328
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 8.\nSafe travels!\n\nYour boarding pass number: 27&date=2024-01-11&time=00:03
Fri Jan 12 00:03:41 2024

HTTP/1.1 200 OK

[]


Fri Jan 12 00:16:26 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:16:26 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Fri Jan 12 00:16:27 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:27 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:16:27 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:27 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Fri Jan 12 00:16:27 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:27 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:16:27 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:27 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Fri Jan 12 00:16:27 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:27 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:16:28 2024

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:28 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Fri Jan 12 00:16:29 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:16:29 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Fri Jan 12 00:16:29 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:29 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:16:29 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:29 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:16:30 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:30 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Fri Jan 12 00:16:30 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:30 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:16:30 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:30 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Fri Jan 12 00:16:30 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:30 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:16:30 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:30 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Fri Jan 12 00:16:32 2024

GET /buy/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:16:32 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            function createOptionsOwn(bonus) {
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            };
        };

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            };
            emailSend(email,content,dateString,timeString);
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=user.bonus+Math.floor(ticket.price/100);
                ownNotification(bonusAll);
                
            })
            function ownNotification(bonus) {
                console.log(bonus);
            fetch("/own", createOptionsOwn(bonus))
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
        }
            
        }
     

    </script>
</html>


Fri Jan 12 00:16:34 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/29
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:34 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:16:34 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/29
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:34 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:16:34 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:34 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Fri Jan 12 00:16:34 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:34 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:16:35 2024

GET /ticket/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:35 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:16:35 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:35 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Fri Jan 12 00:16:38 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:38 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:16:38 2024

GET /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:38 2024

HTTP/1.1 200 OK

[]


Fri Jan 12 00:16:38 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Content-Type: text/html
Content-Length: 329
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 10.\nSafe travels!\n\nYour boarding pass number: 29&date=2024-01-11&time=00:16
Fri Jan 12 00:16:38 2024

HTTP/1.1 200 OK

[]


Fri Jan 12 00:16:42 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/29
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:16:42 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/notifications.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>

            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>


        <button onclick="clearNotifications()">Clear</button>
        <ul id="notifications"></ul>
    </body>
    <script>
         //navbar
         const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            // fetch(`/unread/${email}`, {
            //     method: "GET",
            // })
            // .then(response => {
            //     return(response.text());
            // })
            // .then(data => {
            //     const user = JSON.parse(data)[0];
            //     const unread = document.getElementById("unread");
            //     unread.innerText = user.count;
            //     const money = document.getElementById("money");
            // })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        

        const notificationsElement = document.getElementById("notifications");

        fetch(`/notification/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

        fetch(`/read/${email}`, {
            method: "PUT"
        })

        function clearNotifications() {
            fetch(`/notification/${email}`, {
                method: "DELETE",
            })
            .then(response => {
                return(response.text());
            })
            
            notificationsElement.innerText = "";
        }
    </script>
</html>


Fri Jan 12 00:16:43 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:43 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Fri Jan 12 00:16:43 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:43 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Fri Jan 12 00:16:43 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:43 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:16:43 2024

PUT /read/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin
Content-Length: 0


Fri Jan 12 00:16:43 2024

HTTP/1.1 200 OK




Fri Jan 12 00:16:43 2024

GET /notification/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:43 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 11.\nSafe travels!\n\nYour boarding pass number: 30", "date": "2024-01-11", "time": "00:01"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 8.\nSafe travels!\n\nYour boarding pass number: 27", "date": "2024-01-11", "time": "00:03"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 10.\nSafe travels!\n\nYour boarding pass number: 29", "date": "2024-01-11", "time": "00:16"}]


Fri Jan 12 00:16:45 2024

DELETE /notification/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:45 2024

HTTP/1.1 200 OK

OK


Fri Jan 12 00:16:50 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:16:50 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Fri Jan 12 00:16:51 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:51 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:16:51 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:51 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:16:51 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:51 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:16:51 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:51 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:16:51 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:51 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Fri Jan 12 00:16:51 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:51 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:16:51 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:51 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:16:53 2024

GET /buy/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:16:53 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            function createOptionsOwn(bonus) {
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            };
        };

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            };
            emailSend(email,content,dateString,timeString);
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=user.bonus+Math.floor(ticket.price/100);
                ownNotification(bonusAll);
                
            })
            function ownNotification(bonus) {
                console.log(bonus);
            fetch("/own", createOptionsOwn(bonus))
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
        }
            
        }
     

    </script>
</html>


Fri Jan 12 00:16:54 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/29
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:54 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:16:54 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/29
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:54 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:16:54 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:54 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:16:55 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:55 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:16:55 2024

GET /ticket/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:55 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:16:55 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:16:55 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:19:13 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:19:13 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Fri Jan 12 00:19:14 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:19:14 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:19:14 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:19:14 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:19:14 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:19:14 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:19:14 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:19:14 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:19:14 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:19:14 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Fri Jan 12 00:19:14 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:19:14 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:19:14 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:19:14 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:19:16 2024

GET /buy/25 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:19:16 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            function createOptionsOwn(bonus) {
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            };
        };

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            };
            emailSend(email,content,dateString,timeString);
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=user.bonus+Math.floor(ticket.price/100);
                console.log(`1....... ${typeof Math.floor(ticket.price/100)}`);
                ownNotification(bonusAll);
                
            })
            function ownNotification(bonus) {
                console.log(`2.......${bonus}`);
            fetch("/own", createOptionsOwn(bonus))
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
        }
            
        }
     

    </script>
</html>


Fri Jan 12 00:19:17 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/25
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:19:17 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:19:17 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/25
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:19:17 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:19:18 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:19:18 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:19:18 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:19:18 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:19:18 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:19:18 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:19:18 2024

GET /ticket/25 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:19:18 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}]


Fri Jan 12 00:19:20 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:19:20 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:19:20 2024

GET /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:19:20 2024

HTTP/1.1 200 OK

[]


Fri Jan 12 00:19:21 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Content-Type: text/html
Content-Length: 328
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25&date=2024-01-11&time=00:19
Fri Jan 12 00:19:21 2024

HTTP/1.1 200 OK

[]


Fri Jan 12 00:20:04 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/25
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:20:04 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/notifications.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>

            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>


        <button onclick="clearNotifications()">Clear</button>
        <ul id="notifications"></ul>
    </body>
    <script>
         //navbar
         const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            // fetch(`/unread/${email}`, {
            //     method: "GET",
            // })
            // .then(response => {
            //     return(response.text());
            // })
            // .then(data => {
            //     const user = JSON.parse(data)[0];
            //     const unread = document.getElementById("unread");
            //     unread.innerText = user.count;
            //     const money = document.getElementById("money");
            // })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        

        const notificationsElement = document.getElementById("notifications");

        fetch(`/notification/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

        fetch(`/read/${email}`, {
            method: "PUT"
        })

        function clearNotifications() {
            fetch(`/notification/${email}`, {
                method: "DELETE",
            })
            .then(response => {
                return(response.text());
            })
            
            notificationsElement.innerText = "";
        }
    </script>
</html>


Fri Jan 12 00:20:05 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:20:05 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Fri Jan 12 00:20:05 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:20:05 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Fri Jan 12 00:20:05 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:20:05 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:20:05 2024

GET /notification/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:20:05 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:19"}]


Fri Jan 12 00:20:08 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:20:08 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Fri Jan 12 00:20:09 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:20:09 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:20:09 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:20:09 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:20:09 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:20:09 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Fri Jan 12 00:20:09 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:20:09 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:20:09 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:20:09 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Fri Jan 12 00:20:09 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:20:09 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:20:09 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:20:09 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Fri Jan 12 00:20:11 2024

GET /buy/25 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:20:11 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            function createOptionsOwn(bonus) {
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            };
        };

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            };
            emailSend(email,content,dateString,timeString);
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=user.bonus+Math.floor(ticket.price/100);
                console.log(`1....... ${typeof user.bonus`);
                ownNotification(bonusAll);
                
            })
            function ownNotification(bonus) {
                console.log(`2.......${bonus}`);
            fetch("/own", createOptionsOwn(bonus))
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
        }
            
        }
     

    </script>
</html>


Fri Jan 12 00:20:12 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/25
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:20:12 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:20:12 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/25
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:20:12 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:20:23 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:20:23 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Fri Jan 12 00:20:23 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:20:23 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:20:23 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:20:23 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:20:23 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:20:23 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Fri Jan 12 00:20:24 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:20:24 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:20:24 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:20:24 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Fri Jan 12 00:20:24 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:20:24 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:20:24 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:20:24 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Fri Jan 12 00:20:30 2024

GET /buy/28 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:20:30 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            function createOptionsOwn(bonus) {
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            };
        };

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            };
            emailSend(email,content,dateString,timeString);
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=user.bonus+Math.floor(ticket.price/100);
                console.log(`1....... ${typeof user.bonus`);
                ownNotification(bonusAll);
                
            })
            function ownNotification(bonus) {
                console.log(`2.......${bonus}`);
            fetch("/own", createOptionsOwn(bonus))
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
        }
            
        }
     

    </script>
</html>


Fri Jan 12 00:20:31 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/28
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:20:31 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:20:31 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/28
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:20:31 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:21:39 2024

GET /buy/28 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:21:39 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            function createOptionsOwn(bonus) {
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            };
        };

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            };
            emailSend(email,content,dateString,timeString);
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=user.bonus+Math.floor(ticket.price/100);
                console.log(`1....... ${typeof user.bonus}`);
                ownNotification(bonusAll);
                
            })
            function ownNotification(bonus) {
                console.log(`2.......${bonus}`);
            fetch("/own", createOptionsOwn(bonus))
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
        }
            
        }
     

    </script>
</html>


Fri Jan 12 00:21:40 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/28
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:21:40 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:21:40 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/28
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:21:40 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:21:41 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:21:41 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Fri Jan 12 00:21:41 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:21:41 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:21:41 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:21:41 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Fri Jan 12 00:21:41 2024

GET /ticket/28 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:21:41 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}]


Fri Jan 12 00:21:43 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:21:43 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:21:43 2024

GET /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:21:43 2024

HTTP/1.1 200 OK

[]


Fri Jan 12 00:21:43 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Content-Type: text/html
Content-Length: 328
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28&date=2024-01-11&time=00:21
Fri Jan 12 00:21:43 2024

HTTP/1.1 200 OK

[]


Fri Jan 12 00:23:36 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/28
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:23:36 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/notifications.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>

            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>


        <button onclick="clearNotifications()">Clear</button>
        <ul id="notifications"></ul>
    </body>
    <script>
         //navbar
         const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            // fetch(`/unread/${email}`, {
            //     method: "GET",
            // })
            // .then(response => {
            //     return(response.text());
            // })
            // .then(data => {
            //     const user = JSON.parse(data)[0];
            //     const unread = document.getElementById("unread");
            //     unread.innerText = user.count;
            //     const money = document.getElementById("money");
            // })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        

        const notificationsElement = document.getElementById("notifications");

        fetch(`/notification/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

        fetch(`/read/${email}`, {
            method: "PUT"
        })

        function clearNotifications() {
            fetch(`/notification/${email}`, {
                method: "DELETE",
            })
            .then(response => {
                return(response.text());
            })
            
            notificationsElement.innerText = "";
        }
    </script>
</html>


Fri Jan 12 00:23:37 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:37 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Fri Jan 12 00:23:37 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:37 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Fri Jan 12 00:23:37 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:37 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:23:37 2024

GET /notification/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:37 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:19"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28", "date": "2024-01-11", "time": "00:21"}]


Fri Jan 12 00:23:38 2024

PUT /read/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin
Content-Length: 0


Fri Jan 12 00:23:38 2024

HTTP/1.1 200 OK




Fri Jan 12 00:23:39 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:23:39 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Fri Jan 12 00:23:40 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:40 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:23:40 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:40 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:23:40 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:40 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:23:40 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:40 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:23:40 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:40 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Fri Jan 12 00:23:40 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:40 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:23:40 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:40 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:23:42 2024

GET /buy/25 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:23:42 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            function createOptionsOwn(bonus) {
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            };
        };

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            };
            emailSend(email,content,dateString,timeString);
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=parseInt(user.bonus,10)+Math.floor(ticket.price/100);
                console.log(`1....... ${typeof bonusAll}`);
                ownNotification(bonusAll);
                
            })
            function ownNotification(bonus) {
                console.log(`2.......${bonus}`);
            fetch("/own", createOptionsOwn(bonus))
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
        }
            
        }
     

    </script>
</html>


Fri Jan 12 00:23:42 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/25
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:42 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:23:43 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/25
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:43 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:23:43 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:43 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:23:43 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:43 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:23:43 2024

GET /ticket/25 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:43 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}]


Fri Jan 12 00:23:43 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:43 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:23:45 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:45 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:23:46 2024

GET /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:46 2024

HTTP/1.1 200 OK

[]


Fri Jan 12 00:23:46 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Content-Type: text/html
Content-Length: 328
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25&date=2024-01-11&time=00:23
Fri Jan 12 00:23:46 2024

HTTP/1.1 200 OK

[]


Fri Jan 12 00:23:53 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/25
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:23:53 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/notifications.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>

            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>


        <button onclick="clearNotifications()">Clear</button>
        <ul id="notifications"></ul>
    </body>
    <script>
         //navbar
         const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            // fetch(`/unread/${email}`, {
            //     method: "GET",
            // })
            // .then(response => {
            //     return(response.text());
            // })
            // .then(data => {
            //     const user = JSON.parse(data)[0];
            //     const unread = document.getElementById("unread");
            //     unread.innerText = user.count;
            //     const money = document.getElementById("money");
            // })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        

        const notificationsElement = document.getElementById("notifications");

        fetch(`/notification/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

        fetch(`/read/${email}`, {
            method: "PUT"
        })

        function clearNotifications() {
            fetch(`/notification/${email}`, {
                method: "DELETE",
            })
            .then(response => {
                return(response.text());
            })
            
            notificationsElement.innerText = "";
        }
    </script>
</html>


Fri Jan 12 00:23:54 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:54 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Fri Jan 12 00:23:54 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:54 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Fri Jan 12 00:23:54 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:54 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:23:54 2024

GET /notification/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:54 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:19"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28", "date": "2024-01-11", "time": "00:21"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:23"}]


Fri Jan 12 00:23:54 2024

PUT /read/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin
Content-Length: 0


Fri Jan 12 00:23:54 2024

HTTP/1.1 200 OK




Fri Jan 12 00:23:58 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:23:58 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            
            <div id="navbar_list">
                
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>

            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: <span id="bonus"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");

            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus=document.getElementById("bonus");
            bonus.innerText=user.bonus;
        })

        }
        else {
            authElements.forEach(item => item.style.display = "flex");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Fri Jan 12 00:23:58 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:58 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Fri Jan 12 00:23:58 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:58 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Fri Jan 12 00:23:59 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:59 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:23:59 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:59 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:23:59 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:23:59 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Fri Jan 12 00:24:14 2024

GET /buy/28 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:24:14 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            function createOptionsOwn(bonus) {
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            };
        };

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            };
            emailSend(email,content,dateString,timeString);
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=parseInt(user.bonus,10)+Math.floor(ticket.price/100);
                console.log(`1....... ${typeof bonusAll}`);
                ownNotification(bonusAll);
                
            })
            function ownNotification(bonus) {
                console.log(`2.......${bonus}`);
            fetch("/own", createOptionsOwn(bonus))
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
        }
            
        }
     

    </script>
</html>


Fri Jan 12 00:24:14 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/28
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:24:14 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:24:14 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/28
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:24:14 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:24:15 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:24:15 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:24:15 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:24:15 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:24:15 2024

GET /ticket/28 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:24:15 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}]


Fri Jan 12 00:24:15 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:24:15 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:25:17 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:25:17 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Fri Jan 12 00:25:18 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:25:18 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:25:18 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:25:18 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:25:18 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:25:18 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:25:18 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:25:18 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:25:18 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:25:18 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Fri Jan 12 00:25:18 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:25:18 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:25:18 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:25:18 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:25:20 2024

GET /buy/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:25:20 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            function createOptionsOwn(bonus) {
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            };
            console.log(`3.....${typeof bonus}`);
        };

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            };
            emailSend(email,content,dateString,timeString);
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=parseInt(user.bonus,10)+Math.floor(ticket.price/100);
                console.log(`1....... ${typeof bonusAll}`);
                ownNotification(bonusAll);
                
            })
            function ownNotification(bonus) {
                console.log(`2.......${bonus}`);
            fetch("/own", createOptionsOwn(bonus))
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
        }
            
        }
     

    </script>
</html>


Fri Jan 12 00:25:21 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/29
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:25:21 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:25:21 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/29
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:25:21 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:25:22 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:25:22 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:25:22 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:25:22 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:25:22 2024

GET /ticket/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:25:22 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:25:22 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:25:22 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:25:24 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:25:24 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:25:24 2024

GET /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:25:24 2024

HTTP/1.1 200 OK

[]


Fri Jan 12 00:25:24 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Content-Type: text/html
Content-Length: 329
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 10.\nSafe travels!\n\nYour boarding pass number: 29&date=2024-01-11&time=00:25
Fri Jan 12 00:25:24 2024

HTTP/1.1 200 OK

[]


Fri Jan 12 00:26:31 2024

GET /buy/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:26:31 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            function createOptionsOwn(bonus) {
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus.toString()}`
            };
            console.log(`3.....${typeof bonus}`);
        };

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            };
            emailSend(email,content,dateString,timeString);
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=parseInt(user.bonus,10)+Math.floor(ticket.price/100);
                console.log(`1....... ${typeof bonusAll}`);
                ownNotification(bonusAll);
                
            })
            function ownNotification(bonus) {
                console.log(`2.......${bonus}`);
            fetch("/own", createOptionsOwn(bonus))
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
        }
            
        }
     

    </script>
</html>


Fri Jan 12 00:26:31 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/29
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:31 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:26:31 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/29
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:31 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:26:32 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:32 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Fri Jan 12 00:26:32 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:32 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:26:32 2024

GET /ticket/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:32 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:26:32 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:32 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Fri Jan 12 00:26:36 2024

GET /buy/28 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:26:36 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            function createOptionsOwn(bonus) {
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus.toString()}`
            };
            console.log(`3.....${typeof bonus}`);
        };

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            };
            emailSend(email,content,dateString,timeString);
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=parseInt(user.bonus,10)+Math.floor(ticket.price/100);
                console.log(`1....... ${typeof bonusAll}`);
                ownNotification(bonusAll);
                
            })
            function ownNotification(bonus) {
                console.log(`2.......${bonus}`);
            fetch("/own", createOptionsOwn(bonus))
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
        }
            
        }
     

    </script>
</html>


Fri Jan 12 00:26:37 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/28
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:37 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:26:37 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/28
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:37 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:26:37 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:37 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Fri Jan 12 00:26:37 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:37 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:26:37 2024

GET /ticket/28 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:37 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}]


Fri Jan 12 00:26:38 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:38 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Fri Jan 12 00:26:40 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:40 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:26:40 2024

GET /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:40 2024

HTTP/1.1 200 OK

[]


Fri Jan 12 00:26:40 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Content-Type: text/html
Content-Length: 328
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28&date=2024-01-11&time=00:26
Fri Jan 12 00:26:40 2024

HTTP/1.1 200 OK

[]


Fri Jan 12 00:26:48 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/28
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:26:48 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/notifications.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>

            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>


        <button onclick="clearNotifications()">Clear</button>
        <ul id="notifications"></ul>
    </body>
    <script>
         //navbar
         const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            // fetch(`/unread/${email}`, {
            //     method: "GET",
            // })
            // .then(response => {
            //     return(response.text());
            // })
            // .then(data => {
            //     const user = JSON.parse(data)[0];
            //     const unread = document.getElementById("unread");
            //     unread.innerText = user.count;
            //     const money = document.getElementById("money");
            // })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        

        const notificationsElement = document.getElementById("notifications");

        fetch(`/notification/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

        fetch(`/read/${email}`, {
            method: "PUT"
        })

        function clearNotifications() {
            fetch(`/notification/${email}`, {
                method: "DELETE",
            })
            .then(response => {
                return(response.text());
            })
            
            notificationsElement.innerText = "";
        }
    </script>
</html>


Fri Jan 12 00:26:48 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:48 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Fri Jan 12 00:26:49 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:49 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Fri Jan 12 00:26:49 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:49 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:26:49 2024

GET /notification/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:49 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:19"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28", "date": "2024-01-11", "time": "00:21"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:23"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 10.\nSafe travels!\n\nYour boarding pass number: 29", "date": "2024-01-11", "time": "00:25"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28", "date": "2024-01-11", "time": "00:26"}]


Fri Jan 12 00:26:49 2024

PUT /read/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin
Content-Length: 0


Fri Jan 12 00:26:49 2024

HTTP/1.1 200 OK




Fri Jan 12 00:26:52 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:26:52 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Fri Jan 12 00:26:52 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:52 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:26:52 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:52 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:26:52 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:52 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:26:52 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:52 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:26:52 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:52 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Fri Jan 12 00:26:52 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:52 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:26:52 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:52 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:26:56 2024

GET /buy/28 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:26:56 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            function createOptionsOwn(bonus) {
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus.toString()}`
            };
            console.log(`3.....${typeof bonus}`);
        };

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            };
            emailSend(email,content,dateString,timeString);
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=parseInt(user.bonus,10)+Math.floor(ticket.price/100);
                console.log(`1....... ${typeof bonusAll}`);
                ownNotification(bonusAll);
                
            })
            function ownNotification(bonus) {
                console.log(`2.......${bonus}`);
            fetch("/own", createOptionsOwn(bonus))
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
        }
            
        }
     

    </script>
</html>


Fri Jan 12 00:26:56 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/28
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:56 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:26:56 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/28
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:56 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:26:57 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:57 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:26:57 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:57 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:26:57 2024

GET /ticket/28 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:57 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}]


Fri Jan 12 00:26:57 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:26:57 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:27:41 2024

GET /buy/28 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:27:41 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            function createOptionsOwn(bonus) {
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus.toString()}`
            };
            console.log(`3.....${typeof bonus.toString()}va ${bonus}`);
        };

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            };
            emailSend(email,content,dateString,timeString);
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=parseInt(user.bonus,10)+Math.floor(ticket.price/100);
                console.log(`1....... ${typeof bonusAll}`);
                ownNotification(bonusAll);
                
            })
            function ownNotification(bonus) {
                console.log(`2.......${bonus}`);
            fetch("/own", createOptionsOwn(bonus))
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
        }
            
        }
     

    </script>
</html>


Fri Jan 12 00:27:41 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/28
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:27:41 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:27:41 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/28
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:27:41 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:27:42 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:27:42 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:27:42 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:27:42 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:27:42 2024

GET /ticket/28 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:27:42 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}]


Fri Jan 12 00:27:42 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:27:42 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:27:43 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:27:43 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:27:44 2024

GET /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:27:44 2024

HTTP/1.1 200 OK

[]


Fri Jan 12 00:27:44 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Content-Type: text/html
Content-Length: 328
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28&date=2024-01-11&time=00:27
Fri Jan 12 00:27:44 2024

HTTP/1.1 200 OK

[]


Fri Jan 12 00:28:16 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/28
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:28:16 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/notifications.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>

            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>


        <button onclick="clearNotifications()">Clear</button>
        <ul id="notifications"></ul>
    </body>
    <script>
         //navbar
         const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            // fetch(`/unread/${email}`, {
            //     method: "GET",
            // })
            // .then(response => {
            //     return(response.text());
            // })
            // .then(data => {
            //     const user = JSON.parse(data)[0];
            //     const unread = document.getElementById("unread");
            //     unread.innerText = user.count;
            //     const money = document.getElementById("money");
            // })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        

        const notificationsElement = document.getElementById("notifications");

        fetch(`/notification/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

        fetch(`/read/${email}`, {
            method: "PUT"
        })

        function clearNotifications() {
            fetch(`/notification/${email}`, {
                method: "DELETE",
            })
            .then(response => {
                return(response.text());
            })
            
            notificationsElement.innerText = "";
        }
    </script>
</html>


Fri Jan 12 00:28:16 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:28:16 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Fri Jan 12 00:28:16 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:28:16 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Fri Jan 12 00:28:17 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:28:17 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:28:17 2024

GET /notification/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:28:17 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:19"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28", "date": "2024-01-11", "time": "00:21"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:23"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 10.\nSafe travels!\n\nYour boarding pass number: 29", "date": "2024-01-11", "time": "00:25"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28", "date": "2024-01-11", "time": "00:26"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28", "date": "2024-01-11", "time": "00:27"}]


Fri Jan 12 00:28:17 2024

PUT /read/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin
Content-Length: 0


Fri Jan 12 00:28:17 2024

HTTP/1.1 200 OK




Fri Jan 12 00:28:22 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:28:22 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Fri Jan 12 00:28:23 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:28:23 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:28:23 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:28:23 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:28:23 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:28:23 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:28:23 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:28:23 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:28:23 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:28:23 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Fri Jan 12 00:28:23 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:28:23 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:28:23 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:28:23 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:28:25 2024

GET /buy/28 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:28:25 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            function createOptionsOwn(bonus) {
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus.toString()}`
            };
            console.log(`3.....${typeof bonus.toString()}va ${bonus}`);
        };

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            };
            emailSend(email,content,dateString,timeString);
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=parseInt(user.bonus,10)+Math.floor(ticket.price/100);
                console.log(`1....... ${typeof bonusAll}`);
                ownNotification(bonusAll);
                
            })
            function ownNotification(bonus) {
                console.log(`2.......${bonus}`);
            fetch("/own", createOptionsOwn(bonus))
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
        }
            
        }
     

    </script>
</html>


Fri Jan 12 00:28:26 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/28
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:28:26 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:28:26 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/28
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:28:26 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:28:27 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:28:27 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:28:27 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:28:27 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:28:27 2024

GET /ticket/28 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:28:27 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}]


Fri Jan 12 00:28:27 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:28:27 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:29:18 2024

GET /buy/28 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:29:18 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            function createOptionsOwn(bonus) {
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=3`
            };
            console.log(`3.....${typeof bonus.toString()}va ${bonus}`);
        };

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            };
            emailSend(email,content,dateString,timeString);
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=parseInt(user.bonus,10)+Math.floor(ticket.price/100);
                console.log(`1....... ${typeof bonusAll}`);
                ownNotification(bonusAll);
                
            })
            function ownNotification(bonus) {
                console.log(`2.......${bonus}`);
            fetch("/own", createOptionsOwn(bonus))
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
        }
            
        }
     

    </script>
</html>


Fri Jan 12 00:29:18 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/28
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:29:18 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:30:33 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Fri Jan 12 00:30:33 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            
            <div id="navbar_list">
                
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>

            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: <span id="bonus"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");

            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus=document.getElementById("bonus");
            bonus.innerText=user.bonus;
        })

        }
        else {
            authElements.forEach(item => item.style.display = "flex");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Fri Jan 12 00:30:33 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:33 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Fri Jan 12 00:30:33 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:33 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Fri Jan 12 00:30:34 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:34 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:30:34 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:34 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:30:34 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:34 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Fri Jan 12 00:30:40 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:30:40 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Fri Jan 12 00:30:41 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:41 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:30:41 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:41 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:30:41 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:41 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:30:41 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:41 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:30:41 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:41 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Fri Jan 12 00:30:41 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:41 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:30:41 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:41 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:30:43 2024

GET /buy/25 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:30:43 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            function createOptionsOwn(bonus) {
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=3`
            };
            console.log(`3.....${typeof bonus.toString()}va ${bonus}`);
        };

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            };
            emailSend(email,content,dateString,timeString);
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=parseInt(user.bonus,10)+Math.floor(ticket.price/100);
                console.log(`1....... ${typeof bonusAll}`);
                ownNotification(bonusAll);
                
            })
            function ownNotification(bonus) {
                console.log(`2.......${bonus}`);
            fetch("/own", createOptionsOwn(bonus))
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
        }
            
        }
     

    </script>
</html>


Fri Jan 12 00:30:43 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/25
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:43 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:30:43 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/25
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:43 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:30:43 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:43 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:30:43 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:43 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:30:43 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:43 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:30:43 2024

GET /ticket/25 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:43 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}]


Fri Jan 12 00:30:49 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:49 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:30:49 2024

GET /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:49 2024

HTTP/1.1 200 OK

[]


Fri Jan 12 00:30:49 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Content-Type: text/html
Content-Length: 328
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25&date=2024-01-11&time=00:30
Fri Jan 12 00:30:49 2024

HTTP/1.1 200 OK

[]


Fri Jan 12 00:30:51 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/25
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:30:51 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/notifications.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>

            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>


        <button onclick="clearNotifications()">Clear</button>
        <ul id="notifications"></ul>
    </body>
    <script>
         //navbar
         const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            // fetch(`/unread/${email}`, {
            //     method: "GET",
            // })
            // .then(response => {
            //     return(response.text());
            // })
            // .then(data => {
            //     const user = JSON.parse(data)[0];
            //     const unread = document.getElementById("unread");
            //     unread.innerText = user.count;
            //     const money = document.getElementById("money");
            // })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        

        const notificationsElement = document.getElementById("notifications");

        fetch(`/notification/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

        fetch(`/read/${email}`, {
            method: "PUT"
        })

        function clearNotifications() {
            fetch(`/notification/${email}`, {
                method: "DELETE",
            })
            .then(response => {
                return(response.text());
            })
            
            notificationsElement.innerText = "";
        }
    </script>
</html>


Fri Jan 12 00:30:51 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:51 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Fri Jan 12 00:30:51 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:51 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Fri Jan 12 00:30:51 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:51 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:30:51 2024

PUT /read/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin
Content-Length: 0


Fri Jan 12 00:30:51 2024

HTTP/1.1 200 OK




Fri Jan 12 00:30:51 2024

GET /notification/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:51 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:19"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28", "date": "2024-01-11", "time": "00:21"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:23"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 10.\nSafe travels!\n\nYour boarding pass number: 29", "date": "2024-01-11", "time": "00:25"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28", "date": "2024-01-11", "time": "00:26"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28", "date": "2024-01-11", "time": "00:27"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:30"}]


Fri Jan 12 00:30:54 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:30:54 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Fri Jan 12 00:30:54 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:54 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:30:54 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:54 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:30:54 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:54 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:30:54 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:54 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:30:54 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:54 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Fri Jan 12 00:30:54 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:54 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:30:54 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:30:54 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:31:00 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:31:00 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            
            <div id="navbar_list">
                
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>

            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: <span id="bonus"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");

            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus=document.getElementById("bonus");
            bonus.innerText=user.bonus;
        })

        }
        else {
            authElements.forEach(item => item.style.display = "flex");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Fri Jan 12 00:31:00 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:31:00 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Fri Jan 12 00:31:00 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:31:00 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Fri Jan 12 00:31:00 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:31:00 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:31:00 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:31:00 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:31:01 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:31:01 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Fri Jan 12 00:35:40 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:35:40 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Fri Jan 12 00:35:41 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:35:41 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:35:41 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:35:41 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:35:41 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:35:41 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:35:42 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:35:42 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:35:42 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:35:42 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:35:42 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:35:42 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Fri Jan 12 00:35:42 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:35:42 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:35:42 2024

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:35:42 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Fri Jan 12 00:35:44 2024

GET /buy/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:35:44 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            function createOptionsOwn(bonus) {
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=3`
            };
            console.log(`3.....${typeof bonus.toString()}va ${bonus}`);
        };

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            };
            emailSend(email,content,dateString,timeString);
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=parseInt(user.bonus,10)+Math.floor(ticket.price/100);
                console.log(`1....... ${typeof bonusAll}`);
                ownNotification(bonusAll);
                
            })
            function ownNotification(bonus) {
                console.log(`2.......${bonus}`);
            fetch("/own", createOptionsOwn(bonus))
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
        }
            
        }
     

    </script>
</html>


Fri Jan 12 00:35:45 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/29
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:35:45 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:35:45 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/29
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:35:45 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:35:45 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:35:45 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:35:45 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:35:45 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:35:46 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:35:46 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:35:46 2024

GET /ticket/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:35:46 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:35:47 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:35:47 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:35:47 2024

GET /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:35:47 2024

HTTP/1.1 200 OK

[]


Fri Jan 12 00:35:47 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Content-Type: text/html
Content-Length: 329
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 10.\nSafe travels!\n\nYour boarding pass number: 29&date=2024-01-11&time=00:35
Fri Jan 12 00:35:47 2024

HTTP/1.1 200 OK

[]


Fri Jan 12 00:35:54 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/29
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:35:54 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/notifications.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>

            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>


        <button onclick="clearNotifications()">Clear</button>
        <ul id="notifications"></ul>
    </body>
    <script>
         //navbar
         const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            // fetch(`/unread/${email}`, {
            //     method: "GET",
            // })
            // .then(response => {
            //     return(response.text());
            // })
            // .then(data => {
            //     const user = JSON.parse(data)[0];
            //     const unread = document.getElementById("unread");
            //     unread.innerText = user.count;
            //     const money = document.getElementById("money");
            // })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        

        const notificationsElement = document.getElementById("notifications");

        fetch(`/notification/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

        fetch(`/read/${email}`, {
            method: "PUT"
        })

        function clearNotifications() {
            fetch(`/notification/${email}`, {
                method: "DELETE",
            })
            .then(response => {
                return(response.text());
            })
            
            notificationsElement.innerText = "";
        }
    </script>
</html>


Fri Jan 12 00:35:54 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:35:54 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Fri Jan 12 00:35:54 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:35:54 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Fri Jan 12 00:35:54 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:35:54 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:35:54 2024

PUT /read/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin
Content-Length: 0


Fri Jan 12 00:35:54 2024

HTTP/1.1 200 OK




Fri Jan 12 00:35:54 2024

GET /notification/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:35:54 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:19"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28", "date": "2024-01-11", "time": "00:21"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:23"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 10.\nSafe travels!\n\nYour boarding pass number: 29", "date": "2024-01-11", "time": "00:25"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28", "date": "2024-01-11", "time": "00:26"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28", "date": "2024-01-11", "time": "00:27"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:30"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 10.\nSafe travels!\n\nYour boarding pass number: 29", "date": "2024-01-11", "time": "00:35"}]


Fri Jan 12 00:36:00 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:36:00 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Fri Jan 12 00:36:00 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:36:00 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:36:00 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:36:00 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:36:03 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:36:03 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Fri Jan 12 00:36:03 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:36:03 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:36:03 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:36:03 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:36:03 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:36:03 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:36:03 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:36:03 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:36:03 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:36:03 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Fri Jan 12 00:36:03 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:36:03 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:36:03 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:36:03 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:39:12 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:39:12 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Fri Jan 12 00:39:12 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:12 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:39:12 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:12 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:39:13 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:13 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:39:13 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:13 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:39:13 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:13 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Fri Jan 12 00:39:13 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:13 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:39:13 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:13 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:39:15 2024

GET /buy/25 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:39:15 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
        

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            };
            emailSend(email,content,dateString,timeString);
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=parseInt(user.bonus,10)+Math.floor(ticket.price/100);
                console.log(`1....... ${typeof bonusAll}`);
                ownNotification(bonusAll);
                
            })
            function ownNotification(bonus) {
                console.log(`2.......${bonus}`);
            fetch("/own", {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=3`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
        }
            
        }
     

    </script>
</html>


Fri Jan 12 00:39:15 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/25
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:15 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:39:15 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/25
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:15 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:39:16 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:16 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:39:16 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:16 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:39:16 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:16 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:39:16 2024

GET /ticket/25 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:16 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}]


Fri Jan 12 00:39:18 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:18 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7589.04", "type": "0", "bonus": "0"}]


Fri Jan 12 00:39:18 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Content-Type: text/html
Content-Length: 98
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=25&full_name=&number=&security_code=&expiration_date=&bonus=3
Fri Jan 12 00:39:18 2024

HTTP/1.1 200 OK

OK


Fri Jan 12 00:39:18 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Content-Type: text/html
Content-Length: 328
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25&date=2024-01-11&time=00:39
Fri Jan 12 00:39:18 2024

HTTP/1.1 200 OK

[]


Fri Jan 12 00:39:23 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/25
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:39:23 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/notifications.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>

            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>


        <button onclick="clearNotifications()">Clear</button>
        <ul id="notifications"></ul>
    </body>
    <script>
         //navbar
         const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            // fetch(`/unread/${email}`, {
            //     method: "GET",
            // })
            // .then(response => {
            //     return(response.text());
            // })
            // .then(data => {
            //     const user = JSON.parse(data)[0];
            //     const unread = document.getElementById("unread");
            //     unread.innerText = user.count;
            //     const money = document.getElementById("money");
            // })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        

        const notificationsElement = document.getElementById("notifications");

        fetch(`/notification/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

        fetch(`/read/${email}`, {
            method: "PUT"
        })

        function clearNotifications() {
            fetch(`/notification/${email}`, {
                method: "DELETE",
            })
            .then(response => {
                return(response.text());
            })
            
            notificationsElement.innerText = "";
        }
    </script>
</html>


Fri Jan 12 00:39:23 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:23 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Fri Jan 12 00:39:23 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:23 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Fri Jan 12 00:39:23 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:23 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7487.79", "type": "0", "bonus": "3"}]


Fri Jan 12 00:39:23 2024

GET /notification/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:23 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:19"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28", "date": "2024-01-11", "time": "00:21"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:23"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 10.\nSafe travels!\n\nYour boarding pass number: 29", "date": "2024-01-11", "time": "00:25"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28", "date": "2024-01-11", "time": "00:26"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28", "date": "2024-01-11", "time": "00:27"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:30"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 10.\nSafe travels!\n\nYour boarding pass number: 29", "date": "2024-01-11", "time": "00:35"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:39"}]


Fri Jan 12 00:39:23 2024

PUT /read/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin
Content-Length: 0


Fri Jan 12 00:39:24 2024

HTTP/1.1 200 OK




Fri Jan 12 00:39:27 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:39:27 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Fri Jan 12 00:39:27 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:27 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:39:27 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:27 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:39:27 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:27 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:39:27 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:27 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7487.79", "type": "0", "bonus": "3"}]


Fri Jan 12 00:39:27 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:27 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Fri Jan 12 00:39:27 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:27 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "1"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:39:27 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:27 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:39:34 2024

GET /buy/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:39:34 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
        

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            };
            emailSend(email,content,dateString,timeString);
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=parseInt(user.bonus,10)+Math.floor(ticket.price/100);
                console.log(`1....... ${typeof bonusAll}`);
                ownNotification(bonusAll);
                
            })
            function ownNotification(bonus) {
                console.log(`2.......${bonus}`);
            fetch("/own", {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=3`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
        }
            
        }
     

    </script>
</html>


Fri Jan 12 00:39:35 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/29
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:35 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:39:35 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/29
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:35 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:39:36 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:36 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:39:36 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:36 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7487.79", "type": "0", "bonus": "3"}]


Fri Jan 12 00:39:36 2024

GET /ticket/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:36 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:39:36 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:39:36 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:40:23 2024

GET /buy/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:40:23 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
        

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            };
            emailSend(email,content,dateString,timeString);
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=parseInt(user.bonus,10)+Math.floor(ticket.price/100);
                console.log(`1....... ${typeof bonusAll}`);
                ownNotification(bonusAll);
                
            })
            function ownNotification(bonus) {
                console.log(`2.......${bonus}`);
            fetch("/own", {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus.toString()}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
        }
            
        }
     

    </script>
</html>


Fri Jan 12 00:40:23 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/29
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:40:23 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:40:23 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/29
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:40:23 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:40:24 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:40:24 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:40:24 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:40:24 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7487.79", "type": "0", "bonus": "3"}]


Fri Jan 12 00:40:24 2024

GET /ticket/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:40:24 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:40:24 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:40:24 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:40:26 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:40:26 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7487.79", "type": "0", "bonus": "3"}]


Fri Jan 12 00:40:26 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Content-Type: text/html
Content-Length: 98
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=29&full_name=&number=&security_code=&expiration_date=&bonus=5
Fri Jan 12 00:40:26 2024

HTTP/1.1 200 OK

OK


Fri Jan 12 00:40:26 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Content-Type: text/html
Content-Length: 329
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 10.\nSafe travels!\n\nYour boarding pass number: 29&date=2024-01-11&time=00:40
Fri Jan 12 00:40:26 2024

HTTP/1.1 200 OK

[]


Fri Jan 12 00:47:47 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/29
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:47:47 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/notifications.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>

            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>


        <button onclick="clearNotifications()">Clear</button>
        <ul id="notifications"></ul>
    </body>
    <script>
         //navbar
         const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            // fetch(`/unread/${email}`, {
            //     method: "GET",
            // })
            // .then(response => {
            //     return(response.text());
            // })
            // .then(data => {
            //     const user = JSON.parse(data)[0];
            //     const unread = document.getElementById("unread");
            //     unread.innerText = user.count;
            //     const money = document.getElementById("money");
            // })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        

        const notificationsElement = document.getElementById("notifications");

        fetch(`/notification/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

        fetch(`/read/${email}`, {
            method: "PUT"
        })

        function clearNotifications() {
            fetch(`/notification/${email}`, {
                method: "DELETE",
            })
            .then(response => {
                return(response.text());
            })
            
            notificationsElement.innerText = "";
        }
    </script>
</html>


Fri Jan 12 00:47:48 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:47:48 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Fri Jan 12 00:47:48 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:47:48 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Fri Jan 12 00:47:49 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:47:49 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7287.54", "type": "0", "bonus": "5"}]


Fri Jan 12 00:47:49 2024

GET /notification/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:47:49 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:19"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28", "date": "2024-01-11", "time": "00:21"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:23"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 10.\nSafe travels!\n\nYour boarding pass number: 29", "date": "2024-01-11", "time": "00:25"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28", "date": "2024-01-11", "time": "00:26"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28", "date": "2024-01-11", "time": "00:27"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:30"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 10.\nSafe travels!\n\nYour boarding pass number: 29", "date": "2024-01-11", "time": "00:35"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:39"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 10.\nSafe travels!\n\nYour boarding pass number: 29", "date": "2024-01-11", "time": "00:40"}]


Fri Jan 12 00:47:49 2024

PUT /read/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin
Content-Length: 0


Fri Jan 12 00:47:49 2024

HTTP/1.1 200 OK




Fri Jan 12 00:47:51 2024

GET /buy/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:47:51 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
        

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            };

            emailSend(email,content,dateString,timeString);
            
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=parseInt(user.bonus,10)+Math.floor(ticket.price/100);
                console.log(`1....... ${typeof bonusAll}`);
                ownNotification(bonusAll);
                
            });

            function ownNotification(bonus) {
                console.log(`2.......${bonus}`);
            fetch("/own", {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus.toString()}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
            }
            
        
            
        }
     

    </script>
</html>


Fri Jan 12 00:47:51 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/29
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:47:51 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:47:52 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/29
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:47:52 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:47:52 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:47:52 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:47:53 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:47:53 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7287.54", "type": "0", "bonus": "5"}]


Fri Jan 12 00:47:53 2024

GET /ticket/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:47:53 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "1"}]


Fri Jan 12 00:47:53 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:47:53 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:48:02 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:48:02 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7287.54", "type": "0", "bonus": "5"}]


Fri Jan 12 00:48:02 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/29
Content-Type: text/html
Content-Length: 98
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=29&full_name=&number=&security_code=&expiration_date=&bonus=7
Fri Jan 12 00:48:02 2024

HTTP/1.1 500 Internal Server Error




Fri Jan 12 00:48:09 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:48:09 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
            
        </div>
        <button id="exchange"> Exchange </button>
    </body>

    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const userNotifications = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = userNotifications.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
                method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const money = document.getElementById("money");
                money.innerText = user.money;
            })
        }

        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const email = localStorage.getItem("email");
        if (email == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      
        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
            var fullName=own_data[0]['full_name'];
            let bonus = 0; // diem thuong moi cua nguoi dung
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus}`
            }

            const content = `Exchange ticket confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
            
            fetch(`/own`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `email=${email}&ticket_id=${old_id_string}&money=${-ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {
        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
    }

    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){   
        exchange_div.onclick = function(){
         
            fetch(`/ticket/${new_id_string}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                console.log(data);
                var ticket_new=JSON.parse(data);
                var result = confirm(`${data} Ban da chac chan?`);
                if(result){
                    exchange(ticket_new);
                }
                else{
                    window.location.reload();
                }
            })
        }
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Fri Jan 12 00:48:09 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:48:09 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:48:09 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:48:09 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Fri Jan 12 00:48:09 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:48:09 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:48:10 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:48:10 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7287.54", "type": "0", "bonus": "7"}]


Fri Jan 12 00:48:10 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:48:10 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Fri Jan 12 00:48:10 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:48:10 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "0"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "1"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "1"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "1"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Fri Jan 12 00:48:10 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:48:10 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:48:12 2024

GET /buy/28 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:48:12 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/buy.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            </div>
            
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: $<span id="bonus"></span></div>
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>

        <section id="user-form-container">
            <div id="ticket-info">
                <div class="ticket-info-column">Flight: <span id="flight"></span></div>
                <div class="ticket-info-column">From: <span id="from"></span></div>
                <div class="ticket-info-column">To: <span id="to"></span></div>
                <div class="ticket-info-column">Date: <span id="date"></span></div>
                <div class="ticket-info-column">Time: <span id="time"></span></div>
                <div class="ticket-info-column">Price: <span id="price"></span></div>
            </div>
            <div id="user-form">
                <label for="number">Credit Card</label>            
                <input type="text" name="number" id="number">

                <label for="number">Expiration Date</label>    
                <input type="date" name="expiration-date" id="expiration-date">

                <label for="security-code">Security Code</label>    
                <input type="text" name="security-code" id="security-code">

                <label for="full-name">Card Holder Name</label>
                <input type="text" name="full-name" id="full-name">
                
                <button type="button" onclick="submit()">Submit</button>
            </div>
        </section>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://smtpjs.com/v3/smtp.js"></script>

    </body>
    <script>
        //navbar
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus = document.getElementById("bonus");
            bonus.innerText = user.bonus;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //

        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        fetch(`/unread/${email}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
   // gui email
   function emailSend(email,content,dateString,timeString){
        Email.send({
            Host : "smtp.elasticemail.com",
            Username : "jadeuma235@gmail.com",
            Password : "CB0F1191C63097515935CD75726D0430C710",
            To : email,
            From : "jadeuma235@gmail.com",
            Subject : `Already Buy an airplane ticket date: ${dateString} time : ${timeString}` ,
            Body : content,
            }).then(
            message => {

                console.log(message);
            
            }
        );
    }
        function submit() {
           
            const email = localStorage.getItem("email");
            if (email == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            let bonusAll = 0;
            
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
        

            const content = `Boarding pass confirmed\\nDear ${email},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&content=${content}&date=${dateString}&time=${timeString}`
            };

            emailSend(email,content,dateString,timeString);
            
            fetch(`/user/${email}`, {
            method: "GET"
            })
            .then(response => {
                return response.text();
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                bonusAll=parseInt(user.bonus,10)+Math.floor(ticket.price/100);
                console.log(`1....... ${typeof bonusAll}`);
                ownNotification(bonusAll);
                
            });

            function ownNotification(bonus) {
                console.log(`2.......${bonus}`);
            fetch("/own", {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `email=${email}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}&bonus=${bonus.toString()}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            
                    swal("Successful", "You have a new notification!", "success");
                   const result= document.querySelector(".swal-button");
                       result.addEventListener('click',function () {
                        window.location.replace("http://localhost:8001/notifications");
                       });
                }
                    })
                }
                else {
                    
                    swal("Error", "You clicked the button!", "error");
                }
            })
            }
            
        
            
        }
     

    </script>
</html>


Fri Jan 12 00:48:13 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/28
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:48:13 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:48:13 2024

GET /static/buy.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/28
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:48:13 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#user-form-container {
    display: flex;
    padding: 3rem;
}

#ticket-info {
    margin: 1rem;
    padding-left: 3rem;
    width: 40vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#user-form {
    display: flex;
    flex-direction: column;
    width: 60vw;
}

input {
    margin-bottom: 1rem;
    height: 2rem;
    width: 80%;
}

a {
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 77.5%;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}




Fri Jan 12 00:48:14 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:48:14 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:48:14 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:48:14 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7287.54", "type": "0", "bonus": "7"}]


Fri Jan 12 00:48:14 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:48:14 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:48:14 2024

GET /ticket/28 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:48:14 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}]


Fri Jan 12 00:48:17 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:48:17 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7287.54", "type": "0", "bonus": "7"}]


Fri Jan 12 00:48:17 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Content-Type: text/html
Content-Length: 98
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&ticket_id=28&full_name=&number=&security_code=&expiration_date=&bonus=8
Fri Jan 12 00:48:17 2024

HTTP/1.1 200 OK

OK


Fri Jan 12 00:48:17 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/28
Content-Type: text/html
Content-Length: 328
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

email=jadeuma235@gmail.com&content=Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28&date=2024-01-11&time=00:48
Fri Jan 12 00:48:17 2024

HTTP/1.1 200 OK

[]


Fri Jan 12 00:48:24 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/28
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:48:24 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/notifications.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>

            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>


        <button onclick="clearNotifications()">Clear</button>
        <ul id="notifications"></ul>
    </body>
    <script>
         //navbar
         const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            // fetch(`/unread/${email}`, {
            //     method: "GET",
            // })
            // .then(response => {
            //     return(response.text());
            // })
            // .then(data => {
            //     const user = JSON.parse(data)[0];
            //     const unread = document.getElementById("unread");
            //     unread.innerText = user.count;
            //     const money = document.getElementById("money");
            // })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        

        const notificationsElement = document.getElementById("notifications");

        fetch(`/notification/${email}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

        fetch(`/read/${email}`, {
            method: "PUT"
        })

        function clearNotifications() {
            fetch(`/notification/${email}`, {
                method: "DELETE",
            })
            .then(response => {
                return(response.text());
            })
            
            notificationsElement.innerText = "";
        }
    </script>
</html>


Fri Jan 12 00:48:25 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:48:25 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Fri Jan 12 00:48:25 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:48:25 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Fri Jan 12 00:48:25 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:48:25 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7186.29", "type": "0", "bonus": "8"}]


Fri Jan 12 00:48:25 2024

GET /notification/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:48:25 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:19"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28", "date": "2024-01-11", "time": "00:21"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:23"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 10.\nSafe travels!\n\nYour boarding pass number: 29", "date": "2024-01-11", "time": "00:25"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28", "date": "2024-01-11", "time": "00:26"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28", "date": "2024-01-11", "time": "00:27"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:30"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 10.\nSafe travels!\n\nYour boarding pass number: 29", "date": "2024-01-11", "time": "00:35"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 25", "date": "2024-01-11", "time": "00:39"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 10.\nSafe travels!\n\nYour boarding pass number: 29", "date": "2024-01-11", "time": "00:40"}, {"email": "jadeuma235@gmail.com", "content": "Boarding pass confirmed\nDear jadeuma235@gmail.com,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:50, from Hanoi to Ho Chi Minh City has been secured. Your seat: 9.\nSafe travels!\n\nYour boarding pass number: 28", "date": "2024-01-11", "time": "00:48"}]


Fri Jan 12 00:48:25 2024

PUT /read/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin
Content-Length: 0


Fri Jan 12 00:48:25 2024

HTTP/1.1 200 OK




Fri Jan 12 00:48:29 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Fri Jan 12 00:48:29 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            
            <div id="navbar_list">
                
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>

            <div class="account">
                <div class="trigger" ><h1>Hello <span id="email"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                    <div>Bonus: <span id="bonus"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const email = localStorage.getItem("email");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (email != "" && email != null) {
            document.getElementById("email").innerHTML = email;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");

            fetch(`/unread/${email}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
            })
            fetch(`/user/${email}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
            const bonus=document.getElementById("bonus");
            bonus.innerText=user.bonus;
        })

        }
        else {
            authElements.forEach(item => item.style.display = "flex");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Fri Jan 12 00:48:30 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:48:30 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Fri Jan 12 00:48:30 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:48:30 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Fri Jan 12 00:48:30 2024

GET /unread/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:48:30 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Fri Jan 12 00:48:30 2024

GET /user/jadeuma235@gmail.com HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:48:30 2024

HTTP/1.1 200 OK

[{"email": "jadeuma235@gmail.com", "money": "7186.29", "type": "0", "bonus": "8"}]


Fri Jan 12 00:48:31 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:121.0) Gecko/20100101 Firefox/121.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Fri Jan 12 00:48:31 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


