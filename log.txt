Sun Dec 10 18:57:47 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Sun Dec 10 18:57:47 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="date" name="date" id="date" placeholder="Date">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let date = document.getElementById("date").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, date: ${date}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (date != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(flight.date) == Date.parse(date));
            }

            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                }
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Sun Dec 10 18:57:47 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Sun Dec 10 18:57:47 2023

static/index.cssHTTP/1.1 200 OK




Sun Dec 10 18:57:47 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Sun Dec 10 18:57:47 2023

static/index.cssHTTP/1.1 200 OK




Sun Dec 10 18:57:47 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Sun Dec 10 18:57:47 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-19", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-6-21", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-7-23", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-7-24", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-7-24", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-8-26", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-8-26", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-9-30", "airline": "United"}]


Sun Dec 10 18:59:14 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Sun Dec 10 18:59:14 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="date" name="date" id="date" placeholder="Date">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let date = document.getElementById("date").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, date: ${date}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (date != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(flight.date) == Date.parse(date));
            }

            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                }
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Sun Dec 10 18:59:15 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Sun Dec 10 18:59:15 2023

static/index.cssHTTP/1.1 200 OK




Sun Dec 10 18:59:15 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Sun Dec 10 18:59:15 2023

static/index.cssHTTP/1.1 200 OK




Sun Dec 10 18:59:15 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Sun Dec 10 18:59:15 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-19", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-6-21", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-7-23", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-7-24", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-7-24", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-8-26", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-8-26", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-9-30", "airline": "United"}]


Wed Dec 13 01:26:31 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Dec 13 01:26:31 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="date" name="date" id="date" placeholder="Date">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let date = document.getElementById("date").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, date: ${date}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (date != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(flight.date) == Date.parse(date));
            }

            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                    
                    const a = document.createElement("a");
                    a.setAttribute("href", `http://localhost:8001/tickets/${flight.flight_id}`);
                    a.textContent = "tickets";
                    li.appendChild(a);
                }
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Wed Dec 13 01:26:32 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Dec 13 01:26:32 2023

static/index.cssHTTP/1.1 200 OK




Wed Dec 13 01:26:32 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Dec 13 01:26:32 2023

static/index.cssHTTP/1.1 200 OK




Wed Dec 13 01:26:33 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Dec 13 01:26:33 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-19", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-6-21", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-7-23", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-7-24", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-7-24", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-8-26", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-8-26", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-9-30", "airline": "United"}]


Wed Dec 13 01:26:36 2023

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Dec 13 01:26:36 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-19", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-6-21", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-7-23", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-7-24", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-7-24", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-8-26", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-8-26", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-9-30", "airline": "United"}]


Wed Dec 13 02:19:09 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Dec 13 02:19:09 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="date" name="date" id="date" placeholder="Date">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let date = document.getElementById("date").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, date: ${date}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (date != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(flight.date) == Date.parse(date));
            }

            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                    
                    const a = document.createElement("a");
                    a.setAttribute("href", `http://localhost:8001/tickets/${flight.flight_id}`);
                    a.textContent = "tickets";
                    li.appendChild(a);
                }
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Wed Dec 13 02:19:09 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Dec 13 02:19:09 2023

static/index.cssHTTP/1.1 200 OK




Wed Dec 13 02:19:09 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Dec 13 02:19:09 2023

static/index.cssHTTP/1.1 200 OK




Wed Dec 13 02:19:10 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Dec 13 02:19:10 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-19", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-6-21", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-7-23", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-7-24", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-7-24", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-8-26", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-8-26", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-9-30", "airline": "United"}]


Wed Dec 13 02:19:16 2023

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Dec 13 02:19:16 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>

    </body>
    <script>
        let route = window.location;
        console.log(window.location);
    </script>
</html>


Wed Dec 13 02:19:37 2023

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Dec 13 02:19:37 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>

    </body>
    <script>
        let route = window.location;
        console.log(window.location);
    </script>
</html>


                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Wed Dec 13 13:01:17 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Dec 13 13:01:17 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="date" name="date" id="date" placeholder="Date">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let date = document.getElementById("date").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, date: ${date}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (date != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(flight.date) == Date.parse(date));
            }

            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/tickets/${flight.flight_id}`);
                a.textContent = "tickets";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Wed Dec 13 13:01:17 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Dec 13 13:01:17 2023

static/index.cssHTTP/1.1 200 OK




Wed Dec 13 13:01:17 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Dec 13 13:01:17 2023

static/index.cssHTTP/1.1 200 OK




Wed Dec 13 13:01:18 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Dec 13 13:01:18 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-19", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-6-21", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-7-23", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-7-24", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-7-24", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-8-26", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-8-26", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-9-30", "airline": "United"}]


Wed Dec 13 13:01:23 2023

GET /tickets/2 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Dec 13 13:01:23 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>

    </body>
    <script>
        let route = window.location;
        console.log(window.location);
    </script>
</html>


Wed Dec 13 13:01:35 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Dec 13 13:01:35 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="date" name="date" id="date" placeholder="Date">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let date = document.getElementById("date").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, date: ${date}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (date != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(flight.date) == Date.parse(date));
            }

            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/tickets/${flight.flight_id}`);
                a.textContent = "tickets";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Wed Dec 13 13:01:36 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Dec 13 13:01:36 2023

static/index.cssHTTP/1.1 200 OK




Wed Dec 13 13:01:36 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Dec 13 13:01:36 2023

static/index.cssHTTP/1.1 200 OK




Wed Dec 13 13:01:36 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Dec 13 13:01:36 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-19", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-6-21", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-7-23", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-7-24", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-7-24", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-8-26", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-8-26", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-9-30", "airline": "United"}]


Wed Dec 13 13:08:58 2023

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Dec 13 13:08:58 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>

    </body>
    <script>
        const url = window.location;
        console.log(url.split("/"));
    </script>
</html>


Wed Dec 13 13:09:13 2023

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Dec 13 13:09:13 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>

    </body>
    <script>
        const url = window.location;
        console.log(url);
    </script>
</html>


Wed Dec 13 13:09:46 2023

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Dec 13 13:09:46 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>

    </body>
    <script>
        const url = window.location.pathname;
        console.log(url);
    </script>
</html>


Wed Dec 13 13:10:05 2023

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Dec 13 13:10:05 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>

    </body>
    <script>
        const url = window.location.pathname;
        console.log(url.split("/"));
    </script>
</html>


Wed Dec 13 13:12:11 2023

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Dec 13 13:12:11 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>

    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        console.log(id);
    </script>
</html>


Thu Dec 14 08:48:27 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 14 08:48:27 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="date" name="date" id="date" placeholder="Date">
                <input type="time" name="time" id="time" placeholder="Time">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let date = document.getElementById("date").value;
            let time = document.getElementById("time").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, date: ${date}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (date != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(flight.date) == Date.parse(date));
            }
            if (time != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(flight.date) == Date.parse(date));
            }

            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/tickets/${flight.flight_id}`);
                a.textContent = "tickets";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 14 08:48:28 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 08:48:28 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 08:48:28 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 08:48:28 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 08:48:29 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 14 08:48:29 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-6-21", "time": "7:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "8:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-7-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-7-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-7-24", "time": "4:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-8-26", "time": "9:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-8-26", "time": "9:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-9-30", "time": "1:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "8:30", "airline": "Vietnam Airlines"}]


Thu Dec 14 08:48:29 2023

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 08:49:40 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 14 08:49:40 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="date" name="date" id="date" placeholder="Date">
                <input type="time" name="time" id="time" placeholder="Time">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let date = document.getElementById("date").value;
            let time = document.getElementById("time").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, date: ${date}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (date != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(flight.date) == Date.parse(date));
            }
            if (time != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(flight.date) == Date.parse(date));
            }

            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/tickets/${flight.flight_id}`);
                a.textContent = "tickets";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 14 08:49:40 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 08:49:40 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 08:49:40 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 08:49:40 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 08:49:41 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 14 08:49:41 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-6-21", "time": "7:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "8:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-7-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-7-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-7-24", "time": "4:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-8-26", "time": "9:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-8-26", "time": "9:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-9-30", "time": "1:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "8:30", "airline": "Vietnam Airlines"}]


Thu Dec 14 08:49:44 2023

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Dec 14 08:49:44 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>

    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        fetch("/tickets/1", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
        })
    </script>
</html>


Thu Dec 14 08:49:44 2023

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/tickets/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 14 08:49:44 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>

    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        fetch("/tickets/1", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
        })
    </script>
</html>


Thu Dec 14 08:53:20 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 14 08:53:20 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, date: ${date}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                console.log(datetime);
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/tickets/${flight.flight_id}`);
                a.textContent = "tickets";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 14 08:53:21 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 08:53:21 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 08:53:21 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 08:53:21 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 08:53:21 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 14 08:53:21 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-6-21", "time": "7:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "8:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-7-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-7-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-7-24", "time": "4:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-8-26", "time": "9:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-8-26", "time": "9:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-9-30", "time": "1:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "8:30", "airline": "Vietnam Airlines"}]


Thu Dec 14 08:54:28 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 14 08:54:28 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                console.log(datetime);
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/tickets/${flight.flight_id}`);
                a.textContent = "tickets";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 14 08:54:29 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 08:54:29 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 08:54:29 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 08:54:29 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 08:54:29 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 14 08:54:29 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-6-21", "time": "7:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "8:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-7-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-7-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-7-24", "time": "4:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-8-26", "time": "9:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-8-26", "time": "9:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-9-30", "time": "1:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "8:30", "airline": "Vietnam Airlines"}]


Thu Dec 14 08:57:13 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 14 08:57:13 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                console.log(datetime);
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/tickets/${flight.flight_id}`);
                a.textContent = "tickets";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 14 08:57:14 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 08:57:14 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 08:57:14 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 08:57:14 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 08:57:14 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 14 08:57:14 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-6-21", "time": "7:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "8:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-7-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-7-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-7-24", "time": "4:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-8-26", "time": "9:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-8-26", "time": "9:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-9-30", "time": "1:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "8:30", "airline": "Vietnam Airlines"}]


Thu Dec 14 08:57:19 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 14 08:57:19 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                console.log(datetime);
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/tickets/${flight.flight_id}`);
                a.textContent = "tickets";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 14 08:57:20 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 08:57:20 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 08:57:20 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 08:57:20 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 08:57:20 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 14 08:57:20 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-6-21", "time": "7:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "8:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-7-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-7-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-7-24", "time": "4:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-8-26", "time": "9:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-8-26", "time": "9:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-9-30", "time": "1:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "8:30", "airline": "Vietnam Airlines"}]


Thu Dec 14 09:06:19 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 14 09:06:19 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.forEach(flight => 
                    {
                        const time = flight.time + ":00";
                        console.log(`${flight.date}T${flight.time}`);
                    })
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/tickets/${flight.flight_id}`);
                a.textContent = "tickets";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 14 09:06:20 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 09:06:20 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 09:06:20 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 09:06:20 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 09:06:20 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 14 09:06:20 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-6-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-7-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-7-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-7-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-8-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-8-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-9-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Dec 14 09:06:45 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 14 09:06:45 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.forEach(flight => 
                    {
                        const time = flight.time + ":00";
                        console.log(`${flight.date}T${flight.time}`);
                    })
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/tickets/${flight.flight_id}`);
                a.textContent = "tickets";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 14 09:06:46 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 09:06:46 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 09:06:46 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 09:06:46 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 09:06:46 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 14 09:06:46 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-6-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-7-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-7-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-7-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-8-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-8-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-9-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Dec 14 09:07:14 2023

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Dec 14 09:07:14 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1>login</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Thu Dec 14 09:07:18 2023

POST /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Content-Type: text/html
Content-Length: 25
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

username=abc&password=123
Thu Dec 14 09:07:18 2023

HTTP/1.1 200 OK

abc


Thu Dec 14 09:07:18 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Dec 14 09:07:18 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.forEach(flight => 
                    {
                        const time = flight.time + ":00";
                        console.log(`${flight.date}T${flight.time}`);
                    })
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/tickets/${flight.flight_id}`);
                a.textContent = "tickets";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 14 09:07:19 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 09:07:19 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 09:07:19 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 09:07:19 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 09:07:19 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 14 09:07:19 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-6-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-7-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-7-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-7-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-8-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-8-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-9-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Dec 14 09:08:13 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 14 09:08:13 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.forEach(flight => 
                    {
                        const time = flight.time + ":00";
                        console.log(`${flight.date}T${flight.time}`);
                    })
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/tickets/${flight.flight_id}`);
                a.textContent = "tickets";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 14 09:08:13 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 09:08:13 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 09:08:13 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 09:08:13 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 09:08:13 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 14 09:08:13 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-6-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-7-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-7-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-7-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-8-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-8-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-9-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Dec 14 09:11:39 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 14 09:11:39 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    datetime == Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/tickets/${flight.flight_id}`);
                a.textContent = "tickets";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 14 09:11:40 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 09:11:40 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 09:11:40 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 09:11:40 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 09:11:40 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 14 09:11:40 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-6-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-7-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-7-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-7-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-8-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-8-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-9-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Dec 14 09:12:43 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Dec 14 09:12:43 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    datetime == Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/tickets/${flight.flight_id}`);
                a.textContent = "tickets";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 14 09:12:43 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 09:12:43 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 09:12:43 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 09:12:43 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 09:12:43 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 14 09:12:43 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-6-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-7-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-7-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-7-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-8-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-8-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-9-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Dec 14 09:12:46 2023

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Dec 14 09:12:46 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>

    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        fetch("/tickets/1", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
        })
    </script>
</html>


Thu Dec 14 09:12:47 2023

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/tickets/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 14 09:12:47 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>

    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        fetch("/tickets/1", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
        })
    </script>
</html>


Thu Dec 14 10:04:49 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 14 10:04:49 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                {
                    const dt = Date.parse(`${flight.date}T${flight.time}:00`);
                    console.log(dt);
                });
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/tickets/${flight.flight_id}`);
                a.textContent = "tickets";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 14 10:04:50 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 10:04:50 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 10:04:50 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 10:04:50 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 10:04:50 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 14 10:04:50 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-6-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-7-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-7-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-7-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-8-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-8-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-9-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Dec 14 10:06:08 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 14 10:06:08 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                {
                    const dt = `${flight.date}T${flight.time}:00`;
                    console.log(dt);
                });
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/tickets/${flight.flight_id}`);
                a.textContent = "tickets";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 14 10:06:09 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 10:06:09 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 10:06:09 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 10:06:09 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 10:06:09 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 14 10:06:09 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-6-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-7-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-7-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-7-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-8-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-8-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-9-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Dec 14 10:06:20 2023

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Dec 14 10:06:20 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1>register</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <input type="password" name="confirm" id="confirm" placeholder="Confirm password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Thu Dec 14 10:06:28 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 14 10:06:28 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                {
                    const dt = `${flight.date}T${flight.time}:00`;
                    console.log(dt);
                });
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/tickets/${flight.flight_id}`);
                a.textContent = "tickets";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 14 10:06:28 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 10:06:28 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 10:06:28 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 10:06:28 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 10:06:29 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 14 10:06:29 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-6-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-7-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-7-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-7-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-8-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-8-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-9-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Dec 14 10:14:22 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 14 10:14:22 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                {
                    const dt = `${flight.date}T${flight.time}:00`;
                    console.log(dt);
                });
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/tickets/${flight.flight_id}`);
                a.textContent = "tickets";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 14 10:14:23 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 10:14:23 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 10:14:23 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 10:14:23 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 10:14:25 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 14 10:14:25 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Dec 14 10:15:01 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 14 10:15:01 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                {
                    const dt = Date.parse(`${flight.date}T${flight.time}:00`);
                    console.log(dt);
                });
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/tickets/${flight.flight_id}`);
                a.textContent = "tickets";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 14 10:15:03 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 10:15:03 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 10:15:03 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 10:15:03 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 10:15:03 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 14 10:15:03 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Dec 14 10:15:51 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 14 10:15:51 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    datetime == Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/tickets/${flight.flight_id}`);
                a.textContent = "tickets";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 14 10:15:52 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 10:15:52 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 10:15:52 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 10:15:52 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 10:15:53 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 14 10:15:53 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Dec 14 10:16:33 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 14 10:16:33 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/tickets/${flight.flight_id}`);
                a.textContent = "tickets";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 14 10:16:34 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 10:16:34 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 10:16:34 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 14 10:16:34 2023

static/index.cssHTTP/1.1 200 OK




Thu Dec 14 10:16:34 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 14 10:16:34 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


