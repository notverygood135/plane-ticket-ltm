Thu Dec 28 15:30:43 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 28 15:30:43 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 28 15:30:43 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:30:43 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Dec 28 15:30:43 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:30:43 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Dec 28 15:30:44 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:30:44 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Dec 28 15:30:44 2023

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:30:44 2023

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Thu Dec 28 15:30:48 2023

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Dec 28 15:30:48 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1>login</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Thu Dec 28 15:31:01 2023

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Dec 28 15:31:01 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1>register</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <input type="password" name="confirm" id="confirm" placeholder="Confirm password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Thu Dec 28 15:31:20 2023

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Dec 28 15:31:20 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            document.getElementById("flight").innerText = filteredTickets[0].flight_id;
            document.getElementById("from").innerText = filteredTickets[0].from;
            document.getElementById("to").innerText = filteredTickets[0].to;
            document.getElementById("date").innerText = filteredTickets[0].date;
            document.getElementById("time").innerText = filteredTickets[0].time;
            
            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                ul.appendChild(a);
            });
        }

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Thu Dec 28 15:31:20 2023

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:31:20 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}


Thu Dec 28 15:31:20 2023

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:31:20 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}


Thu Dec 28 15:31:20 2023

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:31:20 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "2", "seat": "2", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "22", "seat": "3", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "23", "seat": "4", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "24", "seat": "5", "price": "101.21"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "25", "seat": "6", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "26", "seat": "7", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "27", "seat": "8", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "28", "seat": "9", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "29", "seat": "10", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "30", "seat": "11", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "31", "seat": "12", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "32", "seat": "13", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "33", "seat": "14", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "34", "seat": "15", "price": "200.25"}]


Thu Dec 28 15:31:29 2023

GET /buy/2 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Dec 28 15:31:29 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info">
            <div class="ticket-info-column">Flight: <span id="flight"></span></div>
            <div class="ticket-info-column">From: <span id="from"></span></div>
            <div class="ticket-info-column">To: <span id="to"></span></div>
            <div class="ticket-info-column">Date: <span id="date"></span></div>
            <div class="ticket-info-column">Time: <span id="time"></span></div>
        </div>
        <div id="user-form">
            <label for="number">Credit Card</label>            
            <input type="text" name="number" id="number">

            <label for="number">Expiration Date</label>    
            <input type="date" name="expiration-date" id="expiration-date">

            <label for="security-code">Security Code</label>    
            <input type="text" name="security-code" id="security-code">

            <label for="full-name">Card Holder Name</label>
            <input type="text" name="full-name" id="full-name">
            <button type="button" onclick="submit()">Submit</button>
        </div>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        function submit() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    </script>
</html>


Thu Dec 28 15:31:29 2023

GET /ticket/2 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/2
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:31:29 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25"}]


Thu Dec 28 15:32:36 2023

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Dec 28 15:32:36 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1>register</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <input type="password" name="confirm" id="confirm" placeholder="Confirm password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Thu Dec 28 15:46:34 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 28 15:46:34 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 28 15:46:35 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:46:35 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Dec 28 15:46:35 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:46:35 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Dec 28 15:46:35 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:46:35 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Dec 28 15:46:35 2023

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:46:35 2023

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Thu Dec 28 15:46:36 2023

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Dec 28 15:46:36 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1>register</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <input type="password" name="confirm" id="confirm" placeholder="Confirm password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Thu Dec 28 15:49:02 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 28 15:49:02 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 28 15:49:02 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:49:02 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Dec 28 15:49:02 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:49:02 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Dec 28 15:49:02 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:49:02 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Dec 28 15:49:02 2023

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:49:02 2023

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Thu Dec 28 15:49:04 2023

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Dec 28 15:49:04 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel=""stylesheet/>
        <h1>register</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <input type="password" name="confirm" id="confirm" placeholder="Confirm password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Thu Dec 28 15:50:06 2023

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Dec 28 15:50:06 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel=""stylesheet/>
        <h1>register</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <input type="password" name="confirm" id="confirm" placeholder="Confirm password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Thu Dec 28 15:54:09 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 28 15:54:09 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 28 15:54:09 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:54:09 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Dec 28 15:54:09 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:54:09 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Dec 28 15:54:09 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:54:09 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Dec 28 15:54:09 2023

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:54:09 2023

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Thu Dec 28 15:54:11 2023

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Dec 28 15:54:11 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel=""stylesheet/>
        <h1>register</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <input type="password" name="confirm" id="confirm" placeholder="Confirm password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Thu Dec 28 15:54:57 2023

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Dec 28 15:54:57 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel=""stylesheet/>
        <h1>register</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <input type="password" name="confirm" id="confirm" placeholder="Confirm password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Thu Dec 28 15:55:02 2023

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Dec 28 15:55:02 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel=""stylesheet/>
        <h1>register</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <input type="password" name="confirm" id="confirm" placeholder="Confirm password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Thu Dec 28 15:58:59 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 28 15:58:59 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 28 15:58:59 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:58:59 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Dec 28 15:58:59 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:58:59 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Dec 28 15:58:59 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:58:59 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Dec 28 15:58:59 2023

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:58:59 2023

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Thu Dec 28 15:59:00 2023

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Dec 28 15:59:00 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>register</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <input type="password" name="confirm" id="confirm" placeholder="Confirm password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Thu Dec 28 15:59:01 2023

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:59:01 2023

HTTP/1.1 200 OK

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 15px;
}


Thu Dec 28 15:59:01 2023

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 15:59:01 2023

HTTP/1.1 200 OK

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 15px;
}


Thu Dec 28 16:07:48 2023

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 28 16:07:48 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input type="text" name="username" id="username" placeholder="Username"><br>
        <input type="password" name="password" id="password" placeholder="Password"><br>
        <input type="password" name="confirm" id="confirm" placeholder="Confirm password"><br>
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Thu Dec 28 16:07:48 2023

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:07:48 2023

HTTP/1.1 200 OK

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 15px;
}


Thu Dec 28 16:07:48 2023

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:07:48 2023

HTTP/1.1 200 OK

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 15px;
}


Thu Dec 28 16:07:48 2023

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:07:48 2023

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Thu Dec 28 16:15:08 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 28 16:15:08 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 28 16:15:08 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:15:08 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Dec 28 16:15:08 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:15:08 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Dec 28 16:15:08 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:15:08 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Dec 28 16:15:08 2023

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:15:08 2023

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Thu Dec 28 16:15:10 2023

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Dec 28 16:15:10 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input type="text" name="username" id="username" placeholder="Username"><br>
        <input type="password" name="password" id="password" placeholder="Password"><br>
        <input type="password" name="confirm" id="confirm" placeholder="Confirm password"><br>
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Thu Dec 28 16:15:10 2023

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:15:10 2023

HTTP/1.1 200 OK

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 15px;
}


Thu Dec 28 16:15:10 2023

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:15:10 2023

HTTP/1.1 200 OK

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 15px;
}


Thu Dec 28 16:20:35 2023

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Dec 28 16:20:35 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input type="text" name="username" id="username" placeholder="Username"><br>
        <input type="password" name="password" id="password" placeholder="Password"><br>
        <input type="password" name="confirm" id="confirm" placeholder="Confirm password"><br>
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Thu Dec 28 16:20:35 2023

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:20:35 2023

HTTP/1.1 200 OK

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 15px;
}


Thu Dec 28 16:20:35 2023

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:20:35 2023

HTTP/1.1 200 OK

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 15px;
}


Thu Dec 28 16:27:45 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 28 16:27:45 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 28 16:27:45 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:27:45 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Dec 28 16:27:45 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:27:45 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Dec 28 16:27:45 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:27:45 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Dec 28 16:27:45 2023

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:27:45 2023

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Thu Dec 28 16:27:46 2023

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Dec 28 16:27:46 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input type="text" name="username" id="username" placeholder="Username"><br>
        <input type="password" name="password" id="password" placeholder="Password"><br>
        <input type="password" name="confirm" id="confirm" placeholder="Confirm password"><br>
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Thu Dec 28 16:27:46 2023

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:27:46 2023

HTTP/1.1 200 OK

body {
    background-color: rgb(220, 128, 142);
}

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

.username, .password, .button, .confirm {
    text-align: center;
    padding: 10px;

}


Thu Dec 28 16:27:46 2023

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:27:46 2023

HTTP/1.1 200 OK

body {
    background-color: rgb(220, 128, 142);
}

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

.username, .password, .button, .confirm {
    text-align: center;
    padding: 10px;

}


Thu Dec 28 16:49:25 2023

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin


Thu Dec 28 16:49:25 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input class="username" type="text" name="username" id="username" placeholder="Username"><br>
        <input class="passwordtype="password" name="password" id="password" placeholder="Password"><br>
        <input class="confirm" type="password" name="confirm" id="confirm" placeholder="Confirm password"><br>
        <button class="button" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Thu Dec 28 16:49:33 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 28 16:49:33 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 28 16:49:33 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:49:33 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Dec 28 16:49:33 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:49:33 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Dec 28 16:49:33 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:49:33 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Dec 28 16:49:35 2023

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Dec 28 16:49:35 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input class="username" type="text" name="username" id="username" placeholder="Username"><br>
        <input class="passwordtype="password" name="password" id="password" placeholder="Password"><br>
        <input class="confirm" type="password" name="confirm" id="confirm" placeholder="Confirm password"><br>
        <button class="button" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Thu Dec 28 16:49:35 2023

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:49:35 2023

HTTP/1.1 200 OK

body {
    background-color: rgb(220, 128, 142);
}

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}



Thu Dec 28 16:49:35 2023

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:49:35 2023

HTTP/1.1 200 OK

body {
    background-color: rgb(220, 128, 142);
}

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}



Thu Dec 28 16:51:21 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 28 16:51:21 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 28 16:51:21 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:51:21 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Dec 28 16:51:21 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:51:21 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Dec 28 16:51:21 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:51:21 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Dec 28 16:51:21 2023

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:51:21 2023

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Thu Dec 28 16:52:43 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 28 16:52:43 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 28 16:52:44 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:52:44 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Dec 28 16:52:44 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:52:44 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Dec 28 16:52:44 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:52:44 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Dec 28 16:52:44 2023

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:52:44 2023

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Thu Dec 28 16:52:45 2023

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Dec 28 16:52:45 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input class="username" type="text" name="username" id="username" placeholder="Username"><br>
        <input class="passwordtype="password" name="password" id="password" placeholder="Password"><br>
        <input class="confirm" type="password" name="confirm" id="confirm" placeholder="Confirm password"><br>
        <button class="button" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Thu Dec 28 16:52:45 2023

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:52:45 2023

HTTP/1.1 200 OK

body {
    background-color: rgb(220, 128, 142);
}

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Thu Dec 28 16:52:45 2023

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:52:45 2023

HTTP/1.1 200 OK

body {
    background-color: rgb(220, 128, 142);
}

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Thu Dec 28 16:54:20 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 28 16:54:20 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 28 16:54:20 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:54:20 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Dec 28 16:54:20 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:54:20 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Dec 28 16:54:20 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:54:20 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Dec 28 16:54:20 2023

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:54:20 2023

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Thu Dec 28 16:54:22 2023

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Dec 28 16:54:22 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input class="username" type="text" name="username" id="username" placeholder="Username"><br>
        <input class="passwordtype="password" name="password" id="password" placeholder="Password"><br>
        <input class="confirm" type="password" name="confirm" id="confirm" placeholder="Confirm password"><br>
        <button class="button" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Thu Dec 28 16:54:22 2023

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:54:22 2023

HTTP/1.1 200 OK

body {
    background-color: rgb(220, 128, 142);
}

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Thu Dec 28 16:54:22 2023

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:54:22 2023

HTTP/1.1 200 OK

body {
    background-color: rgb(220, 128, 142);
}

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Thu Dec 28 16:56:00 2023

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 28 16:56:00 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input class="username" type="text" name="username" id="username" placeholder="Username"><br>
        <input class="passwordtype="password" name="password" id="password" placeholder="Password"><br>
        <input class="confirm" type="password" name="confirm" id="confirm" placeholder="Confirm password"><br>
        <button class="button" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Thu Dec 28 16:56:00 2023

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:56:00 2023

HTTP/1.1 200 OK

body {
    background-color: rgb(220, 128, 142);
}

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Thu Dec 28 16:56:00 2023

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:56:00 2023

HTTP/1.1 200 OK

body {
    background-color: rgb(220, 128, 142);
}

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Thu Dec 28 16:56:00 2023

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:56:00 2023

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Thu Dec 28 16:57:18 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Dec 28 16:57:18 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Dec 28 16:57:18 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:57:18 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Dec 28 16:57:18 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:57:18 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Dec 28 16:57:18 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:57:18 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Dec 28 16:57:18 2023

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:57:18 2023

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Thu Dec 28 16:57:19 2023

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Dec 28 16:57:19 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input class="username" type="text" name="username" id="username" placeholder="Username"><br>
        <input class="passwordtype="password" name="password" id="password" placeholder="Password"><br>
        <input class="confirm" type="password" name="confirm" id="confirm" placeholder="Confirm password"><br>
        <button class="button" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Thu Dec 28 16:57:20 2023

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:57:20 2023

HTTP/1.1 200 OK

body {
    background-color: rgb(220, 128, 142);
}

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}
.password{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Thu Dec 28 16:57:20 2023

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Dec 28 16:57:20 2023

HTTP/1.1 200 OK

body {
    background-color: rgb(220, 128, 142);
}

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}
.password{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Sun Dec 31 19:49:20 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Sun Dec 31 19:49:20 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Sun Dec 31 19:49:21 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Sun Dec 31 19:49:21 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Sun Dec 31 19:49:21 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Sun Dec 31 19:49:21 2023

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Sun Dec 31 19:49:21 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Sun Dec 31 19:49:21 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Sun Dec 31 19:49:26 2023

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Sun Dec 31 19:49:26 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input class="username" type="text" name="username" id="username" placeholder="Username" size="50"><br>
        <input class="password" type="password" name="password" id="password" placeholder="Password" size="50"><br>
        <input class="confirm" type="password" name="confirm" id="confirm" placeholder="Confirm password" size="50"><br>
        <button class="button" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Sun Dec 31 19:49:26 2023

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Sun Dec 31 19:49:26 2023

HTTP/1.1 200 OK

body {
    background-color: rgb(220, 128, 142);
}

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}
.password{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Sun Dec 31 19:49:26 2023

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Sun Dec 31 19:49:26 2023

HTTP/1.1 200 OK

body {
    background-color: rgb(220, 128, 142);
}

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}
.password{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Sun Dec 31 19:49:39 2023

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Sun Dec 31 19:49:39 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1>login</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 14:00:18 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Jan  3 14:00:18 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Wed Jan  3 14:00:18 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:00:18 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:00:18 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:00:18 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:00:19 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:00:19 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:00:20 2024

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:00:20 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input class="username" type="text" name="username" id="username" placeholder="Username" size="50"><br>
        <input class="password" type="password" name="password" id="password" placeholder="Password" size="50"><br>
        <input class="confirm" type="password" name="confirm" id="confirm" placeholder="Confirm password" size="50"><br>
        <button class="button" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 14:00:20 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:00:20 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(220, 128, 142);
}

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}
.password{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Wed Jan  3 14:00:20 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:00:20 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(220, 128, 142);
}

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}
.password{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Wed Jan  3 14:03:53 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Jan  3 14:03:53 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Wed Jan  3 14:03:53 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:03:53 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:03:53 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:03:53 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:03:53 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:03:53 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:05:51 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Jan  3 14:05:51 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Wed Jan  3 14:05:51 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:05:51 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:05:51 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:05:51 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:05:51 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:05:51 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:07:27 2024

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:07:27 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input class="username" type="text" name="username" id="username" placeholder="Username" size="50"><br>
        <input class="password" type="password" name="password" id="password" placeholder="Password" size="50"><br>
        <input class="confirm" type="password" name="confirm" id="confirm" placeholder="Confirm password" size="50"><br>
        <button class="button" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 14:07:27 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:07:27 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(220, 128, 142);
}

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}
.password{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Wed Jan  3 14:07:27 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:07:27 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(220, 128, 142);
}

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}
.password{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Wed Jan  3 14:10:20 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Jan  3 14:10:20 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Wed Jan  3 14:10:20 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:10:20 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:10:20 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:10:20 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:10:21 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:10:21 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:10:21 2024

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:10:21 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 14:11:28 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Jan  3 14:11:28 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Wed Jan  3 14:11:28 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:11:28 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:11:28 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:11:28 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:11:28 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:11:28 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:12:53 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Jan  3 14:12:53 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Wed Jan  3 14:12:53 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:12:53 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:12:53 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:12:53 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:12:53 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:12:53 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:13:37 2024

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:13:37 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input class="username" type="text" name="username" id="username" placeholder="Username" size="50"><br>
        <input class="password" type="password" name="password" id="password" placeholder="Password" size="50"><br>
        <input class="confirm" type="password" name="confirm" id="confirm" placeholder="Confirm password" size="50"><br>
        <button class="button" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 14:13:38 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:13:38 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(220, 128, 142);
}

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}
.password{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Wed Jan  3 14:13:38 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:13:38 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(220, 128, 142);
}

h1 {
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}
.password{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Wed Jan  3 14:20:29 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Jan  3 14:20:29 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Wed Jan  3 14:20:29 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:20:29 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:20:29 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:20:29 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:20:29 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:20:29 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:20:30 2024

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:20:30 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 14:20:47 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:20:47 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1>login</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 14:20:52 2024

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:20:52 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input class="username" type="text" name="username" id="username" placeholder="Username" size="50"><br>
        <input class="password" type="password" name="password" id="password" placeholder="Password" size="50"><br>
        <input class="confirm" type="password" name="confirm" id="confirm" placeholder="Confirm password" size="50"><br>
        <button class="button" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 14:20:53 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:20:53 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(136, 78, 110);
}

h1 {
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}
.password{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Wed Jan  3 14:20:53 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:20:53 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(136, 78, 110);
}

h1 {
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}
.password{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Wed Jan  3 14:22:15 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:22:15 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Wed Jan  3 14:22:15 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:22:15 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:22:15 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:22:15 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:22:15 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:22:15 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:22:18 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:22:18 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1>login</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 14:22:21 2024

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:22:21 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input class="username" type="text" name="username" id="username" placeholder="Username" size="50"><br>
        <input class="password" type="password" name="password" id="password" placeholder="Password" size="50"><br>
        <input class="confirm" type="password" name="confirm" id="confirm" placeholder="Confirm password" size="50"><br>
        <button class="button" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 14:22:21 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:22:21 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(136, 78, 110);
}

h1 {
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}
.password{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Wed Jan  3 14:22:21 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:22:21 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(136, 78, 110);
}

h1 {
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}
.password{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Wed Jan  3 14:27:27 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Jan  3 14:27:27 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Wed Jan  3 14:27:27 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:27:27 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body{
    font-family: sans-serif;
    
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:27:27 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:27:27 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body{
    font-family: sans-serif;
    
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:27:28 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:27:28 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:31:23 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:31:23 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1>login</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 14:31:28 2024

POST /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Content-Type: text/html
Content-Length: 25
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

username=abc&password=123
Wed Jan  3 14:31:28 2024

HTTP/1.1 200 OK

abc


Wed Jan  3 14:31:28 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:31:28 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Wed Jan  3 14:31:29 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:31:29 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body{
    font-family: sans-serif;

}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:31:29 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:31:29 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body{
    font-family: sans-serif;

}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:31:29 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:31:29 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:31:36 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:31:36 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 14:31:36 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:31:36 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:31:36 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:31:36 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:31:36 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:31:36 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 14:31:39 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:31:39 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 14:31:39 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:31:39 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 14:31:48 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:31:48 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 14:31:48 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:31:48 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 14:31:49 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:31:49 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 14:31:49 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:31:49 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 14:33:11 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Jan  3 14:33:11 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Wed Jan  3 14:33:12 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:33:12 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body{
    font-family: sans-serif;

}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:33:12 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:33:12 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body{
    font-family: sans-serif;

}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:33:12 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:33:12 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:33:12 2024

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:33:12 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 14:33:28 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:33:28 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Wed Jan  3 14:33:28 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:33:28 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body{
    font-family: sans-serif;

}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:33:28 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:33:28 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body{
    font-family: sans-serif;

}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:33:28 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:33:28 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:33:29 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:33:29 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1>login</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 14:33:31 2024

POST /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Content-Type: text/html
Content-Length: 25
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

username=abc&password=123
Wed Jan  3 14:33:31 2024

HTTP/1.1 200 OK

abc


Wed Jan  3 14:33:31 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:33:31 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Wed Jan  3 14:33:31 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:33:31 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body{
    font-family: sans-serif;

}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:33:31 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:33:31 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body{
    font-family: sans-serif;

}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:33:31 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:33:31 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:34:57 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Jan  3 14:34:57 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Wed Jan  3 14:34:57 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:34:57 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body{
    font-family: sans-serif;
    background-color: rgb(67, 131, 131);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:34:57 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:34:57 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body{
    font-family: sans-serif;
    background-color: rgb(67, 131, 131);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:34:57 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:34:57 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:34:58 2024

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:34:58 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 14:35:07 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:35:07 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Wed Jan  3 14:35:08 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:35:08 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body{
    font-family: sans-serif;
    background-color: rgb(67, 131, 131);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:35:08 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:35:08 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body{
    font-family: sans-serif;
    background-color: rgb(67, 131, 131);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:35:08 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:35:08 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:35:08 2024

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:35:08 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input class="username" type="text" name="username" id="username" placeholder="Username" size="50"><br>
        <input class="password" type="password" name="password" id="password" placeholder="Password" size="50"><br>
        <input class="confirm" type="password" name="confirm" id="confirm" placeholder="Confirm password" size="50"><br>
        <button class="button" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 14:35:08 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:35:08 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(67, 131, 131);
}

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}
.password{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Wed Jan  3 14:35:08 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:35:08 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(67, 131, 131);
}

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}
.password{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Wed Jan  3 14:35:15 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:35:15 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Wed Jan  3 14:35:15 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:35:15 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body{
    font-family: sans-serif;
    background-color: rgb(67, 131, 131);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:35:15 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:35:15 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body{
    font-family: sans-serif;
    background-color: rgb(67, 131, 131);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:35:15 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:35:15 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:36:54 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Jan  3 14:36:54 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Wed Jan  3 14:36:54 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:36:54 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:36:54 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:36:54 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:36:54 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:36:54 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:36:55 2024

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:36:55 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 14:43:48 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Jan  3 14:43:48 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Wed Jan  3 14:43:48 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:43:48 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:43:48 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:43:48 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:43:48 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:43:48 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:43:48 2024

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:43:48 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 14:44:26 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:44:26 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1>login</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 14:44:27 2024

POST /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Content-Type: text/html
Content-Length: 25
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

username=abc&password=123
Wed Jan  3 14:44:27 2024

HTTP/1.1 200 OK

abc


Wed Jan  3 14:44:27 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:44:27 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Wed Jan  3 14:44:27 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:44:27 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:44:27 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:44:27 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.home{
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:44:27 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:44:27 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:44:43 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:44:43 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 14:44:43 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:44:43 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:44:43 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:44:43 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:44:43 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:44:43 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 14:47:21 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:47:21 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 14:47:21 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:47:21 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 14:47:22 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:47:22 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 14:47:22 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:47:22 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:47:22 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:47:22 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:47:22 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:47:22 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 14:50:37 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:50:37 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 14:50:37 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:50:37 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 14:51:20 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:51:20 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 14:51:20 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:51:20 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:51:20 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:51:20 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:51:20 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:51:20 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 14:51:24 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:51:24 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="nha">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 14:51:24 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:51:24 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 14:51:24 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:51:24 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 14:51:24 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:51:24 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:51:27 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:51:27 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 14:51:27 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:51:27 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 14:51:28 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:51:28 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 14:51:28 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:51:28 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:51:28 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:51:28 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:51:28 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:51:28 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 14:51:30 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:51:30 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 14:51:30 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:51:30 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 14:55:20 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:55:20 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="nha">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 14:55:20 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:20 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 14:55:20 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:20 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 14:55:20 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:20 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:55:21 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:55:21 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 14:55:21 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:21 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:55:21 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:21 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:55:22 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:22 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 14:55:23 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:55:23 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link href="../static/nostification.css" rel="stylesheet"/>
    <h1>NOSTIFICATION</h1>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 14:55:23 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:23 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}


Wed Jan  3 14:55:23 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:23 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}


Wed Jan  3 14:55:23 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:23 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 14:55:27 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:55:27 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 14:55:27 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:27 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:55:27 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:27 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:55:27 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:27 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 14:55:27 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:55:27 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="nha">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 14:55:27 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:27 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 14:55:27 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:27 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 14:55:27 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:27 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:55:30 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:55:30 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 14:55:30 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:30 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:55:30 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:30 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:55:30 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:30 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 14:55:31 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:55:31 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link href="../static/nostification.css" rel="stylesheet"/>
    <h1>NOSTIFICATION</h1>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 14:55:31 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:31 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}


Wed Jan  3 14:55:31 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:31 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}


Wed Jan  3 14:55:31 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:31 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 14:55:32 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:55:32 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="nha">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 14:55:32 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:32 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 14:55:32 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:32 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 14:55:32 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:32 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:55:34 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:55:34 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="nha">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 14:55:34 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:34 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 14:55:34 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:34 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 14:55:34 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:55:34 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:56:36 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:56:36 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            document.getElementById("flight").innerText = filteredTickets[0].flight_id;
            document.getElementById("from").innerText = filteredTickets[0].from;
            document.getElementById("to").innerText = filteredTickets[0].to;
            document.getElementById("date").innerText = filteredTickets[0].date;
            document.getElementById("time").innerText = filteredTickets[0].time;
            
            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                ul.appendChild(a);
            });
        }

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 14:56:36 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:56:36 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}


Wed Jan  3 14:56:36 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:56:36 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}


Wed Jan  3 14:56:36 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:56:36 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "2", "seat": "2", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "22", "seat": "3", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "23", "seat": "4", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "24", "seat": "5", "price": "101.21"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "25", "seat": "6", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "26", "seat": "7", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "27", "seat": "8", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "28", "seat": "9", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "29", "seat": "10", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "30", "seat": "11", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "31", "seat": "12", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "32", "seat": "13", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "33", "seat": "14", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "34", "seat": "15", "price": "200.25"}]


Wed Jan  3 14:56:55 2024

GET /buy/2 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:56:55 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info">
            <div class="ticket-info-column">Flight: <span id="flight"></span></div>
            <div class="ticket-info-column">From: <span id="from"></span></div>
            <div class="ticket-info-column">To: <span id="to"></span></div>
            <div class="ticket-info-column">Date: <span id="date"></span></div>
            <div class="ticket-info-column">Time: <span id="time"></span></div>
        </div>
        <div id="user-form">
            <label for="number">Credit Card</label>            
            <input type="text" name="number" id="number">

            <label for="number">Expiration Date</label>    
            <input type="date" name="expiration-date" id="expiration-date">

            <label for="security-code">Security Code</label>    
            <input type="text" name="security-code" id="security-code">

            <label for="full-name">Card Holder Name</label>
            <input type="text" name="full-name" id="full-name">
            <button type="button" onclick="submit()">Submit</button>
        </div>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        function submit() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    </script>
</html>


Wed Jan  3 14:56:55 2024

GET /ticket/2 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/2
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:56:55 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25"}]


Wed Jan  3 14:58:11 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:58:11 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="nha">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 14:58:11 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:58:11 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-bottom: 30px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 14:58:11 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:58:11 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-bottom: 30px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 14:58:11 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:58:11 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:58:20 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:58:20 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 14:58:20 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:58:20 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:58:20 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:58:20 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:58:20 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:58:20 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 14:58:22 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:58:22 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="nha">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 14:58:22 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:58:22 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-bottom: 30px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 14:58:22 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:58:22 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-bottom: 30px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 14:58:22 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:58:22 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:58:22 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:58:22 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="nha">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 14:58:22 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:58:22 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-bottom: 30px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 14:58:22 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:58:22 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-bottom: 30px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 14:58:22 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:58:22 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:58:24 2024

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:58:24 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input class="username" type="text" name="username" id="username" placeholder="Username" size="50"><br>
        <input class="password" type="password" name="password" id="password" placeholder="Password" size="50"><br>
        <input class="confirm" type="password" name="confirm" id="confirm" placeholder="Confirm password" size="50"><br>
        <button class="button" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 14:58:24 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:58:24 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}
.password{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Wed Jan  3 14:58:24 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:58:24 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}
.password{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Wed Jan  3 14:58:30 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:58:30 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1>login</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 14:59:19 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:59:19 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="nha">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 14:59:19 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:59:19 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 14:59:19 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:59:19 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 14:59:19 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:59:19 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:59:23 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:59:23 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1>login</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 14:59:25 2024

POST /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Content-Type: text/html
Content-Length: 25
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

username=abc&password=123
Wed Jan  3 14:59:25 2024

HTTP/1.1 200 OK

abc


Wed Jan  3 14:59:25 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:59:25 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="nha">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 14:59:25 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:59:25 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 14:59:25 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:59:25 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 14:59:25 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:59:25 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:13:27 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:13:27 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" >home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:13:27 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:13:27 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
    border: 1px solid black
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:13:27 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:13:27 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
    border: 1px solid black
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:13:27 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:13:27 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:15:28 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:15:28 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" >home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:15:29 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:15:29 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
    border: 2px solid black
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:15:29 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:15:29 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
    border: 2px solid black
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:15:29 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:15:29 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:15:30 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:15:30 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1>LOGIN</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 15:15:33 2024

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:15:33 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input class="username" type="text" name="username" id="username" placeholder="Username" size="50"><br>
        <input class="password" type="password" name="password" id="password" placeholder="Password" size="50"><br>
        <input class="confirm" type="password" name="confirm" id="confirm" placeholder="Confirm password" size="50"><br>
        <button class="button" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 15:15:33 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:15:33 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}
.password{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Wed Jan  3 15:15:33 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:15:33 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}
.password{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Wed Jan  3 15:15:40 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:15:40 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1>LOGIN</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 15:15:42 2024

POST /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Content-Type: text/html
Content-Length: 25
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

username=abc&password=123
Wed Jan  3 15:15:42 2024

HTTP/1.1 200 OK

abc


Wed Jan  3 15:15:42 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:15:42 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" >home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:15:42 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:15:42 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
    border: 2px solid black
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:15:42 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:15:42 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
    border: 2px solid black
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:15:43 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:15:43 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:23:02 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:23:02 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" >home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:23:02 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:23:02 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
    border-bottom: 2px solid black;
    border-right: 2px solid black;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border-bottom: 2px solid black;
    border-right: 2px solid black;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:23:02 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:23:02 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
    border-bottom: 2px solid black;
    border-right: 2px solid black;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border-bottom: 2px solid black;
    border-right: 2px solid black;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:23:02 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:23:02 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:23:20 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:23:20 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" >home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:23:20 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:23:20 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
    border-bottom: 2px solid black;
    border-right: 2px solid black;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border-bottom: 2px solid black;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:23:20 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:23:20 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
    border-bottom: 2px solid black;
    border-right: 2px solid black;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border-bottom: 2px solid black;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:23:20 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:23:20 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:23:33 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:23:33 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" >home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:23:34 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:23:34 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
    border-bottom: 2px solid black;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border-bottom: 2px solid black;
    border-right: 2px solid black;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:23:34 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:23:34 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
    border-bottom: 2px solid black;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border-bottom: 2px solid black;
    border-right: 2px solid black;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:23:34 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:23:34 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:29:32 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:29:32 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" >home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:29:32 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:29:32 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
    border-bottom: 2px solid black;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border-bottom: 2px solid black;
    border-right: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:29:32 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:29:32 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
    border-bottom: 2px solid black;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border-bottom: 2px solid black;
    border-right: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:29:32 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:29:32 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:29:33 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:29:33 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" >home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:29:33 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:29:33 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
    border-bottom: 2px solid black;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border-bottom: 2px solid black;
    border-right: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:29:33 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:29:33 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
    border-bottom: 2px solid black;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border-bottom: 2px solid black;
    border-right: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:29:33 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:29:33 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:30:16 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:30:16 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" >home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:30:16 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:30:16 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
    border-bottom: 2px solid black;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border-bottom: 2px solid black;
    border-right: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:30:16 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:30:16 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
    border-bottom: 2px solid black;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border-bottom: 2px solid black;
    border-right: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:30:16 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:30:16 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:31:40 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:31:40 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" >home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:31:40 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:31:40 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
    border-bottom: 2px solid black;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:31:40 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:31:40 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
    border-bottom: 2px solid black;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:31:40 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:31:40 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:31:58 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:31:58 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" >home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:31:58 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:31:58 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
    border: 2px solid black;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:31:58 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:31:58 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
    border: 2px solid black;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:31:58 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:31:58 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:32:12 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:32:12 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" >home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:32:12 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:32:12 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:32:12 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:32:12 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:32:12 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:32:12 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:38:37 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:38:37 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" >home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:38:38 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:38:38 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 1fr 3fr 1fr 3fr 1fr 2fr 1fr 1.5fr 1fr 3fr 1fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:38:38 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:38:38 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 1fr 3fr 1fr 3fr 1fr 2fr 1fr 1.5fr 1fr 3fr 1fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:38:38 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:38:38 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:39:05 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:39:05 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" >home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:39:05 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:39:05 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:39:05 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:39:05 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:39:05 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:39:05 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:39:32 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:39:32 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" >home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:39:32 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:39:32 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    outline: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:39:32 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:39:32 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    outline: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:39:32 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:39:32 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:39:56 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:39:56 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" >home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:39:56 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:39:56 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:39:56 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:39:56 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:39:56 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:39:56 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:40:34 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:40:34 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" >home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:40:34 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:40:34 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border-right: 2px solid black;
    border-bottom: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:40:34 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:40:34 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border-right: 2px solid black;
    border-bottom: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:40:35 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:40:35 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:41:16 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:41:16 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" >home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:41:16 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:41:16 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 2fr 4fr 4fr 3fr 2.5fr 2fr 2fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:41:16 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:41:16 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 2fr 4fr 4fr 3fr 2.5fr 2fr 2fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:41:16 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:41:16 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:41:38 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:41:38 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" >home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:41:38 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:41:38 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 1fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:41:38 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:41:38 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 1fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:41:38 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:41:38 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:42:01 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:42:01 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" >home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:42:01 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:42:01 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:42:01 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:42:01 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .nha {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:42:01 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:42:01 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:44:22 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:44:22 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:44:22 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:44:22 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:44:22 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:44:22 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:44:22 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:44:22 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:46:31 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:46:31 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:46:31 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:46:31 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
    display: inline-block;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:46:31 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:46:31 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
    display: inline-block;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:46:31 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:46:31 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:47:00 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:47:00 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:47:00 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:47:00 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
    display: flex;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:47:00 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:47:00 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
    display: flex;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:47:00 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:47:00 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:48:45 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:48:45 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" id="menu">home</a>
        <a href="http://localhost:8001/login" class="auth" id="menu">login</a>
        <a href="http://localhost:8001/register" class="auth" id="menu">register</a>
        <a href="http://localhost:8001/inventory" class="nav" id="menu">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" id="menu">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" id="menu">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:48:45 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:48:45 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

.menu{
    display: inline-block;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:48:45 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:48:45 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

.menu{
    display: inline-block;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:48:45 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:48:45 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:48:47 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:48:47 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" id="menu">home</a>
        <a href="http://localhost:8001/login" class="auth" id="menu">login</a>
        <a href="http://localhost:8001/register" class="auth" id="menu">register</a>
        <a href="http://localhost:8001/inventory" class="nav" id="menu">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" id="menu">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" id="menu">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:48:47 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:48:47 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

.menu{
    display: inline-block;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:48:47 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:48:47 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

.menu{
    display: inline-block;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:48:47 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:48:47 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:49:26 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:49:26 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" id="menu">home</a>
        <a href="http://localhost:8001/login" class="auth" id="menu">login</a>
        <a href="http://localhost:8001/register" class="auth" id="menu">register</a>
        <a href="http://localhost:8001/inventory" class="nav" id="menu">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" id="menu">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" id="menu">logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:49:26 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:49:26 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

.menu{
    display: flex;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:49:26 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:49:26 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

.menu{
    display: flex;
}

body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:49:26 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:49:26 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:50:17 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:50:17 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 15:50:17 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:50:17 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 15:50:17 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:50:17 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 15:50:17 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:50:17 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 15:52:15 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:52:15 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home  </a>
        <a href="http://localhost:8001/inventory" class="nav">inventory  </a>
        <a href="http://localhost:8001/notifications" class="nav">notifications  </a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout  </a>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 15:52:15 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:52:15 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 15:52:15 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:52:15 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 15:52:15 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:52:15 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 15:53:49 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:53:49 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 15:53:49 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:53:49 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 15:53:49 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:53:49 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 15:53:49 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:53:49 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 15:54:29 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:54:29 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 15:54:29 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:54:29 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 15:54:29 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:54:29 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 15:54:29 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:54:29 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 15:54:30 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:54:30 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:54:30 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:54:30 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 20px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:54:30 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:54:30 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 20px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:54:30 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:54:30 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:54:38 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:54:38 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 15:54:38 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:54:38 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 15:54:38 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:54:38 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 15:54:38 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:54:38 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 15:55:02 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:55:02 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 15:55:02 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:02 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 20px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 15:55:02 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:02 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 20px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 15:55:02 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:02 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 15:55:06 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:55:06 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:55:06 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:06 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 20px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:55:06 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:06 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 20px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:55:06 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:06 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:55:09 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:55:09 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 15:55:09 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:09 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 20px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 15:55:09 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:09 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 20px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 15:55:09 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:09 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 15:55:10 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:55:10 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link href="../static/nostification.css" rel="stylesheet"/>
    <h1>NOSTIFICATION</h1>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 15:55:10 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:10 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}


Wed Jan  3 15:55:10 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:10 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}


Wed Jan  3 15:55:10 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:10 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 15:55:13 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:55:13 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 15:55:14 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:14 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 20px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 15:55:14 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:14 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 20px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 15:55:14 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:14 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 15:55:18 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:55:18 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link href="../static/nostification.css" rel="stylesheet"/>
    <h1>NOSTIFICATION</h1>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 15:55:18 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:18 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}


Wed Jan  3 15:55:18 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:18 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}


Wed Jan  3 15:55:18 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:18 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 15:55:37 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:55:37 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link href="../static/nostification.css" rel="stylesheet"/>
    <h1>NOSTIFICATION</h1>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 15:55:38 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:38 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}


Wed Jan  3 15:55:38 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:38 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}


Wed Jan  3 15:55:38 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:38 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 15:55:39 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:55:39 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link href="../static/nostification.css" rel="stylesheet"/>
    <h1>NOSTIFICATION</h1>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 15:55:39 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:39 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}


Wed Jan  3 15:55:39 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:39 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}


Wed Jan  3 15:55:39 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:39 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 15:55:44 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:55:44 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link href="../static/nostification.css" rel="stylesheet"/>
    <h1>NOSTIFICATION</h1>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 15:55:45 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:45 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 20px;
}


Wed Jan  3 15:55:45 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:45 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 20px;
}


Wed Jan  3 15:55:45 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:55:45 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 15:56:18 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:56:18 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link href="../static/nostification.css" rel="stylesheet"/>
    <h1>NOSTIFICATION</h1>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 15:56:18 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:56:18 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 20px;
}


Wed Jan  3 15:56:18 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:56:18 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 20px;
}


Wed Jan  3 15:56:18 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:56:18 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 15:56:28 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:56:28 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:56:28 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:56:28 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 20px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:56:28 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:56:28 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 20px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:56:28 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:56:28 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 15:57:25 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 15:57:25 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 15:57:25 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:57:25 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:57:25 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:57:25 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 15:57:25 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 15:57:25 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 16:03:06 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 16:03:06 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 16:03:07 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 16:03:07 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 16:03:07 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 16:03:07 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 16:03:07 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 16:03:07 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 16:03:12 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 16:03:12 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 16:03:12 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 16:03:12 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 16:03:12 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 16:03:12 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 16:03:12 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 16:03:12 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 16:03:22 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 16:03:22 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 16:03:22 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 16:03:22 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 16:03:22 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 16:03:22 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 16:03:22 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 16:03:22 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 16:03:45 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 16:03:45 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 16:03:45 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 16:03:45 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 16:03:45 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 16:03:45 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 16:03:45 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 16:03:45 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:35:24 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Jan  3 20:35:24 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 20:35:25 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:25 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 20:35:25 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:25 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 20:35:26 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:26 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:35:34 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:35:34 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 20:35:34 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:34 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 20:35:34 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:34 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 20:35:34 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:34 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 20:35:38 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:35:38 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link href="../static/nostification.css" rel="stylesheet"/>
    <h1>NOSTIFICATION</h1>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 20:35:38 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:38 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}


Wed Jan  3 20:35:38 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:38 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}


Wed Jan  3 20:35:38 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:38 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 20:35:41 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:35:41 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 20:35:41 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:41 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 20:35:41 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:41 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 20:35:41 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:41 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:35:42 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:35:42 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 20:35:42 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:42 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 20:35:42 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:42 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 20:35:42 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:42 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:35:43 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:35:43 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1>LOGIN</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 20:35:45 2024

POST /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Content-Type: text/html
Content-Length: 25
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

username=abc&password=123
Wed Jan  3 20:35:45 2024

HTTP/1.1 200 OK

abc


Wed Jan  3 20:35:45 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:35:45 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 20:35:45 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:45 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 20:35:45 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:45 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 20:35:45 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:45 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:35:47 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:35:47 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link href="../static/nostification.css" rel="stylesheet"/>
    <h1>NOSTIFICATION</h1>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 20:35:47 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:47 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}


Wed Jan  3 20:35:47 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:47 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}


Wed Jan  3 20:35:47 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:47 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 20:35:50 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:35:50 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 20:35:50 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:50 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 20:35:50 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:50 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 20:35:50 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:50 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:35:54 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:35:54 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1>LOGIN</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 20:35:58 2024

POST /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Content-Type: text/html
Content-Length: 25
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

username=abc&password=123
Wed Jan  3 20:35:58 2024

HTTP/1.1 200 OK

abc


Wed Jan  3 20:35:58 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:35:58 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 20:35:58 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:58 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 20:35:58 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:58 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 20:35:58 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:35:58 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:36:02 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:36:02 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 20:36:02 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:36:02 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 20:36:02 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:36:02 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 20:36:02 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:36:02 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 20:36:04 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:36:04 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" onclick="exchange()">Exchange</button>
            <button type="button" onclick="print()">Print</button>
        </div>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
            }
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print() {

        }
    </script>
</html>


Wed Jan  3 20:36:04 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:36:04 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25"}]


Wed Jan  3 20:36:08 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:36:08 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 20:36:08 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:36:08 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 20:36:08 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:36:08 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 20:36:08 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:36:08 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:43:01 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:43:01 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 20:43:01 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:43:01 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 20:43:01 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:43:01 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 20:43:01 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:43:01 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:43:14 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:43:14 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 20:43:14 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:43:14 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 20:43:14 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:43:14 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 20:43:14 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:43:14 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:43:16 2024

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:43:16 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input class="username" type="text" name="username" id="username" placeholder="Username" size="50"><br>
        <input class="password" type="password" name="password" id="password" placeholder="Password" size="50"><br>
        <input class="confirm" type="password" name="confirm" id="confirm" placeholder="Confirm password" size="50"><br>
        <button class="button" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 20:43:16 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:43:16 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}
.password{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Wed Jan  3 20:43:16 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:43:16 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username{
    display: block;
    margin-left: auto;
    margin-right: auto;
}
.password{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Wed Jan  3 20:45:39 2024

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:45:39 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input class="username" type="text" name="username" id="username" placeholder="Username" size="50"><br>
        <input class="password" type="password" name="password" id="password" placeholder="Password" size="50"><br>
        <input class="confirm" type="password" name="confirm" id="confirm" placeholder="Confirm password" size="50"><br>
        <button class="button" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 20:45:39 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:45:39 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username, .password, .confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Wed Jan  3 20:45:39 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:45:39 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username, .password, .confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Wed Jan  3 20:46:05 2024

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:46:05 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input class="username" type="text" name="username" id="username" placeholder="Username" size="50"><br>
        <input class="password" type="password" name="password" id="password" placeholder="Password" size="50"><br>
        <input class="confirm" type="password" name="confirm" id="confirm" placeholder="Confirm password" size="50"><br>
        <button class="button" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 20:46:05 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:46:05 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username, .password, .confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Wed Jan  3 20:46:05 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:46:05 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username, .password, .confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
}


Wed Jan  3 20:46:34 2024

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:46:34 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input class="username" type="text" name="username" id="username" placeholder="Username" size="50"><br>
        <input class="password" type="password" name="password" id="password" placeholder="Password" size="50"><br>
        <input class="confirm" type="password" name="confirm" id="confirm" placeholder="Confirm password" size="50"><br>
        <button class="button" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 20:46:34 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:46:34 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username, .password, .confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}


Wed Jan  3 20:46:34 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:46:34 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username, .password, .confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}


Wed Jan  3 20:46:42 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:46:42 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1>LOGIN</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 20:56:24 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:56:24 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1>LOGIN</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password"><br>
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 20:56:52 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:56:52 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1>LOGIN</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password"><br>
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 20:57:59 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:57:59 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link rel="stylesheet" href="../static/login.css">
        <h1>LOGIN</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password"><br>
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 20:57:59 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:57:59 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}




Wed Jan  3 20:58:00 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:58:00 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}




Wed Jan  3 21:03:15 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:03:15 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link rel="stylesheet" href="../static/login.css">
        <h1>LOGIN</h1>
        <input class="info" type="text" name="username" id="username" placeholder="Username">
        <input class="info" type="password" name="password" id="password" placeholder="Password"><br>
        <button class="confirm" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 21:03:15 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:03:15 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

.info {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
}

.confirm {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}



Wed Jan  3 21:03:15 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:03:15 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

.info {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
}

.confirm {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}



Wed Jan  3 21:03:40 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:03:40 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link rel="stylesheet" href="../static/login.css">
        <h1>LOGIN</h1>
        <input class="info" type="text" name="username" id="username" placeholder="Username">
        <input class="info" type="password" name="password" id="password" placeholder="Password"><br>
        <button class="confirm" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 21:03:40 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:03:40 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

.info {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
    margin-bottom: 10px;
}

.confirm {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}



Wed Jan  3 21:03:40 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:03:40 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

.info {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
    margin-bottom: 10px;
}

.confirm {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}



Wed Jan  3 21:03:46 2024

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:03:46 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input class="username" type="text" name="username" id="username" placeholder="Username" size="50"><br>
        <input class="password" type="password" name="password" id="password" placeholder="Password" size="50"><br>
        <input class="confirm" type="password" name="confirm" id="confirm" placeholder="Confirm password" size="50"><br>
        <button class="button" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 21:03:46 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:03:46 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username, .password, .confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}


Wed Jan  3 21:03:46 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:03:46 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username, .password, .confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}


Wed Jan  3 21:03:49 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:03:49 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link rel="stylesheet" href="../static/login.css">
        <h1>LOGIN</h1>
        <input class="info" type="text" name="username" id="username" placeholder="Username">
        <input class="info" type="password" name="password" id="password" placeholder="Password"><br>
        <button class="confirm" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 21:03:49 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:03:49 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

.info {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
    margin-bottom: 10px;
}

.confirm {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}



Wed Jan  3 21:03:49 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:03:49 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

.info {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
    margin-bottom: 10px;
}

.confirm {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}



Wed Jan  3 21:04:31 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:04:31 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 21:04:31 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:31 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:04:31 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:31 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:04:31 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:31 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:04:43 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:04:43 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 21:04:43 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:43 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 80x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:04:43 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:43 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 80x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:04:43 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:43 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:04:45 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:04:45 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 21:04:45 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:45 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 80x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:04:45 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:45 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 80x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:04:45 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:45 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:04:46 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:04:46 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link rel="stylesheet" href="../static/login.css">
        <h1>LOGIN</h1>
        <input class="info" type="text" name="username" id="username" placeholder="Username">
        <input class="info" type="password" name="password" id="password" placeholder="Password"><br>
        <button class="confirm" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 21:04:46 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:46 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

.info {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
    margin-bottom: 10px;
}

.confirm {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}



Wed Jan  3 21:04:46 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:46 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

.info {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
    margin-bottom: 10px;
}

.confirm {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}



Wed Jan  3 21:04:48 2024

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:04:48 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input class="username" type="text" name="username" id="username" placeholder="Username" size="50"><br>
        <input class="password" type="password" name="password" id="password" placeholder="Password" size="50"><br>
        <input class="confirm" type="password" name="confirm" id="confirm" placeholder="Confirm password" size="50"><br>
        <button class="button" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 21:04:48 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:48 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username, .password, .confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}


Wed Jan  3 21:04:48 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:48 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username, .password, .confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}


Wed Jan  3 21:04:51 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:04:51 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link rel="stylesheet" href="../static/login.css">
        <h1>LOGIN</h1>
        <input class="info" type="text" name="username" id="username" placeholder="Username">
        <input class="info" type="password" name="password" id="password" placeholder="Password"><br>
        <button class="confirm" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 21:04:51 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:51 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

.info {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
    margin-bottom: 10px;
}

.confirm {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}



Wed Jan  3 21:04:51 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:51 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

.info {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
    margin-bottom: 10px;
}

.confirm {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}



Wed Jan  3 21:04:52 2024

POST /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Content-Type: text/html
Content-Length: 25
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

username=abc&password=123
Wed Jan  3 21:04:52 2024

HTTP/1.1 200 OK

abc


Wed Jan  3 21:04:52 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:04:52 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 21:04:52 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:52 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 80x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:04:52 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:52 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 80x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:04:52 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:52 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:04:53 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:04:53 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link href="../static/nostification.css" rel="stylesheet"/>
    <h1>NOSTIFICATION</h1>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 21:04:53 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:53 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}


Wed Jan  3 21:04:53 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:53 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}


Wed Jan  3 21:04:53 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:53 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 21:04:55 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:04:55 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:04:55 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:55 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:04:55 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:55 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 60px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:04:55 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:55 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 21:04:56 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:04:56 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 21:04:56 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:56 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 80x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:04:56 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:56 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 80x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:04:56 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:56 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:04:57 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:04:57 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 21:04:57 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:57 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 80x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:04:57 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:57 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 80x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:04:57 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:04:57 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:05:06 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:05:06 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 21:05:06 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:05:06 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 80x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:05:06 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:05:06 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 80x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:05:06 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:05:06 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:05:22 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:05:22 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link rel="stylesheet" href="../static/login.css">
        <h1>LOGIN</h1>
        <input class="info" type="text" name="username" id="username" placeholder="Username">
        <input class="info" type="password" name="password" id="password" placeholder="Password"><br>
        <button class="confirm" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 21:05:22 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:05:22 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

.info {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
    margin-bottom: 10px;
}

.confirm {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}



Wed Jan  3 21:05:22 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:05:22 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

.info {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
    margin-bottom: 10px;
}

.confirm {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}



Wed Jan  3 21:08:41 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:08:41 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            document.getElementById("flight").innerText = filteredTickets[0].flight_id;
            document.getElementById("from").innerText = filteredTickets[0].from;
            document.getElementById("to").innerText = filteredTickets[0].to;
            document.getElementById("date").innerText = filteredTickets[0].date;
            document.getElementById("time").innerText = filteredTickets[0].time;
            
            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                ul.appendChild(a);
            });
        }

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:08:41 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:08:41 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}


Wed Jan  3 21:08:41 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:08:41 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}


Wed Jan  3 21:08:41 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:08:41 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "2", "seat": "2", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "22", "seat": "3", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "23", "seat": "4", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "24", "seat": "5", "price": "101.21"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "25", "seat": "6", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "26", "seat": "7", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "27", "seat": "8", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "28", "seat": "9", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "29", "seat": "10", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "30", "seat": "11", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "31", "seat": "12", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "32", "seat": "13", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "33", "seat": "14", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "34", "seat": "15", "price": "200.25"}]


Wed Jan  3 21:08:44 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:08:44 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link rel="stylesheet" href="../static/login.css">
        <h1>LOGIN</h1>
        <input class="info" type="text" name="username" id="username" placeholder="Username">
        <input class="info" type="password" name="password" id="password" placeholder="Password"><br>
        <button class="confirm" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 21:08:44 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:08:44 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

.info {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
    margin-bottom: 10px;
}

.confirm {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}



Wed Jan  3 21:08:44 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:08:44 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

.info {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
    margin-bottom: 10px;
}

.confirm {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}



Wed Jan  3 21:08:48 2024

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:08:48 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input class="username" type="text" name="username" id="username" placeholder="Username" size="50"><br>
        <input class="password" type="password" name="password" id="password" placeholder="Password" size="50"><br>
        <input class="confirm" type="password" name="confirm" id="confirm" placeholder="Confirm password" size="50"><br>
        <button class="button" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 21:08:48 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:08:48 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username, .password, .confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}


Wed Jan  3 21:08:48 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:08:48 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username, .password, .confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}


Wed Jan  3 21:08:51 2024

GET /register HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:08:51 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link href="../static/register.css" rel="stylesheet"/>
        <h1>REGISTER</h1>
        <input class="username" type="text" name="username" id="username" placeholder="Username" size="50"><br>
        <input class="password" type="password" name="password" id="password" placeholder="Password" size="50"><br>
        <input class="confirm" type="password" name="confirm" id="confirm" placeholder="Confirm password" size="50"><br>
        <button class="button" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 21:08:51 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:08:51 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username, .password, .confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}


Wed Jan  3 21:08:51 2024

GET /static/register.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/register
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:08:51 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
}

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.username, .password, .confirm{
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
}

.button{
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}


Wed Jan  3 21:08:55 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:08:55 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 21:08:55 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:08:55 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:08:55 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:08:55 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:08:55 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:08:55 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:08:56 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:08:56 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link rel="stylesheet" href="../static/login.css">
        <h1>LOGIN</h1>
        <input class="info" type="text" name="username" id="username" placeholder="Username">
        <input class="info" type="password" name="password" id="password" placeholder="Password"><br>
        <button class="confirm" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 21:08:56 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:08:56 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

.info {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
    margin-bottom: 10px;
}

.confirm {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}



Wed Jan  3 21:08:56 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:08:56 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

.info {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
    margin-bottom: 10px;
}

.confirm {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}



Wed Jan  3 21:08:58 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:08:58 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <link rel="stylesheet" href="../static/login.css">
        <h1>LOGIN</h1>
        <input class="info" type="text" name="username" id="username" placeholder="Username">
        <input class="info" type="password" name="password" id="password" placeholder="Password"><br>
        <button class="confirm" type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    if (data != "NOT OK") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 21:08:58 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:08:58 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

.info {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
    margin-bottom: 10px;
}

.confirm {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}



Wed Jan  3 21:08:58 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:08:58 2024

HTTP/1.1 200 OK

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

.info {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 300px;
    margin-bottom: 10px;
}

.confirm {
    display: block;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
    width: 100px;
}



Wed Jan  3 21:08:59 2024

POST /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Content-Type: text/html
Content-Length: 25
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

username=abc&password=123
Wed Jan  3 21:08:59 2024

HTTP/1.1 200 OK

abc


Wed Jan  3 21:08:59 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:08:59 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 21:08:59 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:08:59 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:08:59 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:08:59 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:08:59 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:08:59 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:09:00 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:09:00 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link href="../static/nostification.css" rel="stylesheet"/>
    <h1>NOSTIFICATION</h1>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 21:09:00 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:09:00 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}


Wed Jan  3 21:09:00 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:09:00 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}


Wed Jan  3 21:09:00 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:09:00 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 21:11:43 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:11:43 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link href="../static/nostification.css" rel="stylesheet"/>
    <h1>NOSTIFICATION</h1>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 21:11:43 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:11:43 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


Wed Jan  3 21:11:43 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:11:43 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


Wed Jan  3 21:11:43 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:11:43 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 21:11:46 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:11:46 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 21:11:46 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:11:46 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:11:46 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:11:46 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:11:46 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:11:46 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:11:52 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:11:52 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link href="../static/nostification.css" rel="stylesheet"/>
    <h1>NOSTIFICATION</h1>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 21:11:52 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:11:52 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


Wed Jan  3 21:11:52 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:11:52 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


Wed Jan  3 21:11:53 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:11:53 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 21:11:55 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:11:55 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link href="../static/nostification.css" rel="stylesheet"/>
    <h1>NOSTIFICATION</h1>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 21:11:55 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:11:55 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


Wed Jan  3 21:11:55 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:11:55 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


Wed Jan  3 21:11:55 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:11:55 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 21:11:56 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:11:56 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:11:56 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:11:56 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:11:56 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:11:56 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:11:56 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:11:56 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 21:11:57 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:11:57 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link href="../static/nostification.css" rel="stylesheet"/>
    <h1>NOSTIFICATION</h1>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 21:11:57 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:11:57 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


Wed Jan  3 21:11:57 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:11:57 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


Wed Jan  3 21:11:57 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:11:57 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 21:11:58 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:11:58 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 21:11:58 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:11:58 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:11:58 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:11:58 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:11:58 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:11:58 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:12:03 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:12:03 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link href="../static/nostification.css" rel="stylesheet"/>
    <h1>NOSTIFICATION</h1>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 21:12:03 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:03 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


Wed Jan  3 21:12:03 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:03 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


Wed Jan  3 21:12:03 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:03 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 21:12:06 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:12:06 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:12:06 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:06 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:12:06 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:06 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:12:06 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:06 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 21:12:49 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:12:49 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:12:49 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:49 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:12:49 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:49 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:12:49 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:49 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 21:12:50 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:12:50 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link href="../static/nostification.css" rel="stylesheet"/>
    <h1>NOSTIFICATION</h1>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 21:12:50 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:50 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav {
    font-size: 18px;
    margin-top: 10px;
    margin-top: 10px;
    margin-bottom: 10px;
}


Wed Jan  3 21:12:50 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:50 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav {
    font-size: 18px;
    margin-top: 10px;
    margin-top: 10px;
    margin-bottom: 10px;
}


Wed Jan  3 21:12:50 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:50 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 21:12:52 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:12:52 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:12:52 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:52 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:12:52 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:52 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:12:52 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:52 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 21:12:53 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:12:53 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link href="../static/nostification.css" rel="stylesheet"/>
    <h1>NOSTIFICATION</h1>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 21:12:53 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:53 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav {
    font-size: 18px;
    margin-top: 10px;
    margin-top: 10px;
    margin-bottom: 10px;
}


Wed Jan  3 21:12:53 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:53 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav {
    font-size: 18px;
    margin-top: 10px;
    margin-top: 10px;
    margin-bottom: 10px;
}


Wed Jan  3 21:12:53 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:53 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 21:12:54 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:12:54 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 21:12:54 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:54 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:12:54 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:54 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:12:54 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:54 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:12:55 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:12:55 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link href="../static/nostification.css" rel="stylesheet"/>
    <h1>NOSTIFICATION</h1>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 21:12:55 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:55 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav {
    font-size: 18px;
    margin-top: 10px;
    margin-top: 10px;
    margin-bottom: 10px;
}


Wed Jan  3 21:12:55 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:55 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav {
    font-size: 18px;
    margin-top: 10px;
    margin-top: 10px;
    margin-bottom: 10px;
}


Wed Jan  3 21:12:55 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:55 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 21:12:58 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:12:58 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:12:58 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:58 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:12:58 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:58 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:12:58 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:58 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 21:12:58 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:12:58 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 21:12:58 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:58 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:12:58 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:58 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:12:58 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:12:58 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:13:00 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:13:00 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:13:00 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:13:00 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:13:00 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:13:00 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:13:00 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:13:00 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 21:14:41 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:14:41 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:14:41 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:14:41 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:14:41 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:14:41 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:14:41 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:14:41 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 21:14:45 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:14:45 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link href="../static/nostification.css" rel="stylesheet"/>
    <h1>NOSTIFICATION</h1>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 21:14:45 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:14:45 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


Wed Jan  3 21:14:45 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:14:45 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


Wed Jan  3 21:14:45 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:14:45 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}]


Wed Jan  3 21:14:47 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:14:47 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:14:47 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:14:47 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:14:47 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:14:47 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:14:47 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:14:47 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 21:20:58 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:20:58 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 21:20:58 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:20:58 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:20:58 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:20:58 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:20:58 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:20:58 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:21:02 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:21:02 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001" class="home-link">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span class="tickets-info">Flight</span>
                <span class="tickets-info">From</span>
                <span class="tickets-info">To</span>
                <span class="tickets-info">Date</span>
                <spa class="tickets-info"n>Time</span>
                <span class="tickets-info">Airline</span>
                <span class="tickets-info">Ticket</span>
                <span class="tickets-info">Seat</span>
                <span class="tickets-info">Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:21:03 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:21:03 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:21:03 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:21:03 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:21:03 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:21:03 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 21:21:50 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:21:50 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" onclick="exchange()">Exchange</button>
            <button type="button" onclick="print()">Print</button>
        </div>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
            }
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print() {

        }
    </script>
</html>


Wed Jan  3 21:21:50 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:21:50 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25"}]


Wed Jan  3 21:21:57 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:21:57 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 21:21:57 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:21:57 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:21:57 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:21:57 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:21:57 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:21:57 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:21:58 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:21:58 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            document.getElementById("flight").innerText = filteredTickets[0].flight_id;
            document.getElementById("from").innerText = filteredTickets[0].from;
            document.getElementById("to").innerText = filteredTickets[0].to;
            document.getElementById("date").innerText = filteredTickets[0].date;
            document.getElementById("time").innerText = filteredTickets[0].time;
            
            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                ul.appendChild(a);
            });
        }

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:21:58 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:21:58 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}


Wed Jan  3 21:21:58 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:21:58 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}


Wed Jan  3 21:21:58 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:21:58 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "2", "seat": "2", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "22", "seat": "3", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "23", "seat": "4", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "24", "seat": "5", "price": "101.21"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "25", "seat": "6", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "26", "seat": "7", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "27", "seat": "8", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "28", "seat": "9", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "29", "seat": "10", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "30", "seat": "11", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "31", "seat": "12", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "32", "seat": "13", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "33", "seat": "14", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "34", "seat": "15", "price": "200.25"}]


Wed Jan  3 21:22:01 2024

GET /buy/2 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:22:01 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info">
            <div class="ticket-info-column">Flight: <span id="flight"></span></div>
            <div class="ticket-info-column">From: <span id="from"></span></div>
            <div class="ticket-info-column">To: <span id="to"></span></div>
            <div class="ticket-info-column">Date: <span id="date"></span></div>
            <div class="ticket-info-column">Time: <span id="time"></span></div>
        </div>
        <div id="user-form">
            <label for="number">Credit Card</label>            
            <input type="text" name="number" id="number">

            <label for="number">Expiration Date</label>    
            <input type="date" name="expiration-date" id="expiration-date">

            <label for="security-code">Security Code</label>    
            <input type="text" name="security-code" id="security-code">

            <label for="full-name">Card Holder Name</label>
            <input type="text" name="full-name" id="full-name">
            <button type="button" onclick="submit()">Submit</button>
        </div>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        function submit() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    </script>
</html>


Wed Jan  3 21:22:01 2024

GET /ticket/2 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/2
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:01 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25"}]


Wed Jan  3 21:22:17 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/2
Content-Type: text/html
Content-Length: 105
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

username=abc&ticket_id=2&full_name=qwe12e&number=123123qweqwe&security_code=123123123123&expiration_date=
Wed Jan  3 21:22:17 2024

HTTP/1.1 200 OK

OK


Wed Jan  3 21:22:17 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/2
Content-Type: text/html
Content-Length: 296
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

username=abc&content=Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 2.\nSafe travels!\n\nYour boarding pass number: 2&date=2024-01-03&time=21:22
Wed Jan  3 21:22:17 2024

HTTP/1.1 200 OK

[]


Wed Jan  3 21:22:18 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/2
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:22:18 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 21:22:19 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:19 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:22:19 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:19 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:22:19 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:19 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:22:20 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:22:20 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link href="../static/nostification.css" rel="stylesheet"/>
    <h1>NOSTIFICATION</h1>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 21:22:20 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:20 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


Wed Jan  3 21:22:20 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:20 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


Wed Jan  3 21:22:20 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:20 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 2.\nSafe travels!\n\nYour boarding pass number: 2", "date": "2024-01-03", "time": "21:22"}]


Wed Jan  3 21:22:25 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:22:25 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001" class="home-link">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span class="tickets-info">Flight</span>
                <span class="tickets-info">From</span>
                <span class="tickets-info">To</span>
                <span class="tickets-info">Date</span>
                <spa class="tickets-info"n>Time</span>
                <span class="tickets-info">Airline</span>
                <span class="tickets-info">Ticket</span>
                <span class="tickets-info">Seat</span>
                <span class="tickets-info">Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:22:25 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:25 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:22:25 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:25 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:22:25 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:25 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "2", "seat": "2", "price": "101.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 21:22:28 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:22:28 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 21:22:28 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:28 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:22:28 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:28 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:22:28 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:28 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:22:29 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:22:29 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001" class="home-link">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span class="tickets-info">Flight</span>
                <span class="tickets-info">From</span>
                <span class="tickets-info">To</span>
                <span class="tickets-info">Date</span>
                <spa class="tickets-info"n>Time</span>
                <span class="tickets-info">Airline</span>
                <span class="tickets-info">Ticket</span>
                <span class="tickets-info">Seat</span>
                <span class="tickets-info">Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:22:29 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:29 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:22:29 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:29 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:22:29 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:29 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "2", "seat": "2", "price": "101.25"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 21:22:30 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:22:30 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link href="../static/nostification.css" rel="stylesheet"/>
    <h1>NOSTIFICATION</h1>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 21:22:30 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:30 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


Wed Jan  3 21:22:30 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:30 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


Wed Jan  3 21:22:30 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:30 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 2.\nSafe travels!\n\nYour boarding pass number: 2", "date": "2024-01-03", "time": "21:22"}]


Wed Jan  3 21:22:31 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:22:31 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 21:22:31 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:31 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:22:31 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:31 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:22:31 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:31 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:22:36 2024

GET /flight/2 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:22:36 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            document.getElementById("flight").innerText = filteredTickets[0].flight_id;
            document.getElementById("from").innerText = filteredTickets[0].from;
            document.getElementById("to").innerText = filteredTickets[0].to;
            document.getElementById("date").innerText = filteredTickets[0].date;
            document.getElementById("time").innerText = filteredTickets[0].time;
            
            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                ul.appendChild(a);
            });
        }

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:22:36 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/2
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:36 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}


Wed Jan  3 21:22:36 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/2
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:36 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}


Wed Jan  3 21:22:36 2024

GET /tickets/2 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/2
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:36 2024

HTTP/1.1 200 OK

[{"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "3", "seat": "3", "price": "200.99"}]


Wed Jan  3 21:22:37 2024

GET /buy/3 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/2
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:22:37 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info">
            <div class="ticket-info-column">Flight: <span id="flight"></span></div>
            <div class="ticket-info-column">From: <span id="from"></span></div>
            <div class="ticket-info-column">To: <span id="to"></span></div>
            <div class="ticket-info-column">Date: <span id="date"></span></div>
            <div class="ticket-info-column">Time: <span id="time"></span></div>
        </div>
        <div id="user-form">
            <label for="number">Credit Card</label>            
            <input type="text" name="number" id="number">

            <label for="number">Expiration Date</label>    
            <input type="date" name="expiration-date" id="expiration-date">

            <label for="security-code">Security Code</label>    
            <input type="text" name="security-code" id="security-code">

            <label for="full-name">Card Holder Name</label>
            <input type="text" name="full-name" id="full-name">
            <button type="button" onclick="submit()">Submit</button>
        </div>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        function submit() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    </script>
</html>


Wed Jan  3 21:22:37 2024

GET /ticket/3 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/3
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:37 2024

HTTP/1.1 200 OK

[{"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "3", "flight_id": "2", "seat": "3", "price": "200.99"}]


Wed Jan  3 21:22:44 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/3
Content-Type: text/html
Content-Length: 103
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

username=abc&ticket_id=3&full_name=qweqwe&number=123123&security_code=123123&expiration_date=2024-01-01
Wed Jan  3 21:22:44 2024

HTTP/1.1 200 OK

OK


Wed Jan  3 21:22:44 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/3
Content-Type: text/html
Content-Length: 296
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

username=abc&content=Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #2, departing on 2024-05-20 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 3.\nSafe travels!\n\nYour boarding pass number: 3&date=2024-01-03&time=21:22
Wed Jan  3 21:22:44 2024

HTTP/1.1 200 OK

[]


Wed Jan  3 21:22:48 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/3
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:22:48 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 21:22:48 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:48 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:22:48 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:48 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:22:48 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:48 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:23:49 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:23:49 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001" class="home-link">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span class="tickets-info">Flight</span>
                <span class="tickets-info">From</span>
                <span class="tickets-info">To</span>
                <span class="tickets-info">Date</span>
                <spa class="tickets-info"n>Time</span>
                <span class="tickets-info">Airline</span>
                <span class="tickets-info">Ticket</span>
                <span class="tickets-info">Seat</span>
                <span class="tickets-info">Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:23:49 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:23:49 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

.ticket-info{
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:23:49 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:23:49 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

.ticket-info{
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:23:49 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:23:49 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "2", "seat": "2", "price": "101.25"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "3", "seat": "3", "price": "200.99"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 21:23:51 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:23:51 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001" class="home-link">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span class="tickets-info">Flight</span>
                <span class="tickets-info">From</span>
                <span class="tickets-info">To</span>
                <span class="tickets-info">Date</span>
                <spa class="tickets-info"n>Time</span>
                <span class="tickets-info">Airline</span>
                <span class="tickets-info">Ticket</span>
                <span class="tickets-info">Seat</span>
                <span class="tickets-info">Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:23:51 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:23:51 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

.ticket-info{
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:23:51 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:23:51 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

.ticket-info{
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:23:51 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:23:51 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "2", "seat": "2", "price": "101.25"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "3", "seat": "3", "price": "200.99"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 21:23:53 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:23:53 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001" class="home-link">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span class="tickets-info">Flight</span>
                <span class="tickets-info">From</span>
                <span class="tickets-info">To</span>
                <span class="tickets-info">Date</span>
                <spa class="tickets-info"n>Time</span>
                <span class="tickets-info">Airline</span>
                <span class="tickets-info">Ticket</span>
                <span class="tickets-info">Seat</span>
                <span class="tickets-info">Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:23:53 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:23:53 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

.ticket-info{
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:23:53 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:23:53 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

.ticket-info{
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:23:53 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:23:53 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "2", "seat": "2", "price": "101.25"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "3", "seat": "3", "price": "200.99"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 21:24:06 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:24:06 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001" class="home-link">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span class="tickets-info">Flight</span>
                <span class="tickets-info">From</span>
                <span class="tickets-info">To</span>
                <span class="tickets-info">Date</span>
                <spa class="tickets-info"n>Time</span>
                <span class="tickets-info">Airline</span>
                <span class="tickets-info">Ticket</span>
                <span class="tickets-info">Seat</span>
                <span class="tickets-info">Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:24:06 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:24:06 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

.ticket-info{
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:24:06 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:24:06 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

.ticket-info{
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:24:06 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:24:06 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "2", "seat": "2", "price": "101.25"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "3", "seat": "3", "price": "200.99"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 21:25:35 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:25:35 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001" class="home-link">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span class="tickets-info">Flight</span>
                <span class="tickets-info">From</span>
                <span class="tickets-info">To</span>
                <span class="tickets-info">Date</span>
                <spa class="tickets-info"n>Time</span>
                <span class="tickets-info">Airline</span>
                <span class="tickets-info">Ticket</span>
                <span class="tickets-info">Seat</span>
                <span class="tickets-info">Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:25:35 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:25:35 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

.ticket-info{
    font-size: 30px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:25:35 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:25:35 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

.ticket-info{
    font-size: 30px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:25:35 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:25:35 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "2", "seat": "2", "price": "101.25"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "3", "seat": "3", "price": "200.99"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 21:25:55 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:25:55 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001" class="home-link">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span class="tickets-info">Flight</span>
                <span class="tickets-info">From</span>
                <span class="tickets-info">To</span>
                <span class="tickets-info">Date</span>
                <spa class="tickets-info"n>Time</span>
                <span class="tickets-info">Airline</span>
                <span class="tickets-info">Ticket</span>
                <span class="tickets-info">Seat</span>
                <span class="tickets-info">Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:25:55 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:25:55 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

.tickets-info{
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:25:55 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:25:55 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

.tickets-info{
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:25:55 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:25:55 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "2", "seat": "2", "price": "101.25"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "3", "seat": "3", "price": "200.99"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 21:26:33 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:26:33 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001" class="home-link">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span class="tickets-info">Flight</span>
                <span class="tickets-info">From</span>
                <span class="tickets-info">To</span>
                <span class="tickets-info">Date</span>
                <spa class="tickets-info"n>Time</span>
                <span class="tickets-info">Airline</span>
                <span class="tickets-info">Ticket</span>
                <span class="tickets-info">Seat</span>
                <span class="tickets-info">Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:26:33 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:26:33 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

.tickets-info {
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:26:33 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:26:33 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

.tickets-info {
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:26:33 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:26:33 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "2", "seat": "2", "price": "101.25"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "3", "seat": "3", "price": "200.99"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 21:26:34 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:26:34 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001" class="home-link">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span class="tickets-info">Flight</span>
                <span class="tickets-info">From</span>
                <span class="tickets-info">To</span>
                <span class="tickets-info">Date</span>
                <spa class="tickets-info"n>Time</span>
                <span class="tickets-info">Airline</span>
                <span class="tickets-info">Ticket</span>
                <span class="tickets-info">Seat</span>
                <span class="tickets-info">Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:26:34 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:26:34 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

.tickets-info {
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:26:34 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:26:34 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}

.tickets-info {
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:26:34 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:26:34 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "2", "seat": "2", "price": "101.25"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "3", "seat": "3", "price": "200.99"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 21:29:06 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:29:06 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001" class="home-link">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input class="search" type="text" name="from" id="from" placeholder="From">
                <input class="search"  type="text" name="to" id="to" placeholder="To">
                <input class="search"  type="airline" name="airline" id="airline" placeholder="Airline">
                <input class="search"  type="datetime-local" name="datetime" id="datetime">
                <button class="search"  type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span >Date</span>
                <span>Time</span>
                <span >Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:29:06 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:29:06 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}
.search {
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:29:06 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:29:06 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}
.search {
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:29:06 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:29:06 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "2", "seat": "2", "price": "101.25"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "3", "seat": "3", "price": "200.99"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 21:30:33 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:30:33 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001" class="home-link">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input class="search" type="text" name="from" id="from" placeholder="From">
                <input class="search"  type="text" name="to" id="to" placeholder="To">
                <input class="search"  type="airline" name="airline" id="airline" placeholder="Airline">
                <input class="search"  type="datetime-local" name="datetime" id="datetime">
                <button class="search"  type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
                <span class="table-header">Ticket</span>
                <span class="table-header">Seat</span>
                <span class="table-header">Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:30:33 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:30:33 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}
.table-header {
    font-weight: bold;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}
.search {
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:30:33 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:30:33 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}
.table-header {
    font-weight: bold;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}
.search {
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:30:33 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:30:33 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "2", "seat": "2", "price": "101.25"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "3", "seat": "3", "price": "200.99"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 21:34:15 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:34:15 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001" class="home-link">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input class="search" type="text" name="from" id="from" placeholder="From">
                <input class="search"  type="text" name="to" id="to" placeholder="To">
                <input class="search"  type="airline" name="airline" id="airline" placeholder="Airline">
                <input class="search"  type="datetime-local" name="datetime" id="datetime">
                <button class="search"  type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
                <span class="table-header">Ticket</span>
                <span class="table-header">Seat</span>
                <span class="table-header">Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:34:15 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:34:15 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}
.table-header {
    font-weight: bold;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}
.search {
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}


Wed Jan  3 21:34:15 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:34:15 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}
.table-header {
    font-weight: bold;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}
.search {
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}


Wed Jan  3 21:34:15 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:34:15 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "2", "seat": "2", "price": "101.25"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "3", "seat": "3", "price": "200.99"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 21:34:32 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:34:32 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link href="../static/nostification.css" rel="stylesheet"/>
    <h1>NOSTIFICATION</h1>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        const notificationsElement = document.getElementById("notifications");
        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

    </script>
</html>


Wed Jan  3 21:34:32 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:34:32 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


Wed Jan  3 21:34:32 2024

GET /static/nostification.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:34:32 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}

.nav {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


Wed Jan  3 21:34:32 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:34:32 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 1.\nSafe travels!\n\nYour boarding pass number: 1", "date": "2024-05-19", "time": "19:20"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for VietJet Air, Flight #3, departing on 2024-06-21 at 07:10, from Hanoi to Da Nang has been secured. Your seat: 4.\nSafe travels!\n\nYour boarding pass number: 4", "date": "2023-12-26", "time": "23:51"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #1, departing on 2024-05-19 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 2.\nSafe travels!\n\nYour boarding pass number: 2", "date": "2024-01-03", "time": "21:22"}, {"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Vietnam Airlines, Flight #2, departing on 2024-05-20 at 19:20, from Hanoi to Ho Chi Minh City has been secured. Your seat: 3.\nSafe travels!\n\nYour boarding pass number: 3", "date": "2024-01-03", "time": "21:22"}]


Wed Jan  3 21:34:33 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:34:33 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001" class="home-link">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input class="search" type="text" name="from" id="from" placeholder="From">
                <input class="search"  type="text" name="to" id="to" placeholder="To">
                <input class="search"  type="airline" name="airline" id="airline" placeholder="Airline">
                <input class="search"  type="datetime-local" name="datetime" id="datetime">
                <button class="search"  type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
                <span class="table-header">Ticket</span>
                <span class="table-header">Seat</span>
                <span class="table-header">Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:34:33 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:34:33 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}
.table-header {
    font-weight: bold;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}
.search {
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}


Wed Jan  3 21:34:33 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:34:33 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}
.table-header {
    font-weight: bold;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}
.search {
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}


Wed Jan  3 21:34:33 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:34:33 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "2", "seat": "2", "price": "101.25"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "3", "seat": "3", "price": "200.99"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 21:34:34 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:34:34 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 21:34:34 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:34:34 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:34:34 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:34:34 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:34:34 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:34:34 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:34:41 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:34:41 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            document.getElementById("flight").innerText = filteredTickets[0].flight_id;
            document.getElementById("from").innerText = filteredTickets[0].from;
            document.getElementById("to").innerText = filteredTickets[0].to;
            document.getElementById("date").innerText = filteredTickets[0].date;
            document.getElementById("time").innerText = filteredTickets[0].time;
            
            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                ul.appendChild(a);
            });
        }

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:34:41 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:34:41 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}


Wed Jan  3 21:34:41 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:34:41 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}


Wed Jan  3 21:34:41 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:34:41 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "22", "seat": "3", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "23", "seat": "4", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "24", "seat": "5", "price": "101.21"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "25", "seat": "6", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "26", "seat": "7", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "27", "seat": "8", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "28", "seat": "9", "price": "101.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "29", "seat": "10", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "30", "seat": "11", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "31", "seat": "12", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "32", "seat": "13", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "33", "seat": "14", "price": "200.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "34", "seat": "15", "price": "200.25"}]


Wed Jan  3 21:34:47 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:34:47 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>

        <a href="http://localhost:8001" class="home-link">home</a><br>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a><br>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a><br>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a><br>

        <div id="tickets-info">
            <div id="tickets-search">
                <input class="search" type="text" name="from" id="from" placeholder="From">
                <input class="search"  type="text" name="to" id="to" placeholder="To">
                <input class="search"  type="airline" name="airline" id="airline" placeholder="Airline">
                <input class="search"  type="datetime-local" name="datetime" id="datetime">
                <button class="search"  type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
                <span class="table-header">Ticket</span>
                <span class="table-header">Seat</span>
                <span class="table-header">Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
    </script>
</html>


Wed Jan  3 21:34:47 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:34:47 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}
.table-header {
    font-weight: bold;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}
.search {
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}


Wed Jan  3 21:34:47 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:34:47 2024

HTTP/1.1 200 OK

h1{
    color: red;
    font-size: 40px;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}

body {
    background-color: rgb(179, 235, 235);
    font-family: sans-serif;
    font-size: 18px;
}
.table-header {
    font-weight: bold;
}

.nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}
.search {
    font-size: 18px;
}

#tickets {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}


Wed Jan  3 21:34:47 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:34:47 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "2", "seat": "2", "price": "101.25"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "3", "seat": "3", "price": "200.99"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "seat": "4", "price": "150.99"}]


Wed Jan  3 21:34:48 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:34:48 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" onclick="exchange()">Exchange</button>
            <button type="button" onclick="print()">Print</button>
        </div>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
            }
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print() {

        }
    </script>
</html>


Wed Jan  3 21:34:48 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:34:48 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25"}]


Wed Jan  3 21:58:30 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Jan  3 21:58:30 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>HELLO <span id="username"></span></h1>

        <a href="http://localhost:8001" class="home-link" >home</a>
        <a href="http://localhost:8001/login" class="auth" >login</a>
        <a href="http://localhost:8001/register" class="auth" >register</a>
        <a href="http://localhost:8001/inventory" class="nav" >inventory</a>
        <a href="http://localhost:8001/notifications" class="nav" >notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav" >logout</a>
    <hr>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" class="search" name="from" id="from" placeholder="From">
                <input type="text" class="search" name="to" id="to" placeholder="To">
                <input type="airline" class="search" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" class="search" name="datetime" id="datetime">
                <button type="button" class="search" onclick="filter()">Filter</button>
                <select class="search" name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span class="table-header">Flight</span>
                <span class="table-header">From</span>
                <span class="table-header">To</span>
                <span class="table-header">Date</span>
                <span class="table-header">Time</span>
                <span class="table-header">Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
    <hr class="bottom-line">
</html>


Wed Jan  3 21:58:31 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:58:31 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:58:31 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:58:31 2024

HTTP/1.1 200 OK

h1 {
    color: red;
    font-size: 40x;
    text-align: center;
    margin-top: 0;
    margin-bottom: 30px;
}
.auth, .nav, .home-link {
    font-size: 20px;
    margin-top: 0;
    margin-top: 10px;
    margin-bottom: 10px;
}


body{
    font-family: sans-serif;
    background-color: rgb(179, 235, 235);
    font-size: 18px;
}

.table-header {
    font-weight: bold;
}

.search{
    font-size: 18px;
}

#flights {
    padding: 0;
    width: 100%;
    border-collapse: collapse;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: grid;
    justify-content: center;
    border: 2px solid black;
    box-sizing: border-box;
}

.bottom-line{
    margin-top: 25px;
}


Wed Jan  3 21:58:31 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:58:31 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:58:31 2024

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:58:31 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


