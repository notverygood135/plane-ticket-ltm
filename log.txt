Mon Jan  1 11:55:19 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 11:55:19 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Mon Jan  1 11:55:19 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:19 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Mon Jan  1 11:55:19 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:19 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Mon Jan  1 11:55:20 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:20 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Mon Jan  1 11:55:20 2024

GET /unread/null HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:20 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Mon Jan  1 11:55:20 2024

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:20 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Mon Jan  1 11:55:22 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Mon Jan  1 11:55:22 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <head>
        
        <title>Bootstrap Example</title>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
        <link rel="stylesheet" href="../static/login.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    </head>
   
    <body>

        <section class="h-100 gradient-form" style="background-color: #eee;">
            <div class="container py-5 h-100">
              <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-xl-10">
                  <div class="card rounded-3 text-black">
                    <div class="row g-0">
                      <div class="col-lg-6">
                        <div class="card-body p-md-5 mx-md-4">
          
                          <div class="text-center">
                            <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/lotus.webp"
                              style="width: 185px;" alt="logo">
                            <h4 class="mt-1 mb-5 pb-1">We are The Lotus Team</h4>
                          </div>
          
                          <div>
                            <p>Please login to your account</p>
          
                            <div class="form-outline mb-4">
                              <input type="text" id="username" class="form-control"
                                placeholder="Username" name="username" >
                              <label class="form-label" for="form2Example11">Username</label>
                            </div>
          
                            <div class="form-outline mb-4">
                              <input type="password" id="password" class="form-control" name="password" placeholder="Password" >
                              <label class="form-label" for="form2Example22">Password</label>
                            </div>
          
                            <div class="text-center pt-1 mb-5 pb-1">
                              <button class="btn btn-primary btn-block fa-lg gradient-custom-2 mb-3" type="button" onclick="submit()">Log
                                in</button>
                              <a class="text-muted" href="#!">Forgot password?</a>
                            </div>
          
                            <div class="d-flex align-items-center justify-content-center pb-4">
                              <p class="mb-0 me-2">Don't have an account?</p>
                              <button type="button" class="btn btn-outline-danger""> <a  href="http://localhost:8001/register">Create new account</a></button>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="col-lg-6 d-flex align-items-center gradient-custom-2">
                        <div class="text-white px-3 py-4 p-md-5 mx-md-4">
                          <h4 class="mb-4">We are more than just a company</h4>
                          <p class="small mb-0">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
                            tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud
                            exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </section>
          <!-- <h1>login</h1>
          <input type="text" name="username" id="username" placeholder="Username">
          <input type="password" name="password" id="password" placeholder="Password">
          <button type="button" onclick="submit()">Submit</button> -->
        <script>
            function submit() {
              console.log("a");
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "multipart/form-data"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    console.log(data);
                    if (data != "") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Mon Jan  1 11:55:22 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:22 2024

HTTP/1.1 200 OK

.gradient-custom-2 {
    /* fallback for old browsers */
    background: #fccb90;
    
    /* Chrome 10-25, Safari 5.1-6 */
    background: -webkit-linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);
    
    /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
    background: linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);
    }
    
    @media (min-width: 768px) {
    .gradient-form {
    height: 100vh !important;
    }
    }
    @media (min-width: 769px) {
    .gradient-custom-2 {
    border-top-right-radius: .3rem;
    border-bottom-right-radius: .3rem;
    }
    }


Mon Jan  1 11:55:29 2024

POST /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Content-Type: multipart/form-data
Content-Length: 29
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

username=admin&password=admin
Mon Jan  1 11:55:29 2024

HTTP/1.1 200 OK

admin


Mon Jan  1 11:55:30 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Mon Jan  1 11:55:30 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Mon Jan  1 11:55:30 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:30 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Mon Jan  1 11:55:30 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:30 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Mon Jan  1 11:55:30 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:30 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Mon Jan  1 11:55:30 2024

GET /unread/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:30 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Mon Jan  1 11:55:32 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Mon Jan  1 11:55:32 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null || username == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Mon Jan  1 11:55:32 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:32 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Mon Jan  1 11:55:32 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:32 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Mon Jan  1 11:55:32 2024

GET /inventory/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:32 2024

HTTP/1.1 200 OK

[]


Mon Jan  1 11:55:32 2024

GET /unread/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:32 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Mon Jan  1 11:55:32 2024

GET /user/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:32 2024

HTTP/1.1 200 OK

[{"username": "admin", "money": "1.0e+15", "type": "1"}]


Mon Jan  1 11:55:37 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Mon Jan  1 11:55:37 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null || username == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Mon Jan  1 11:55:37 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:37 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Mon Jan  1 11:55:37 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:37 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Mon Jan  1 11:55:37 2024

GET /inventory/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:37 2024

HTTP/1.1 200 OK

[]


Mon Jan  1 11:55:37 2024

GET /unread/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:37 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Mon Jan  1 11:55:37 2024

GET /user/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:37 2024

HTTP/1.1 200 OK

[{"username": "admin", "money": "1.0e+15", "type": "1"}]


Mon Jan  1 11:55:44 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Mon Jan  1 11:55:44 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Mon Jan  1 11:55:45 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:45 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Mon Jan  1 11:55:45 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:45 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Mon Jan  1 11:55:45 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:45 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Mon Jan  1 11:55:45 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:45 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Mon Jan  1 11:55:45 2024

GET /unread/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:45 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Mon Jan  1 11:55:47 2024

GET /buy/33 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Mon Jan  1 11:55:47 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info">
            <div class="ticket-info-column">Flight: <span id="flight"></span></div>
            <div class="ticket-info-column">From: <span id="from"></span></div>
            <div class="ticket-info-column">To: <span id="to"></span></div>
            <div class="ticket-info-column">Date: <span id="date"></span></div>
            <div class="ticket-info-column">Time: <span id="time"></span></div>
            <div class="ticket-info-column">Price: <span id="price"></span></div>
        </div>
        <div id="user-form">
            <label for="number">Credit Card</label>            
            <input type="text" name="number" id="number">

            <label for="number">Expiration Date</label>    
            <input type="date" name="expiration-date" id="expiration-date">

            <label for="security-code">Security Code</label>    
            <input type="text" name="security-code" id="security-code">

            <label for="full-name">Card Holder Name</label>
            <input type="text" name="full-name" id="full-name">
            <button type="button" onclick="submit()">Submit</button>
        </div>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        function submit() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    </script>
</html>


Mon Jan  1 11:55:47 2024

GET /ticket/33 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/33
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 11:55:47 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}]


Mon Jan  1 12:05:21 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Mon Jan  1 12:05:21 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Mon Jan  1 12:05:22 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:05:22 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Mon Jan  1 12:05:22 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:05:22 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Mon Jan  1 12:05:22 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:05:22 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Mon Jan  1 12:05:22 2024

GET /unread/null HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:05:22 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Mon Jan  1 12:05:24 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Mon Jan  1 12:05:24 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <head>
        
        <title>Bootstrap Example</title>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
        <link rel="stylesheet" href="../static/login.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    </head>
   
    <body>

        <section class="h-100 gradient-form" style="background-color: #eee;">
            <div class="container py-5 h-100">
              <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-xl-10">
                  <div class="card rounded-3 text-black">
                    <div class="row g-0">
                      <div class="col-lg-6">
                        <div class="card-body p-md-5 mx-md-4">
          
                          <div class="text-center">
                            <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/lotus.webp"
                              style="width: 185px;" alt="logo">
                            <h4 class="mt-1 mb-5 pb-1">We are The Lotus Team</h4>
                          </div>
          
                          <div>
                            <p>Please login to your account</p>
          
                            <div class="form-outline mb-4">
                              <input type="text" id="username" class="form-control"
                                placeholder="Username" name="username" >
                              <label class="form-label" for="form2Example11">Username</label>
                            </div>
          
                            <div class="form-outline mb-4">
                              <input type="password" id="password" class="form-control" name="password" placeholder="Password" >
                              <label class="form-label" for="form2Example22">Password</label>
                            </div>
          
                            <div class="text-center pt-1 mb-5 pb-1">
                              <button class="btn btn-primary btn-block fa-lg gradient-custom-2 mb-3" type="button" onclick="submit()">Log
                                in</button>
                              <a class="text-muted" href="#!">Forgot password?</a>
                            </div>
          
                            <div class="d-flex align-items-center justify-content-center pb-4">
                              <p class="mb-0 me-2">Don't have an account?</p>
                              <button type="button" class="btn btn-outline-danger""> <a  href="http://localhost:8001/register">Create new account</a></button>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="col-lg-6 d-flex align-items-center gradient-custom-2">
                        <div class="text-white px-3 py-4 p-md-5 mx-md-4">
                          <h4 class="mb-4">We are more than just a company</h4>
                          <p class="small mb-0">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
                            tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud
                            exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </section>
          <!-- <h1>login</h1>
          <input type="text" name="username" id="username" placeholder="Username">
          <input type="password" name="password" id="password" placeholder="Password">
          <button type="button" onclick="submit()">Submit</button> -->
        <script>
            function submit() {
              console.log("a");
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "multipart/form-data"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    console.log(data);
                    if (data != "") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Mon Jan  1 12:05:25 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:05:25 2024

HTTP/1.1 200 OK

.gradient-custom-2 {
    /* fallback for old browsers */
    background: #fccb90;
    
    /* Chrome 10-25, Safari 5.1-6 */
    background: -webkit-linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);
    
    /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
    background: linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);
    }
    
    @media (min-width: 768px) {
    .gradient-form {
    height: 100vh !important;
    }
    }
    @media (min-width: 769px) {
    .gradient-custom-2 {
    border-top-right-radius: .3rem;
    border-bottom-right-radius: .3rem;
    }
    }


Mon Jan  1 12:05:30 2024

POST /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Content-Type: multipart/form-data
Content-Length: 25
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

username=abc&password=123
Mon Jan  1 12:05:30 2024

HTTP/1.1 200 OK

abc


Mon Jan  1 12:05:30 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Mon Jan  1 12:05:30 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Mon Jan  1 12:05:30 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:05:30 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Mon Jan  1 12:05:30 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:05:30 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Mon Jan  1 12:05:30 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:05:30 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Mon Jan  1 12:05:30 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:05:30 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Mon Jan  1 12:05:32 2024

GET /flight/4 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Mon Jan  1 12:05:32 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Mon Jan  1 12:05:32 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/4
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:05:32 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Mon Jan  1 12:05:32 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/4
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:05:32 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Mon Jan  1 12:05:32 2024

GET /flights/4 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/4
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:05:32 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}]


Mon Jan  1 12:05:32 2024

GET /tickets/4 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/4
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:05:32 2024

HTTP/1.1 200 OK

[{"ticket_id": "5", "flight_id": "4", "seat": "5", "price": "100.99", "owned": "0"}, {"ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "0"}]


Mon Jan  1 12:05:32 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/4
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:05:32 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Mon Jan  1 12:05:34 2024

GET /buy/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/4
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Mon Jan  1 12:05:34 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info">
            <div class="ticket-info-column">Flight: <span id="flight"></span></div>
            <div class="ticket-info-column">From: <span id="from"></span></div>
            <div class="ticket-info-column">To: <span id="to"></span></div>
            <div class="ticket-info-column">Date: <span id="date"></span></div>
            <div class="ticket-info-column">Time: <span id="time"></span></div>
            <div class="ticket-info-column">Price: <span id="price"></span></div>
        </div>
        <div id="user-form">
            <label for="number">Credit Card</label>            
            <input type="text" name="number" id="number">

            <label for="number">Expiration Date</label>    
            <input type="date" name="expiration-date" id="expiration-date">

            <label for="security-code">Security Code</label>    
            <input type="text" name="security-code" id="security-code">

            <label for="full-name">Card Holder Name</label>
            <input type="text" name="full-name" id="full-name">
            <button type="button" onclick="submit()">Submit</button>
        </div>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        function submit() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    </script>
</html>


Mon Jan  1 12:05:34 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:05:34 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "0"}]


Mon Jan  1 12:05:43 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/6
Content-Type: text/html
Content-Length: 103
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

username=abc&ticket_id=6&full_name=aaaa&number=asadasdsa&security_code=aaaaa&expiration_date=2024-01-02
Mon Jan  1 12:05:43 2024

HTTP/1.1 200 OK

OK


Mon Jan  1 12:05:43 2024

POST /notification HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/6
Content-Type: text/html
Content-Length: 289
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

username=abc&content=Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Bamboo Airways, Flight #4, departing on 2024-06-22 at 08:30, from Hai Phong to Da Nang has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 6&date=2024-01-01&time=12:05
Mon Jan  1 12:05:43 2024

HTTP/1.1 200 OK

[]


Mon Jan  1 12:05:46 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/6
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Mon Jan  1 12:05:46 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div onclick="clearNotifications()">clear</div>
        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        function logout() {
            localStorage.clear();
        }

        const notificationsElement = document.getElementById("notifications");

        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

        fetch(`/read/${username}`, {
            method: "PUT"
        })

        function clearNotifications() {
            fetch(`/notification/${username}`, {
                method: "DELETE",
            })
            .then(response => {
                return(response.text());
            })
            
            notificationsElement.innerText = "";
        }
    </script>
</html>


Mon Jan  1 12:05:46 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:05:46 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Bamboo Airways, Flight #4, departing on 2024-06-22 at 08:30, from Hai Phong to Da Nang has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 6", "date": "2024-01-01", "time": "12:05"}]


Mon Jan  1 12:05:46 2024

PUT /read/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin
Content-Length: 0


Mon Jan  1 12:05:46 2024

HTTP/1.1 200 OK




Mon Jan  1 12:05:52 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Mon Jan  1 12:05:52 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null || username == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Mon Jan  1 12:05:53 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:05:53 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Mon Jan  1 12:05:53 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:05:53 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Mon Jan  1 12:05:53 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:05:53 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Mon Jan  1 12:05:53 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:05:53 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Mon Jan  1 12:05:53 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:05:53 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "seat": "6", "price": "120.99"}]


Mon Jan  1 12:05:58 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Mon Jan  1 12:05:58 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <a href="http://localhost:8001/" class="nav">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div onclick="clearNotifications()">clear</div>
        <ul id="notifications"></ul>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login"
        }
        function logout() {
            localStorage.clear();
        }

        const notificationsElement = document.getElementById("notifications");

        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

        fetch(`/read/${username}`, {
            method: "PUT"
        })

        function clearNotifications() {
            fetch(`/notification/${username}`, {
                method: "DELETE",
            })
            .then(response => {
                return(response.text());
            })
            
            notificationsElement.innerText = "";
        }
    </script>
</html>


Mon Jan  1 12:05:58 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:05:58 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Bamboo Airways, Flight #4, departing on 2024-06-22 at 08:30, from Hai Phong to Da Nang has been secured. Your seat: 6.\nSafe travels!\n\nYour boarding pass number: 6", "date": "2024-01-01", "time": "12:05"}]


Mon Jan  1 12:05:58 2024

PUT /read/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin
Content-Length: 0


Mon Jan  1 12:05:58 2024

HTTP/1.1 200 OK




Mon Jan  1 12:06:11 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Mon Jan  1 12:06:11 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null || username == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Mon Jan  1 12:06:11 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:06:11 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Mon Jan  1 12:06:11 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:06:11 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Mon Jan  1 12:06:11 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:06:11 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "seat": "6", "price": "120.99"}]


Mon Jan  1 12:06:11 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:06:11 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Mon Jan  1 12:06:11 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:06:11 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Mon Jan  1 12:06:14 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Mon Jan  1 12:06:14 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" onclick="exchange()">Exchange</button>
            <button type="button" onclick="print()">Exchange</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    
    </script>
    
</html>


Mon Jan  1 12:06:14 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:06:14 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Mon Jan  1 12:14:18 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Mon Jan  1 12:14:18 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    
    </script>
    
</html>


Mon Jan  1 12:14:18 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:14:18 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Mon Jan  1 12:16:20 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:16:20 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null || username == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Mon Jan  1 12:16:21 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:16:21 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Mon Jan  1 12:16:21 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:16:21 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Mon Jan  1 12:16:21 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:16:21 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "seat": "6", "price": "120.99"}]


Mon Jan  1 12:16:21 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:16:21 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Mon Jan  1 12:16:21 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:16:21 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Mon Jan  1 12:18:24 2024

GET /buy/ HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:18:24 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info">
            <div class="ticket-info-column">Flight: <span id="flight"></span></div>
            <div class="ticket-info-column">From: <span id="from"></span></div>
            <div class="ticket-info-column">To: <span id="to"></span></div>
            <div class="ticket-info-column">Date: <span id="date"></span></div>
            <div class="ticket-info-column">Time: <span id="time"></span></div>
            <div class="ticket-info-column">Price: <span id="price"></span></div>
        </div>
        <div id="user-form">
            <label for="number">Credit Card</label>            
            <input type="text" name="number" id="number">

            <label for="number">Expiration Date</label>    
            <input type="date" name="expiration-date" id="expiration-date">

            <label for="security-code">Security Code</label>    
            <input type="text" name="security-code" id="security-code">

            <label for="full-name">Card Holder Name</label>
            <input type="text" name="full-name" id="full-name">
            <button type="button" onclick="submit()">Submit</button>
        </div>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        function submit() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    </script>
</html>


Mon Jan  1 12:18:24 2024

GET /ticket/ HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:18:24 2024

HTTP/1.1 200 OK

[]


Mon Jan  1 12:18:33 2024

GET /index HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:18:33 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Mon Jan  1 12:20:53 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:20:53 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Mon Jan  1 12:20:54 2024

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:20:54 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Mon Jan  1 12:20:58 2024

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/buy/
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:20:58 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Mon Jan  1 12:21:01 2024

PUT /read/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin
Content-Length: 0


Mon Jan  1 12:21:01 2024

HTTP/1.1 200 OK




Mon Jan  1 12:32:39 2024

GET /exchang HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:32:39 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Mon Jan  1 12:32:39 2024

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchang
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:32:39 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Mon Jan  1 12:32:41 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:32:41 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Mon Jan  1 12:37:28 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:37:28 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Mon Jan  1 12:37:30 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:37:30 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Mon Jan  1 12:37:30 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:37:30 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Mon Jan  1 12:37:30 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:37:30 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Mon Jan  1 12:38:34 2024

GET /info HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:38:34 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    
    </script>
    
</html>


Mon Jan  1 12:38:35 2024

GET /ticket/undefined HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:38:35 2024

HTTP/1.1 200 OK

[]


Mon Jan  1 12:39:25 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:39:25 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <head>
        
        <title>Bootstrap Example</title>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
        <link rel="stylesheet" href="../static/login.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    </head>
   
    <body>

        <section class="h-100 gradient-form" style="background-color: #eee;">
            <div class="container py-5 h-100">
              <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-xl-10">
                  <div class="card rounded-3 text-black">
                    <div class="row g-0">
                      <div class="col-lg-6">
                        <div class="card-body p-md-5 mx-md-4">
          
                          <div class="text-center">
                            <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/lotus.webp"
                              style="width: 185px;" alt="logo">
                            <h4 class="mt-1 mb-5 pb-1">We are The Lotus Team</h4>
                          </div>
          
                          <div>
                            <p>Please login to your account</p>
          
                            <div class="form-outline mb-4">
                              <input type="text" id="username" class="form-control"
                                placeholder="Username" name="username" >
                              <label class="form-label" for="form2Example11">Username</label>
                            </div>
          
                            <div class="form-outline mb-4">
                              <input type="password" id="password" class="form-control" name="password" placeholder="Password" >
                              <label class="form-label" for="form2Example22">Password</label>
                            </div>
          
                            <div class="text-center pt-1 mb-5 pb-1">
                              <button class="btn btn-primary btn-block fa-lg gradient-custom-2 mb-3" type="button" onclick="submit()">Log
                                in</button>
                              <a class="text-muted" href="#!">Forgot password?</a>
                            </div>
          
                            <div class="d-flex align-items-center justify-content-center pb-4">
                              <p class="mb-0 me-2">Don't have an account?</p>
                              <button type="button" class="btn btn-outline-danger""> <a  href="http://localhost:8001/register">Create new account</a></button>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="col-lg-6 d-flex align-items-center gradient-custom-2">
                        <div class="text-white px-3 py-4 p-md-5 mx-md-4">
                          <h4 class="mb-4">We are more than just a company</h4>
                          <p class="small mb-0">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
                            tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud
                            exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </section>
          <!-- <h1>login</h1>
          <input type="text" name="username" id="username" placeholder="Username">
          <input type="password" name="password" id="password" placeholder="Password">
          <button type="button" onclick="submit()">Submit</button> -->
        <script>
            function submit() {
              console.log("a");
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "multipart/form-data"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    console.log(data);
                    if (data != "") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Mon Jan  1 12:39:25 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:39:25 2024

HTTP/1.1 200 OK

.gradient-custom-2 {
    /* fallback for old browsers */
    background: #fccb90;
    
    /* Chrome 10-25, Safari 5.1-6 */
    background: -webkit-linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);
    
    /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
    background: linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);
    }
    
    @media (min-width: 768px) {
    .gradient-form {
    height: 100vh !important;
    }
    }
    @media (min-width: 769px) {
    .gradient-custom-2 {
    border-top-right-radius: .3rem;
    border-bottom-right-radius: .3rem;
    }
    }


Mon Jan  1 12:39:25 2024

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:39:25 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Mon Jan  1 12:41:17 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:41:17 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Mon Jan  1 12:41:55 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:41:55 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Mon Jan  1 12:41:56 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:41:56 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Mon Jan  1 12:41:56 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:41:56 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Mon Jan  1 12:42:29 2024

GET /buy/ HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:42:29 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info">
            <div class="ticket-info-column">Flight: <span id="flight"></span></div>
            <div class="ticket-info-column">From: <span id="from"></span></div>
            <div class="ticket-info-column">To: <span id="to"></span></div>
            <div class="ticket-info-column">Date: <span id="date"></span></div>
            <div class="ticket-info-column">Time: <span id="time"></span></div>
            <div class="ticket-info-column">Price: <span id="price"></span></div>
        </div>
        <div id="user-form">
            <label for="number">Credit Card</label>            
            <input type="text" name="number" id="number">

            <label for="number">Expiration Date</label>    
            <input type="date" name="expiration-date" id="expiration-date">

            <label for="security-code">Security Code</label>    
            <input type="text" name="security-code" id="security-code">

            <label for="full-name">Card Holder Name</label>
            <input type="text" name="full-name" id="full-name">
            <button type="button" onclick="submit()">Submit</button>
        </div>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        function submit() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    </script>
</html>


Mon Jan  1 12:42:29 2024

GET /ticket/ HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:42:29 2024

HTTP/1.1 200 OK

[]


Mon Jan  1 12:42:33 2024

GET /buy HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:42:33 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info">
            <div class="ticket-info-column">Flight: <span id="flight"></span></div>
            <div class="ticket-info-column">From: <span id="from"></span></div>
            <div class="ticket-info-column">To: <span id="to"></span></div>
            <div class="ticket-info-column">Date: <span id="date"></span></div>
            <div class="ticket-info-column">Time: <span id="time"></span></div>
            <div class="ticket-info-column">Price: <span id="price"></span></div>
        </div>
        <div id="user-form">
            <label for="number">Credit Card</label>            
            <input type="text" name="number" id="number">

            <label for="number">Expiration Date</label>    
            <input type="date" name="expiration-date" id="expiration-date">

            <label for="security-code">Security Code</label>    
            <input type="text" name="security-code" id="security-code">

            <label for="full-name">Card Holder Name</label>
            <input type="text" name="full-name" id="full-name">
            <button type="button" onclick="submit()">Submit</button>
        </div>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        function submit() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    </script>
</html>


Mon Jan  1 12:42:33 2024

GET /ticket/undefined HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:42:33 2024

HTTP/1.1 200 OK

[]


Mon Jan  1 12:43:34 2024

GET /buy HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:43:34 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info">
            <div class="ticket-info-column">Flight: <span id="flight"></span></div>
            <div class="ticket-info-column">From: <span id="from"></span></div>
            <div class="ticket-info-column">To: <span id="to"></span></div>
            <div class="ticket-info-column">Date: <span id="date"></span></div>
            <div class="ticket-info-column">Time: <span id="time"></span></div>
            <div class="ticket-info-column">Price: <span id="price"></span></div>
        </div>
        <div id="user-form">
            <label for="number">Credit Card</label>            
            <input type="text" name="number" id="number">

            <label for="number">Expiration Date</label>    
            <input type="date" name="expiration-date" id="expiration-date">

            <label for="security-code">Security Code</label>    
            <input type="text" name="security-code" id="security-code">

            <label for="full-name">Card Holder Name</label>
            <input type="text" name="full-name" id="full-name">
            <button type="button" onclick="submit()">Submit</button>
        </div>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        function submit() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    </script>
</html>


Mon Jan  1 12:43:34 2024

GET /ticket/undefined HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:43:34 2024

HTTP/1.1 200 OK

[]


Mon Jan  1 12:43:35 2024

GET /buy HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:43:35 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info">
            <div class="ticket-info-column">Flight: <span id="flight"></span></div>
            <div class="ticket-info-column">From: <span id="from"></span></div>
            <div class="ticket-info-column">To: <span id="to"></span></div>
            <div class="ticket-info-column">Date: <span id="date"></span></div>
            <div class="ticket-info-column">Time: <span id="time"></span></div>
            <div class="ticket-info-column">Price: <span id="price"></span></div>
        </div>
        <div id="user-form">
            <label for="number">Credit Card</label>            
            <input type="text" name="number" id="number">

            <label for="number">Expiration Date</label>    
            <input type="date" name="expiration-date" id="expiration-date">

            <label for="security-code">Security Code</label>    
            <input type="text" name="security-code" id="security-code">

            <label for="full-name">Card Holder Name</label>
            <input type="text" name="full-name" id="full-name">
            <button type="button" onclick="submit()">Submit</button>
        </div>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        function submit() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    </script>
</html>


Mon Jan  1 12:43:35 2024

GET /ticket/undefined HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:43:35 2024

HTTP/1.1 200 OK

[]


Mon Jan  1 12:43:35 2024

GET /buy HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:43:35 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info">
            <div class="ticket-info-column">Flight: <span id="flight"></span></div>
            <div class="ticket-info-column">From: <span id="from"></span></div>
            <div class="ticket-info-column">To: <span id="to"></span></div>
            <div class="ticket-info-column">Date: <span id="date"></span></div>
            <div class="ticket-info-column">Time: <span id="time"></span></div>
            <div class="ticket-info-column">Price: <span id="price"></span></div>
        </div>
        <div id="user-form">
            <label for="number">Credit Card</label>            
            <input type="text" name="number" id="number">

            <label for="number">Expiration Date</label>    
            <input type="date" name="expiration-date" id="expiration-date">

            <label for="security-code">Security Code</label>    
            <input type="text" name="security-code" id="security-code">

            <label for="full-name">Card Holder Name</label>
            <input type="text" name="full-name" id="full-name">
            <button type="button" onclick="submit()">Submit</button>
        </div>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        function submit() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    </script>
</html>


Mon Jan  1 12:43:41 2024

GET /buy HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:43:41 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info">
            <div class="ticket-info-column">Flight: <span id="flight"></span></div>
            <div class="ticket-info-column">From: <span id="from"></span></div>
            <div class="ticket-info-column">To: <span id="to"></span></div>
            <div class="ticket-info-column">Date: <span id="date"></span></div>
            <div class="ticket-info-column">Time: <span id="time"></span></div>
            <div class="ticket-info-column">Price: <span id="price"></span></div>
        </div>
        <div id="user-form">
            <label for="number">Credit Card</label>            
            <input type="text" name="number" id="number">

            <label for="number">Expiration Date</label>    
            <input type="date" name="expiration-date" id="expiration-date">

            <label for="security-code">Security Code</label>    
            <input type="text" name="security-code" id="security-code">

            <label for="full-name">Card Holder Name</label>
            <input type="text" name="full-name" id="full-name">
            <button type="button" onclick="submit()">Submit</button>
        </div>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        function submit() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    </script>
</html>


Mon Jan  1 12:43:41 2024

GET /ticket/undefined HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:43:41 2024

HTTP/1.1 200 OK

[]


Mon Jan  1 12:43:41 2024

GET /buy HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:43:41 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info">
            <div class="ticket-info-column">Flight: <span id="flight"></span></div>
            <div class="ticket-info-column">From: <span id="from"></span></div>
            <div class="ticket-info-column">To: <span id="to"></span></div>
            <div class="ticket-info-column">Date: <span id="date"></span></div>
            <div class="ticket-info-column">Time: <span id="time"></span></div>
            <div class="ticket-info-column">Price: <span id="price"></span></div>
        </div>
        <div id="user-form">
            <label for="number">Credit Card</label>            
            <input type="text" name="number" id="number">

            <label for="number">Expiration Date</label>    
            <input type="date" name="expiration-date" id="expiration-date">

            <label for="security-code">Security Code</label>    
            <input type="text" name="security-code" id="security-code">

            <label for="full-name">Card Holder Name</label>
            <input type="text" name="full-name" id="full-name">
            <button type="button" onclick="submit()">Submit</button>
        </div>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        function submit() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    </script>
</html>


Mon Jan  1 12:43:41 2024

GET /buy HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:43:41 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info">
            <div class="ticket-info-column">Flight: <span id="flight"></span></div>
            <div class="ticket-info-column">From: <span id="from"></span></div>
            <div class="ticket-info-column">To: <span id="to"></span></div>
            <div class="ticket-info-column">Date: <span id="date"></span></div>
            <div class="ticket-info-column">Time: <span id="time"></span></div>
            <div class="ticket-info-column">Price: <span id="price"></span></div>
        </div>
        <div id="user-form">
            <label for="number">Credit Card</label>            
            <input type="text" name="number" id="number">

            <label for="number">Expiration Date</label>    
            <input type="date" name="expiration-date" id="expiration-date">

            <label for="security-code">Security Code</label>    
            <input type="text" name="security-code" id="security-code">

            <label for="full-name">Card Holder Name</label>
            <input type="text" name="full-name" id="full-name">
            <button type="button" onclick="submit()">Submit</button>
        </div>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        function submit() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    </script>
</html>


Mon Jan  1 12:43:41 2024

GET /ticket/undefined HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:43:41 2024

HTTP/1.1 200 OK

[]


Mon Jan  1 12:43:46 2024

GET /buy/ HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:43:46 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info">
            <div class="ticket-info-column">Flight: <span id="flight"></span></div>
            <div class="ticket-info-column">From: <span id="from"></span></div>
            <div class="ticket-info-column">To: <span id="to"></span></div>
            <div class="ticket-info-column">Date: <span id="date"></span></div>
            <div class="ticket-info-column">Time: <span id="time"></span></div>
            <div class="ticket-info-column">Price: <span id="price"></span></div>
        </div>
        <div id="user-form">
            <label for="number">Credit Card</label>            
            <input type="text" name="number" id="number">

            <label for="number">Expiration Date</label>    
            <input type="date" name="expiration-date" id="expiration-date">

            <label for="security-code">Security Code</label>    
            <input type="text" name="security-code" id="security-code">

            <label for="full-name">Card Holder Name</label>
            <input type="text" name="full-name" id="full-name">
            <button type="button" onclick="submit()">Submit</button>
        </div>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        function submit() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    </script>
</html>


Mon Jan  1 12:43:46 2024

GET /ticket/ HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 12:43:46 2024

HTTP/1.1 200 OK

[]


Mon Jan  1 12:51:50 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:51:50 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Mon Jan  1 12:52:36 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: cross-site


Mon Jan  1 12:52:36 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Mon Jan  1 12:55:17 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 12:55:17 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1>register</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <input type="password" name="confirm" id="confirm" placeholder="Confirm password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Mon Jan  1 13:03:51 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Mon Jan  1 13:03:51 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Mon Jan  1 13:03:51 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 13:03:51 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Mon Jan  1 13:03:51 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 13:03:51 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Mon Jan  1 13:03:52 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 13:03:52 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Mon Jan  1 13:03:52 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 13:03:52 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Mon Jan  1 13:03:52 2024

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 13:03:52 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Mon Jan  1 13:03:55 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Mon Jan  1 13:03:55 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null || username == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Mon Jan  1 13:03:56 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 13:03:56 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Mon Jan  1 13:03:56 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Mon Jan  1 13:03:56 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Mon Jan  1 13:03:56 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 13:03:56 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Mon Jan  1 13:03:56 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 13:03:56 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "seat": "6", "price": "120.99"}]


Mon Jan  1 13:03:56 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 13:03:56 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Mon Jan  1 13:03:58 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Mon Jan  1 13:03:58 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    
    </script>
    
</html>


Mon Jan  1 13:03:58 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Mon Jan  1 13:03:58 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Mon Jan  1 13:04:00 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/6
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Mon Jan  1 13:04:00 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1>register</h1>
        <input type="text" name="username" id="username" placeholder="Username">
        <input type="password" name="password" id="password" placeholder="Password">
        <input type="password" name="confirm" id="confirm" placeholder="Confirm password">
        <button type="button" onclick="submit()">Submit</button>
        <script>
            function submit() {
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                let confirm = document.getElementById("confirm").value;
                fetch("/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "text/html"
                    },
                    body: `username=${username}&password=${password}&confirm=${confirm}`
                })
                .then(response => {
                    return(response.status);
                })
                .then(status => {
                    if (status == 200) {
                        window.location.replace("http://localhost:8001/login");
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Tue Jan  2 00:11:03 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 00:11:03 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="edit()">Edit</button>
            <button type="button" onclick="cancel()">Cancel</button>
        </div>
       
       
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

       
    
    </script>
    
</html>


Tue Jan  2 00:11:03 2024

GET /ticket/undefined HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 00:11:03 2024

HTTP/1.1 200 OK

[]


Tue Jan  2 00:11:58 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 00:11:58 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="edit()">Edit</button>
            <button type="button" onclick="cancel()">Cancel</button>
        </div>
       
       
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

       
    
    </script>
    
</html>


Tue Jan  2 00:11:58 2024

GET /ticket/undefined HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 00:11:58 2024

HTTP/1.1 200 OK

[]


Tue Jan  2 00:12:21 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 00:12:21 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="edit()">Edit</button>
            <button type="button" onclick="cancel()">Cancel</button>
        </div>
       
       
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
      
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

       
    
    </script>
    
</html>


Tue Jan  2 00:12:22 2024

GET /ticket/undefined HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 00:12:22 2024

HTTP/1.1 200 OK

[]


Tue Jan  2 00:12:22 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 00:12:22 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="edit()">Edit</button>
            <button type="button" onclick="cancel()">Cancel</button>
        </div>
       
       
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
      
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

       
    
    </script>
    
</html>


Tue Jan  2 00:12:23 2024

GET /ticket/undefined HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 00:12:23 2024

HTTP/1.1 200 OK

[]


Tue Jan  2 00:12:31 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 00:12:31 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    
    </script>
    
</html>


Tue Jan  2 00:12:31 2024

GET /ticket/undefined HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 00:12:31 2024

HTTP/1.1 200 OK

[]


Tue Jan  2 00:12:32 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 00:12:32 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    
    </script>
    
</html>


Tue Jan  2 00:12:32 2024

GET /ticket/undefined HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 00:12:32 2024

HTTP/1.1 200 OK

[]


Tue Jan  2 00:12:34 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 00:12:34 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    
    </script>
    
</html>


Tue Jan  2 00:12:34 2024

GET /ticket/undefined HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 00:12:34 2024

HTTP/1.1 200 OK

[]


Tue Jan  2 00:13:05 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 00:13:05 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    
    </script>
    
</html>


Tue Jan  2 00:13:05 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 00:13:05 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 00:13:40 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Tue Jan  2 00:13:40 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`http://localhost:8001/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    
    </script>
    
</html>


Tue Jan  2 00:13:40 2024

GET /ticket/undefined HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 00:13:40 2024

HTTP/1.1 200 OK

[]


Tue Jan  2 00:14:19 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Tue Jan  2 00:14:19 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null || username == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Tue Jan  2 00:14:19 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 00:14:19 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 00:14:19 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 00:14:19 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 00:14:19 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 00:14:19 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "seat": "6", "price": "120.99"}]


Tue Jan  2 00:14:20 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 00:14:20 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Tue Jan  2 00:14:20 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 00:14:20 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Tue Jan  2 00:14:25 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/6
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 00:14:25 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    
    </script>
    
</html>


Tue Jan  2 00:14:25 2024

GET /ticket/undefined HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 00:14:25 2024

HTTP/1.1 200 OK

[]


Tue Jan  2 00:14:30 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 00:14:30 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    
    </script>
    
</html>


Tue Jan  2 00:14:30 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 00:14:30 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 00:14:33 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Tue Jan  2 00:14:33 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    
    </script>
    
</html>


Tue Jan  2 00:14:33 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 00:14:33 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Tue Jan  2 00:14:37 2024

GET /info/4 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Tue Jan  2 00:14:37 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    
    </script>
    
</html>


Tue Jan  2 00:14:37 2024

GET /ticket/4 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/4
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 00:14:37 2024

HTTP/1.1 200 OK

[{"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air", "ticket_id": "4", "flight_id": "3", "seat": "4", "price": "150.99", "owned": "0"}]


Tue Jan  2 00:14:42 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Tue Jan  2 00:14:42 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    
    </script>
    
</html>


Tue Jan  2 00:14:42 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 00:14:42 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 00:18:51 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 00:18:51 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    
    </script>
    
</html>


Tue Jan  2 00:18:51 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 00:18:51 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 17:32:12 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:32:12 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null || username == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Tue Jan  2 17:32:12 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:32:12 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 17:32:12 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:32:12 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 17:32:12 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:32:12 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "seat": "6", "price": "120.99"}]


Tue Jan  2 17:32:12 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:32:12 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Tue Jan  2 17:32:12 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:32:12 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Tue Jan  2 17:32:18 2024

GET /info/ HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Tue Jan  2 17:32:18 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    
    </script>
    
</html>


Tue Jan  2 17:32:19 2024

GET /ticket/ HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:32:19 2024

HTTP/1.1 200 OK

[]


Tue Jan  2 17:32:27 2024

GET /info HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Tue Jan  2 17:32:27 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    
    </script>
    
</html>


Tue Jan  2 17:32:27 2024

GET /ticket/undefined HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:32:27 2024

HTTP/1.1 200 OK

[]


Tue Jan  2 17:32:33 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:32:33 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    
    </script>
    
</html>


Tue Jan  2 17:32:34 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:32:34 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Tue Jan  2 17:32:43 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:32:43 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/exchange/${ticket.ticket_id}`);
                a.innerHTML = "exchange";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    
    </script>
    
</html>


Tue Jan  2 17:35:53 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:35:53 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    //
    let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
    //
    </script>
    
</html>


Tue Jan  2 17:35:55 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:35:55 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    //
    let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
    //
    </script>
    
</html>


Tue Jan  2 17:35:57 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:35:57 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    //
    let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
    //
    </script>
    
</html>


Tue Jan  2 17:35:58 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:35:58 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    //
    let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
    //
    </script>
    
</html>


Tue Jan  2 17:36:02 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:36:02 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    //
    let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
    //
    </script>
    
</html>


Tue Jan  2 17:37:13 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:37:13 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    //
    let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderExchange();
        }

        function renderExchange() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }
    //
    </script>
    
</html>


Tue Jan  2 17:37:13 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:37:13 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 17:37:15 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:37:15 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    //
    let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderExchange();
        }

        function renderExchange() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }
    //
    </script>
    
</html>


Tue Jan  2 17:37:15 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:37:15 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 17:38:31 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:38:31 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    //
    let tickets = [];
        let filteredTickets = [];
        function renderExchange() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }
        renderExchange();
    //
    </script>
    
</html>


Tue Jan  2 17:38:31 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:38:31 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 17:39:22 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:39:22 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    //
    let tickets = [];
        let filteredTickets = [];
        function renderExchange() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/exchange/${ticket.ticket_id}`);
                a.innerHTML = "exchange";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }
        renderExchange();
    //
    </script>
    
</html>


Tue Jan  2 17:39:22 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:39:22 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 17:39:23 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:39:23 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    //
    let tickets = [];
        let filteredTickets = [];
        function renderExchange() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/exchange/${ticket.ticket_id}`);
                a.innerHTML = "exchange";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }
        renderExchange();
    //
    </script>
    
</html>


Tue Jan  2 17:39:24 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:39:24 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 17:46:23 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:46:23 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
            const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/exchange/${url}`);
                a.innerHTML = "exchange";
                document.appendChild(a);  
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:46:23 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:46:23 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 17:46:37 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/6
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:46:37 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/exchange/${ticket.ticket_id}`);
                a.innerHTML = "exchange";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    
    </script>
    
</html>


Tue Jan  2 17:46:56 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:46:56 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
            const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/exchange/${url}`);
                a.innerHTML = "exchange";
                document.appendChild(a);  
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:46:59 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:46:59 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 17:47:28 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:47:28 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
            const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/exchange/${url}`);
                a.innerHTML = "exchange";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:47:29 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:47:29 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 17:47:52 2024

GET /exchange/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Tue Jan  2 17:47:52 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/exchange/${ticket.ticket_id}`);
                a.innerHTML = "exchange";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    
    </script>
    
</html>


Tue Jan  2 17:47:59 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:47:59 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
            const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/exchange/${url}`);
                a.innerHTML = "exchange";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:49:11 2024

GET /exchange HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/6
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:49:11 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/exchange/${ticket.ticket_id}`);
                a.innerHTML = "exchange";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    
    </script>
    
</html>


Tue Jan  2 17:49:19 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:49:19 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange/${id}" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
            const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/exchange/${url}`);
                a.innerHTML = "exchange";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:49:21 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:49:21 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 17:49:24 2024

GET /exchange/$%7Bid%7D HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/6
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:49:24 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/exchange/${ticket.ticket_id}`);
                a.innerHTML = "exchange";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    
    </script>
    
</html>


Tue Jan  2 17:50:59 2024

GET /exchange/$%7Bid%7D HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:50:59 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/exchange/${ticket.ticket_id}`);
                a.innerHTML = "exchange";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    
    </script>
    
</html>


Tue Jan  2 17:51:03 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:51:03 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" id="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                exchange.setAttribute("href", `http://localhost:8001/exchange/${url}`);
                exchange.innerHTML = "hahas";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:51:06 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:51:06 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" id="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                exchange.setAttribute("href", `http://localhost:8001/exchange/${url}`);
                exchange.innerHTML = "hahas";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:51:08 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:51:08 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" id="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                exchange.setAttribute("href", `http://localhost:8001/exchange/${url}`);
                exchange.innerHTML = "hahas";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:51:12 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:51:12 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" id="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                exchange.setAttribute("href", `http://localhost:8001/exchange/${url}`);
                exchange.innerHTML = "hahas";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:52:37 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:52:37 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" id="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                exchange.innerHTML = "hahas";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:52:54 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:52:54 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" id="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:52:57 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:52:57 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" id="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:52:57 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:52:57 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" id="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:53:14 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:53:14 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" id="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:53:24 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:53:24 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" id="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                // exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                // exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:53:26 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:53:26 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" id="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                // exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                // exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:53:48 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:53:48 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" id="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                // exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                // exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:53:54 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:53:54 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" id="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        // const exchange=document.querySelector('#exchange');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                // exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                // exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:53:54 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:53:54 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 17:54:26 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:54:26 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" id="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        // const exchange=document.querySelector('#exchange');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                // exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                // exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:54:28 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:54:28 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 17:54:37 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:54:37 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" id="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                // exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                // exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:54:40 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:54:40 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" id="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                // exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                // exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:55:06 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:55:06 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <div id="exchange"></div>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                // exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                // exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:55:08 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:55:08 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <div id="exchange"></div>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                // exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                // exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:55:11 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:55:11 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <div id="exchange"></div>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                // exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                // exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:55:43 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:55:43 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <div type="button" class="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('.exchange');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                // exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                // exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:55:45 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:55:45 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <div type="button" class="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('.exchange');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                // exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                // exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:55:46 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:55:46 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <div type="button" class="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('.exchange');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                // exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                // exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:56:08 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:56:08 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <div type="button" class="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('.exchange');
        
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                // exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                // exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:56:09 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:56:09 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <div type="button" class="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('.exchange');
        
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                // exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                // exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:56:11 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:56:11 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <div type="button" class="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('.exchange');
        
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                // exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                // exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:56:12 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:56:12 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <div type="button" class="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('.exchange');
        
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                // exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                // exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:56:27 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:56:27 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <div type="button" class="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('.exchange');
        
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                // exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                // exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:56:30 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:56:30 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <div type="button" class="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('.exchange');
        
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                // exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                // exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:56:34 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:56:34 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <div type="button" class="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        // const exchange=document.querySelector('.exchange');

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                // exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                // exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:56:35 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:56:35 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 17:57:30 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:57:30 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <div type="button" class="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('.exchange');

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                // exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                // exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:57:31 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:57:31 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 17:57:33 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:57:33 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <div type="button" class="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('.exchange');

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                // exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                // exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:57:34 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:57:34 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 17:57:46 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:57:46 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <div type="button" class="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('.exchange');

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                 exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
            exchange.innerHTML = "gggggggggggggggggggggggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:57:47 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:57:47 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 17:58:11 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:58:11 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <div type="button" class="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('.exchange');

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                 exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
            exchange.innerHTML = "ggg";
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:58:11 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:58:11 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 17:58:26 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:58:26 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <div type="button" class="exchange"></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('.exchange');

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                 exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:58:28 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:58:28 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 17:59:05 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:59:05 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <div type="button" class="exchange">exchange</button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('.exchange');

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                 exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:59:06 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:59:06 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 17:59:24 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 17:59:24 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" class="exchange">Exchange</button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('.exchange');

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                 exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 17:59:25 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 17:59:25 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 18:00:51 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 18:00:51 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" id="exchange">Exchange</button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');

        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                 
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 18:00:52 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:00:52 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 18:03:18 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 18:03:18 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');


        exchange.a.setAttribute("href", `http://localhost:8001/exchange/${id}`);
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                 
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 18:03:22 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 18:03:22 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');


        exchange.a.setAttribute("href", `http://localhost:8001/exchange/${id}`);
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                 
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 18:03:34 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 18:03:34 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');


        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                 
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 18:03:35 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:03:35 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 18:03:38 2024

GET /exchange/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/6
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 18:03:38 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/exchange/${ticket.ticket_id}`);
                a.innerHTML = "exchange";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        function exchange() {

        }

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    
    </script>
    
</html>


Tue Jan  2 18:08:30 2024

GET /exchange/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/6
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 18:08:30 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 18:08:31 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:08:31 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 18:09:42 2024

GET /exchange/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 18:09:42 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 18:09:43 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:09:43 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 18:09:52 2024

GET /exchange/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 18:09:52 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 18:09:54 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:09:54 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 18:09:57 2024

GET /exchange/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 18:09:57 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 18:09:58 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:09:58 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 18:10:01 2024

GET /exchange/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 18:10:01 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 18:10:01 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:10:01 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 18:10:13 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 18:10:13 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');

        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
        exchange.setAttribute("text-decoration","none");
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                 
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 18:10:13 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:10:13 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 18:10:26 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 18:10:26 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');

        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
        exchange.setAttribute("text-decoration","none");
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                 
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 18:10:28 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:10:28 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 18:11:31 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 18:11:31 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');

        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
        exchange.setAttribute("text-decoration",none);
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                 
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 18:11:49 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 18:11:49 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');

        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
        exchange.setAttribute("text-decoration",'none');
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                 
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 18:11:50 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:11:50 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 18:13:00 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 18:13:00 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');

        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                 
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 18:13:01 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:13:01 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Tue Jan  2 18:52:07 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:52:07 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 18:52:07 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:52:07 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "seat": "6", "price": "120.99"}]


Tue Jan  2 18:52:07 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:52:07 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Tue Jan  2 18:52:07 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:52:07 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Tue Jan  2 18:57:30 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 18:57:30 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');

        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                 
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 18:57:31 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:57:31 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Tue Jan  2 18:57:32 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 18:57:32 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        
    </body>
    <script>
        const username = localStorage.getItem("username");
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 18:57:33 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:57:33 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Tue Jan  2 18:58:36 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 18:58:36 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        // if (username == null || username == "") {
        //     window.location = "http://localhost:8001/login"
        // }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Tue Jan  2 18:58:37 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:58:37 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 18:58:37 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:58:37 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 18:58:37 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:58:37 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "seat": "6", "price": "120.99"}]


Tue Jan  2 18:58:37 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:58:37 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Tue Jan  2 18:58:37 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:58:37 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Tue Jan  2 18:58:47 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 18:58:47 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        // if (username == null || username == "") {
        //     window.location = "http://localhost:8001/login"
        // }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Tue Jan  2 18:58:47 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:58:47 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 18:58:47 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:58:47 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 18:58:47 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:58:47 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "seat": "6", "price": "120.99"}]


Tue Jan  2 18:58:47 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:58:47 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Tue Jan  2 18:58:47 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:58:47 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Tue Jan  2 18:59:02 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 18:59:02 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        // const username = localStorage.getItem("username");
        if (username == null || username == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Tue Jan  2 18:59:02 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:59:02 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 18:59:02 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:59:02 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 18:59:02 2024

GET /inventory/[object%20HTMLSpanElement] HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:59:02 2024

HTTP/1.1 200 OK

[]


Tue Jan  2 18:59:02 2024

GET /unread/[object%20HTMLSpanElement] HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:59:02 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Tue Jan  2 18:59:02 2024

GET /user/[object%20HTMLSpanElement] HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:59:02 2024

HTTP/1.1 200 OK

[]


Tue Jan  2 18:59:03 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 18:59:03 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        // const username = localStorage.getItem("username");
        if (username == null || username == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Tue Jan  2 18:59:04 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:59:04 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 18:59:04 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:59:04 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 18:59:04 2024

GET /inventory/[object%20HTMLSpanElement] HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:59:04 2024

HTTP/1.1 200 OK

[]


Tue Jan  2 18:59:04 2024

GET /unread/[object%20HTMLSpanElement] HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:59:04 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Tue Jan  2 18:59:04 2024

GET /user/[object%20HTMLSpanElement] HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 18:59:04 2024

HTTP/1.1 200 OK

[]


Tue Jan  2 19:00:15 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:00:15 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null || username == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Tue Jan  2 19:00:16 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:00:16 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 19:00:16 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:00:16 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 19:00:16 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:00:16 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "seat": "6", "price": "120.99"}]


Tue Jan  2 19:00:16 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:00:16 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Tue Jan  2 19:00:16 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:00:16 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Tue Jan  2 19:00:19 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:00:19 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        
    </body>
    <script>
        const username = localStorage.getItem("username");
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 19:00:19 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:00:19 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Tue Jan  2 19:00:20 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:00:20 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        
    </body>
    <script>
        const username = localStorage.getItem("username");
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 19:00:21 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:00:21 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        
    </body>
    <script>
        const username = localStorage.getItem("username");
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 19:00:21 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:00:21 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        
    </body>
    <script>
        const username = localStorage.getItem("username");
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 19:00:21 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:00:21 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Tue Jan  2 19:00:49 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:00:49 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null || username == "") {
            window.location = "http://localhost:8001/login"
        }
        // document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Tue Jan  2 19:00:49 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:00:49 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 19:00:49 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:00:49 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 19:00:49 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:00:49 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "seat": "6", "price": "120.99"}]


Tue Jan  2 19:00:49 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:00:49 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Tue Jan  2 19:00:49 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:00:49 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Tue Jan  2 19:01:08 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:01:08 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null || username == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = "haha";
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Tue Jan  2 19:01:08 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:01:08 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 19:01:08 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:01:08 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 19:01:08 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:01:08 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "seat": "6", "price": "120.99"}]


Tue Jan  2 19:01:08 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:01:08 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Tue Jan  2 19:01:08 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:01:08 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Tue Jan  2 19:02:47 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:02:47 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null || username == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Tue Jan  2 19:02:47 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:02:47 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 19:02:47 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:02:47 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 19:02:48 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:02:48 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "seat": "6", "price": "120.99"}]


Tue Jan  2 19:02:48 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:02:48 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Tue Jan  2 19:02:48 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:02:48 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Tue Jan  2 19:02:49 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:02:49 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null || username == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Tue Jan  2 19:02:49 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:02:49 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 19:02:49 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:02:49 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 19:02:49 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:02:49 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "seat": "6", "price": "120.99"}]


Tue Jan  2 19:02:49 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:02:49 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Tue Jan  2 19:02:49 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:02:49 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Tue Jan  2 19:02:53 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:02:53 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        
    </body>
    <script>
        const username = localStorage.getItem("username");
        document.getElementById("username").innerHTML = username;
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 19:02:53 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:02:53 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Tue Jan  2 19:02:55 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:02:55 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        
    </body>
    <script>
        const username = localStorage.getItem("username");
        document.getElementById("username").innerHTML = username;
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 19:02:55 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:02:55 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Tue Jan  2 19:03:59 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:03:59 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 19:03:59 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:03:59 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Tue Jan  2 19:03:59 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:03:59 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Tue Jan  2 19:04:00 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:04:00 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 19:04:00 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:04:00 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Tue Jan  2 19:04:00 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:04:00 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Tue Jan  2 19:04:05 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:04:05 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 19:04:06 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:04:06 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 19:04:45 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:04:45 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 19:04:45 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:04:45 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Tue Jan  2 19:04:45 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:04:45 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Tue Jan  2 19:04:47 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:04:47 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 19:04:47 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:04:47 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 19:04:50 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:04:50 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 19:04:50 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:04:50 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Tue Jan  2 19:04:50 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:04:50 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Tue Jan  2 19:04:59 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:04:59 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Tue Jan  2 19:04:59 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:04:59 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 19:04:59 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:04:59 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 19:05:00 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:05:00 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Tue Jan  2 19:05:00 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:05:00 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Tue Jan  2 19:05:48 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:05:48 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        function logout() {
            localStorage.clear();
        }
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 19:05:48 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:05:48 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Tue Jan  2 19:05:48 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:05:48 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Tue Jan  2 19:05:49 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:05:49 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Tue Jan  2 19:05:50 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:05:50 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 19:05:50 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:05:50 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 19:05:50 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:05:50 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Tue Jan  2 19:05:50 2024

GET /unread/null HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:05:50 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Tue Jan  2 19:05:53 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:05:53 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        function logout() {
            localStorage.clear();
        }
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 19:05:53 2024

GET /user/null HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:05:53 2024

HTTP/1.1 200 OK

[]


Tue Jan  2 19:05:53 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:05:53 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Tue Jan  2 19:05:54 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:05:54 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        function logout() {
            localStorage.clear();
        }
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 19:05:54 2024

GET /user/null HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:05:54 2024

HTTP/1.1 200 OK

[]


Tue Jan  2 19:05:54 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:05:54 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Tue Jan  2 19:05:56 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:05:56 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        function logout() {
            localStorage.clear();
        }
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 19:05:56 2024

GET /user/null HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:05:56 2024

HTTP/1.1 200 OK

[]


Tue Jan  2 19:05:56 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:05:56 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Tue Jan  2 19:05:56 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:05:56 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        function logout() {
            localStorage.clear();
        }
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 19:05:57 2024

GET /user/null HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:05:57 2024

HTTP/1.1 200 OK

[]


Tue Jan  2 19:05:57 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:05:57 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Tue Jan  2 19:06:02 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:06:02 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <head>
        
        <title>Bootstrap Example</title>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
        <link rel="stylesheet" href="../static/login.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    </head>
   
    <body>

        <section class="h-100 gradient-form" style="background-color: #eee;">
            <div class="container py-5 h-100">
              <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-xl-10">
                  <div class="card rounded-3 text-black">
                    <div class="row g-0">
                      <div class="col-lg-6">
                        <div class="card-body p-md-5 mx-md-4">
          
                          <div class="text-center">
                            <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/lotus.webp"
                              style="width: 185px;" alt="logo">
                            <h4 class="mt-1 mb-5 pb-1">We are The Lotus Team</h4>
                          </div>
          
                          <div>
                            <p>Please login to your account</p>
          
                            <div class="form-outline mb-4">
                              <input type="text" id="username" class="form-control"
                                placeholder="Username" name="username" >
                              <label class="form-label" for="form2Example11">Username</label>
                            </div>
          
                            <div class="form-outline mb-4">
                              <input type="password" id="password" class="form-control" name="password" placeholder="Password" >
                              <label class="form-label" for="form2Example22">Password</label>
                            </div>
          
                            <div class="text-center pt-1 mb-5 pb-1">
                              <button class="btn btn-primary btn-block fa-lg gradient-custom-2 mb-3" type="button" onclick="submit()">Log
                                in</button>
                              <a class="text-muted" href="#!">Forgot password?</a>
                            </div>
          
                            <div class="d-flex align-items-center justify-content-center pb-4">
                              <p class="mb-0 me-2">Don't have an account?</p>
                              <button type="button" class="btn btn-outline-danger""> <a  href="http://localhost:8001/register">Create new account</a></button>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="col-lg-6 d-flex align-items-center gradient-custom-2">
                        <div class="text-white px-3 py-4 p-md-5 mx-md-4">
                          <h4 class="mb-4">We are more than just a company</h4>
                          <p class="small mb-0">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
                            tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud
                            exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </section>
          <!-- <h1>login</h1>
          <input type="text" name="username" id="username" placeholder="Username">
          <input type="password" name="password" id="password" placeholder="Password">
          <button type="button" onclick="submit()">Submit</button> -->
        <script>
            function submit() {
              console.log("a");
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "multipart/form-data"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    console.log(data);
                    if (data != "") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Tue Jan  2 19:06:02 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:06:02 2024

HTTP/1.1 200 OK

.gradient-custom-2 {
    /* fallback for old browsers */
    background: #fccb90;
    
    /* Chrome 10-25, Safari 5.1-6 */
    background: -webkit-linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);
    
    /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
    background: linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);
    }
    
    @media (min-width: 768px) {
    .gradient-form {
    height: 100vh !important;
    }
    }
    @media (min-width: 769px) {
    .gradient-custom-2 {
    border-top-right-radius: .3rem;
    border-bottom-right-radius: .3rem;
    }
    }


Tue Jan  2 19:06:08 2024

POST /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Content-Type: multipart/form-data
Content-Length: 25
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

username=abc&password=123
Tue Jan  2 19:06:08 2024

HTTP/1.1 200 OK

abc


Tue Jan  2 19:06:09 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:06:09 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Tue Jan  2 19:06:09 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:06:09 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 19:06:09 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:06:09 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 19:06:10 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:06:10 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Tue Jan  2 19:06:10 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:06:10 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Tue Jan  2 19:06:12 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:06:12 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null || username == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Tue Jan  2 19:06:12 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:06:12 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 19:06:12 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:06:12 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Tue Jan  2 19:06:12 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:06:12 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "seat": "6", "price": "120.99"}]


Tue Jan  2 19:06:12 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:06:12 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Tue Jan  2 19:06:12 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:06:12 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Tue Jan  2 19:06:14 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:06:14 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');

        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                 
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Tue Jan  2 19:06:15 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:06:15 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Tue Jan  2 19:06:16 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Tue Jan  2 19:06:16 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button"><a href="http://localhost:8001/exchange" style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        function logout() {
            localStorage.clear();
        }
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        
    
    </script>
    
</html>


Tue Jan  2 19:06:16 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:06:16 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Tue Jan  2 19:06:16 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Tue Jan  2 19:06:16 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Wed Jan  3 08:12:08 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 08:12:08 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div class="main">
        <div id="ticket-info"></div>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>
  
        </div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        function logout() {
            localStorage.clear();
        }
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        // 
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    
    </script>
    
</html>


Wed Jan  3 08:12:09 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:12:09 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Wed Jan  3 08:12:09 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:12:09 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Wed Jan  3 08:12:09 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:12:09 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 08:12:09 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:12:09 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 08:13:06 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 08:13:06 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div class="main">
        <div id="ticket-info"></div>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>
  
        </div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        function logout() {
            localStorage.clear();
        }
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        // 
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    
    </script>
    
</html>


Wed Jan  3 08:13:07 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:13:07 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 08:13:07 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:13:07 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 08:13:07 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:13:07 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Wed Jan  3 08:13:07 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:13:07 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Wed Jan  3 08:13:07 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:13:07 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 08:13:07 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:13:07 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 08:13:23 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 08:13:23 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 08:13:24 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:13:24 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 08:13:24 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:13:24 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 08:13:24 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:13:24 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 08:13:24 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:13:24 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 08:13:34 2024

GET /flight/3 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 08:13:34 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 08:13:35 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/3
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:13:35 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 08:13:35 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/3
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:13:35 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 08:13:37 2024

GET /flights/3 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/3
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:13:37 2024

HTTP/1.1 200 OK

[{"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}]


Wed Jan  3 08:13:37 2024

GET /tickets/3 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/3
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:13:37 2024

HTTP/1.1 200 OK

[{"ticket_id": "4", "flight_id": "3", "seat": "4", "price": "150.99", "owned": "0"}]


Wed Jan  3 08:13:37 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/3
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:13:37 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 08:13:47 2024

GET /flight/8 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 08:13:47 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 08:13:48 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/8
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:13:48 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 08:13:48 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/8
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:13:48 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 08:13:49 2024

GET /flights/8 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/8
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:13:49 2024

HTTP/1.1 200 OK

[{"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}]


Wed Jan  3 08:13:49 2024

GET /tickets/8 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/8
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:13:49 2024

HTTP/1.1 200 OK

[{"ticket_id": "11", "flight_id": "8", "seat": "3", "price": "65.25", "owned": "0"}, {"ticket_id": "12", "flight_id": "8", "seat": "4", "price": "100.0", "owned": "0"}, {"ticket_id": "13", "flight_id": "8", "seat": "5", "price": "100.25", "owned": "0"}]


Wed Jan  3 08:13:49 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/8
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:13:49 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 08:18:42 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 08:18:42 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div class="main">
        <div id="ticket-info"></div>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>
  
        </div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        function logout() {
            localStorage.clear();
        }
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        // 
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "More";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    
    </script>
    
</html>


Wed Jan  3 08:18:44 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:18:44 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 08:18:44 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:18:44 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 08:18:44 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:18:44 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Wed Jan  3 08:18:44 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:18:44 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Wed Jan  3 08:18:44 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:18:44 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 08:18:44 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:18:44 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 08:18:49 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 08:18:49 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 08:18:50 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:18:50 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 08:18:50 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:18:50 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 08:18:51 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:18:51 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 08:18:52 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:18:52 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 08:18:52 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 08:18:52 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 08:18:54 2024

GET /buy/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 08:18:54 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 08:54:02 2024

GET /buy/23 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 08:54:02 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 13:18:40 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:18:40 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <!-- <ul id="tickets"></ul> -->
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 13:18:40 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:18:40 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:18:40 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:18:40 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:18:41 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:18:41 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 13:18:41 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:18:41 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 13:18:41 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:18:41 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:22:21 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:22:21 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 13:22:21 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:22:21 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:22:21 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:22:21 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:22:22 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:22:22 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 13:22:22 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:22:22 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 13:22:22 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:22:22 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:22:27 2024

GET /buy/25 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:22:27 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 13:22:34 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:22:34 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 13:22:35 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:22:35 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 13:22:35 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:22:35 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 13:22:35 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:22:35 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:22:35 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:22:35 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 13:22:37 2024

GET /flight/2 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:22:37 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 13:22:37 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/2
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:22:37 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:22:37 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/2
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:22:37 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:22:37 2024

GET /flights/2 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/2
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:22:37 2024

HTTP/1.1 200 OK

[{"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}]


Wed Jan  3 13:22:37 2024

GET /tickets/2 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/2
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:22:37 2024

HTTP/1.1 200 OK

[{"ticket_id": "3", "flight_id": "2", "seat": "3", "price": "200.99", "owned": "0"}]


Wed Jan  3 13:22:37 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/2
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:22:37 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:22:40 2024

GET /buy/3 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/2
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:22:40 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 13:22:44 2024

GET /buy/3 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/2
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:22:44 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 13:22:44 2024

GET /buy/3 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/2
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:22:44 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 13:22:46 2024

GET /buy/3 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/2
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:22:46 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 13:22:53 2024

GET /buy/3 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/2
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:22:53 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 13:22:54 2024

GET /buy/3 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/2
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:22:54 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 13:22:54 2024

GET /buy/3 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/2
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:22:54 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 13:22:55 2024

GET /buy/3 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/2
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:22:55 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 13:22:56 2024

GET /buy/3 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/2
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:22:56 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 13:22:56 2024

GET /buy/3 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/2
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:22:56 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 13:26:29 2024

GET /buy/3 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/2
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:26:29 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 13:28:16 2024

GET /buy/3 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/2
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:28:16 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 13:28:21 2024

GET /buy/3 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/2
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:28:21 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 13:28:35 2024

GET /buy/3 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/2
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:28:35 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 13:29:03 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:29:03 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 13:29:04 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:29:04 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 13:29:04 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:29:04 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 13:29:04 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:29:04 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 13:29:06 2024

GET /buy/27 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:29:06 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 13:29:13 2024

GET /buy/30 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:29:13 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 13:30:44 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Jan  3 13:30:44 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 13:30:46 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:30:46 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 13:30:46 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:30:46 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 13:30:46 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:30:46 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:30:46 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:30:46 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 13:30:50 2024

GET /flight/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:30:50 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 13:30:51 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:30:51 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:30:51 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:30:51 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:30:51 2024

GET /flights/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:30:51 2024

HTTP/1.1 200 OK

[{"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 13:30:51 2024

GET /tickets/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:30:51 2024

HTTP/1.1 200 OK

[{"ticket_id": "8", "flight_id": "6", "seat": "8", "price": "70.99", "owned": "0"}]


Wed Jan  3 13:30:51 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:30:51 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:30:52 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/6
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:30:52 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null || username == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Wed Jan  3 13:30:52 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:30:52 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 13:30:52 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:30:52 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 13:30:52 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:30:52 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:30:52 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:30:52 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "seat": "6", "price": "120.99"}]


Wed Jan  3 13:30:52 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:30:52 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Wed Jan  3 13:30:54 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:30:54 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');

        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                 
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Wed Jan  3 13:30:55 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:30:55 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Wed Jan  3 13:30:57 2024

GET /exchange/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/6
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:30:57 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div class="main">
        <div id="ticket-info"></div>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>
  
        </div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        function logout() {
            localStorage.clear();
        }
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        // 
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "More";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    
    </script>
    
</html>


Wed Jan  3 13:30:57 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:30:57 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 13:30:57 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:30:57 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 13:30:57 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:30:57 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Wed Jan  3 13:30:57 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:30:57 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Wed Jan  3 13:30:57 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:30:57 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:30:57 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:30:57 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 13:31:01 2024

GET /flight/5 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:31:01 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 13:31:01 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/5
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:31:01 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:31:01 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/5
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:31:01 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:31:01 2024

GET /flights/5 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/5
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:31:01 2024

HTTP/1.1 200 OK

[{"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}]


Wed Jan  3 13:31:01 2024

GET /tickets/5 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/5
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:31:01 2024

HTTP/1.1 200 OK

[{"ticket_id": "7", "flight_id": "5", "seat": "7", "price": "90.99", "owned": "0"}]


Wed Jan  3 13:31:01 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/5
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:31:01 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:31:04 2024

GET /buy/7 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/5
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:31:04 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info">
            <div class="ticket-info-column">Flight: <span id="flight"></span></div>
            <div class="ticket-info-column">From: <span id="from"></span></div>
            <div class="ticket-info-column">To: <span id="to"></span></div>
            <div class="ticket-info-column">Date: <span id="date"></span></div>
            <div class="ticket-info-column">Time: <span id="time"></span></div>
            <div class="ticket-info-column">Price: <span id="price"></span></div>
        </div>
        <div id="user-form">
            <label for="number">Credit Card</label>            
            <input type="text" name="number" id="number">

            <label for="number">Expiration Date</label>    
            <input type="date" name="expiration-date" id="expiration-date">

            <label for="security-code">Security Code</label>    
            <input type="text" name="security-code" id="security-code">

            <label for="full-name">Card Holder Name</label>
            <input type="text" name="full-name" id="full-name">
            <button type="button" onclick="submit()">Submit</button>
        </div>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        function submit() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    </script>
</html>


Wed Jan  3 13:31:04 2024

GET /ticket/7 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/7
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:31:04 2024

HTTP/1.1 200 OK

[{"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways", "ticket_id": "7", "flight_id": "5", "seat": "7", "price": "90.99", "owned": "0"}]


Wed Jan  3 13:32:32 2024

GET /buy/7 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/5
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:32:32 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info">
            <div class="ticket-info-column">Flight: <span id="flight"></span></div>
            <div class="ticket-info-column">From: <span id="from"></span></div>
            <div class="ticket-info-column">To: <span id="to"></span></div>
            <div class="ticket-info-column">Date: <span id="date"></span></div>
            <div class="ticket-info-column">Time: <span id="time"></span></div>
            <div class="ticket-info-column">Price: <span id="price"></span></div>
        </div>
        <div id="user-form">
            <label for="number">Credit Card</label>            
            <input type="text" name="number" id="number">

            <label for="number">Expiration Date</label>    
            <input type="date" name="expiration-date" id="expiration-date">

            <label for="security-code">Security Code</label>    
            <input type="text" name="security-code" id="security-code">

            <label for="full-name">Card Holder Name</label>
            <input type="text" name="full-name" id="full-name">
            <button type="button" onclick="submit()">Submit</button>
        </div>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        function submit() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    </script>
</html>


Wed Jan  3 13:32:32 2024

GET /ticket/7 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/7
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:32:32 2024

HTTP/1.1 200 OK

[{"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways", "ticket_id": "7", "flight_id": "5", "seat": "7", "price": "90.99", "owned": "0"}]


Wed Jan  3 13:32:38 2024

GET /flight/10 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:32:38 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 13:32:39 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/10
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:32:39 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:32:39 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/10
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:32:39 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:32:39 2024

GET /flights/10 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/10
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:32:39 2024

HTTP/1.1 200 OK

[{"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}]


Wed Jan  3 13:32:39 2024

GET /tickets/10 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/10
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:32:39 2024

HTTP/1.1 200 OK

[{"ticket_id": "16", "flight_id": "10", "seat": "8", "price": "325.25", "owned": "0"}, {"ticket_id": "17", "flight_id": "10", "seat": "9", "price": "330.99", "owned": "0"}, {"ticket_id": "18", "flight_id": "10", "seat": "12", "price": "420.69", "owned": "0"}]


Wed Jan  3 13:32:39 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/10
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:32:39 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:32:41 2024

GET /buy/17 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/10
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:32:41 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info">
            <div class="ticket-info-column">Flight: <span id="flight"></span></div>
            <div class="ticket-info-column">From: <span id="from"></span></div>
            <div class="ticket-info-column">To: <span id="to"></span></div>
            <div class="ticket-info-column">Date: <span id="date"></span></div>
            <div class="ticket-info-column">Time: <span id="time"></span></div>
            <div class="ticket-info-column">Price: <span id="price"></span></div>
        </div>
        <div id="user-form">
            <label for="number">Credit Card</label>            
            <input type="text" name="number" id="number">

            <label for="number">Expiration Date</label>    
            <input type="date" name="expiration-date" id="expiration-date">

            <label for="security-code">Security Code</label>    
            <input type="text" name="security-code" id="security-code">

            <label for="full-name">Card Holder Name</label>
            <input type="text" name="full-name" id="full-name">
            <button type="button" onclick="submit()">Submit</button>
        </div>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        function submit() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    </script>
</html>


Wed Jan  3 13:32:41 2024

GET /ticket/17 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/17
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:32:41 2024

HTTP/1.1 200 OK

[{"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United", "ticket_id": "17", "flight_id": "10", "seat": "9", "price": "330.99", "owned": "0"}]


Wed Jan  3 13:35:39 2024

GET /buy/17 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/10
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:35:39 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info">
            <div class="ticket-info-column">Flight: <span id="flight"></span></div>
            <div class="ticket-info-column">From: <span id="from"></span></div>
            <div class="ticket-info-column">To: <span id="to"></span></div>
            <div class="ticket-info-column">Date: <span id="date"></span></div>
            <div class="ticket-info-column">Time: <span id="time"></span></div>
            <div class="ticket-info-column">Price: <span id="price"></span></div>
        </div>
        <div id="user-form">
            <label for="number">Credit Card</label>            
            <input type="text" name="number" id="number">

            <label for="number">Expiration Date</label>    
            <input type="date" name="expiration-date" id="expiration-date">

            <label for="security-code">Security Code</label>    
            <input type="text" name="security-code" id="security-code">

            <label for="full-name">Card Holder Name</label>
            <input type="text" name="full-name" id="full-name">
            <button type="button" onclick="submit()">Submit</button>
        </div>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        function submit() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    </script>
</html>


Wed Jan  3 13:35:39 2024

GET /ticket/17 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/17
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:35:39 2024

HTTP/1.1 200 OK

[{"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United", "ticket_id": "17", "flight_id": "10", "seat": "9", "price": "330.99", "owned": "0"}]


Wed Jan  3 13:41:31 2024

GET /buy/18 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/10
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:41:31 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info">
            <div class="ticket-info-column">Flight: <span id="flight"></span></div>
            <div class="ticket-info-column">From: <span id="from"></span></div>
            <div class="ticket-info-column">To: <span id="to"></span></div>
            <div class="ticket-info-column">Date: <span id="date"></span></div>
            <div class="ticket-info-column">Time: <span id="time"></span></div>
            <div class="ticket-info-column">Price: <span id="price"></span></div>
        </div>
        <div id="user-form">
            <label for="number">Credit Card</label>            
            <input type="text" name="number" id="number">

            <label for="number">Expiration Date</label>    
            <input type="date" name="expiration-date" id="expiration-date">

            <label for="security-code">Security Code</label>    
            <input type="text" name="security-code" id="security-code">

            <label for="full-name">Card Holder Name</label>
            <input type="text" name="full-name" id="full-name">
            <button type="button" onclick="submit()">Submit</button>
        </div>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        function submit() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    </script>
</html>


Wed Jan  3 13:41:31 2024

GET /ticket/18 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/18
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:41:31 2024

HTTP/1.1 200 OK

[{"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United", "ticket_id": "18", "flight_id": "10", "seat": "12", "price": "420.69", "owned": "0"}]


Wed Jan  3 13:41:37 2024

GET /flight/10 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:41:37 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 13:41:37 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/10
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:41:37 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:41:37 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/10
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:41:37 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:41:37 2024

GET /flights/10 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/10
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:41:37 2024

HTTP/1.1 200 OK

[{"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}]


Wed Jan  3 13:41:37 2024

GET /tickets/10 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/10
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:41:37 2024

HTTP/1.1 200 OK

[{"ticket_id": "16", "flight_id": "10", "seat": "8", "price": "325.25", "owned": "0"}, {"ticket_id": "17", "flight_id": "10", "seat": "9", "price": "330.99", "owned": "0"}, {"ticket_id": "18", "flight_id": "10", "seat": "12", "price": "420.69", "owned": "0"}]


Wed Jan  3 13:41:37 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/10
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:41:37 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:41:57 2024

GET /flight/10 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:41:57 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 13:41:57 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/10
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:41:57 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:41:57 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/10
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:41:57 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:41:57 2024

GET /flights/10 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/10
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:41:57 2024

HTTP/1.1 200 OK

[{"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}]


Wed Jan  3 13:41:57 2024

GET /tickets/10 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/10
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:41:57 2024

HTTP/1.1 200 OK

[{"ticket_id": "16", "flight_id": "10", "seat": "8", "price": "325.25", "owned": "0"}, {"ticket_id": "17", "flight_id": "10", "seat": "9", "price": "330.99", "owned": "0"}, {"ticket_id": "18", "flight_id": "10", "seat": "12", "price": "420.69", "owned": "0"}]


Wed Jan  3 13:41:57 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/10
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:41:57 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:42:04 2024

GET /flight/10 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:42:04 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 13:42:04 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/10
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:42:04 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:42:04 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/10
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:42:04 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:42:05 2024

GET /flights/10 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/10
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:42:05 2024

HTTP/1.1 200 OK

[{"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}]


Wed Jan  3 13:42:05 2024

GET /tickets/10 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/10
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:42:05 2024

HTTP/1.1 200 OK

[{"ticket_id": "16", "flight_id": "10", "seat": "8", "price": "325.25", "owned": "0"}, {"ticket_id": "17", "flight_id": "10", "seat": "9", "price": "330.99", "owned": "0"}, {"ticket_id": "18", "flight_id": "10", "seat": "12", "price": "420.69", "owned": "0"}]


Wed Jan  3 13:42:05 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/10
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:42:05 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:42:50 2024

GET /flight/10 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:42:50 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 13:42:50 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/10
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:42:50 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:42:50 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/10
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:42:50 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:42:50 2024

GET /flights/10 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/10
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:42:50 2024

HTTP/1.1 200 OK

[{"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}]


Wed Jan  3 13:42:50 2024

GET /tickets/10 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/10
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:42:50 2024

HTTP/1.1 200 OK

[{"ticket_id": "16", "flight_id": "10", "seat": "8", "price": "325.25", "owned": "0"}, {"ticket_id": "17", "flight_id": "10", "seat": "9", "price": "330.99", "owned": "0"}, {"ticket_id": "18", "flight_id": "10", "seat": "12", "price": "420.69", "owned": "0"}]


Wed Jan  3 13:42:50 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/10
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:42:50 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:43:15 2024

GET /flight/10 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:43:15 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            // return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 13:43:15 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/10
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:43:15 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:43:15 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/10
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:43:15 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:43:16 2024

GET /flights/10 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/10
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:43:16 2024

HTTP/1.1 200 OK

[{"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}]


Wed Jan  3 13:43:16 2024

GET /tickets/10 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/10
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:43:16 2024

HTTP/1.1 200 OK

[{"ticket_id": "16", "flight_id": "10", "seat": "8", "price": "325.25", "owned": "0"}, {"ticket_id": "17", "flight_id": "10", "seat": "9", "price": "330.99", "owned": "0"}, {"ticket_id": "18", "flight_id": "10", "seat": "12", "price": "420.69", "owned": "0"}]


Wed Jan  3 13:43:16 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/10
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:43:16 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:47:34 2024

GET /flight/10 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:47:34 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 13:47:35 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/10
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:47:35 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:47:35 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/10
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:47:35 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:47:35 2024

GET /flights/10 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/10
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:47:35 2024

HTTP/1.1 200 OK

[{"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}]


Wed Jan  3 13:47:35 2024

GET /tickets/10 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/10
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:47:35 2024

HTTP/1.1 200 OK

[{"ticket_id": "16", "flight_id": "10", "seat": "8", "price": "325.25", "owned": "0"}, {"ticket_id": "17", "flight_id": "10", "seat": "9", "price": "330.99", "owned": "0"}, {"ticket_id": "18", "flight_id": "10", "seat": "12", "price": "420.69", "owned": "0"}]


Wed Jan  3 13:47:35 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/10
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:47:35 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:47:43 2024

GET /flight/8 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:47:43 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 13:47:44 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/8
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:47:44 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:47:44 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/8
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:47:44 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:47:44 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/8
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:47:44 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:47:44 2024

GET /flights/8 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/8
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:47:44 2024

HTTP/1.1 200 OK

[{"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}]


Wed Jan  3 13:47:44 2024

GET /tickets/8 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/8
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:47:44 2024

HTTP/1.1 200 OK

[{"ticket_id": "11", "flight_id": "8", "seat": "3", "price": "65.25", "owned": "0"}, {"ticket_id": "12", "flight_id": "8", "seat": "4", "price": "100.0", "owned": "0"}, {"ticket_id": "13", "flight_id": "8", "seat": "5", "price": "100.25", "owned": "0"}]


Wed Jan  3 13:48:35 2024

GET /exchange/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/6
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:48:35 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div class="main">
        <div id="ticket-info"></div>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>
  
        </div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        function logout() {
            localStorage.clear();
        }
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        // 
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}/e`);
                a.innerHTML = "More";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    
    </script>
    
</html>


Wed Jan  3 13:48:36 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:48:36 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 13:48:36 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:48:36 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 13:48:36 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:48:36 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Wed Jan  3 13:48:36 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:48:36 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Wed Jan  3 13:48:36 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:48:36 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:48:36 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:48:36 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 13:48:44 2024

GET /flight/6/e HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:48:44 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 13:48:44 2024

GET /flight/static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/6/e
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:48:44 2024

HTTP/1.1 200 OK




Wed Jan  3 13:48:44 2024

GET /flight/static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/6/e
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:48:44 2024

HTTP/1.1 200 OK




Wed Jan  3 13:48:45 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/6/e
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:48:45 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:48:45 2024

GET /flights/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/6/e
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:48:45 2024

HTTP/1.1 200 OK

[{"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 13:48:45 2024

GET /tickets/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/6/e
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:48:45 2024

HTTP/1.1 200 OK

[{"ticket_id": "8", "flight_id": "6", "seat": "8", "price": "70.99", "owned": "0"}]


Wed Jan  3 13:48:49 2024

GET /flight/1/e HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:48:49 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 13:48:49 2024

GET /flight/static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1/e
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:48:49 2024

HTTP/1.1 200 OK




Wed Jan  3 13:48:49 2024

GET /flight/static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1/e
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:48:49 2024

HTTP/1.1 200 OK




Wed Jan  3 13:48:50 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1/e
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:48:50 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 13:48:50 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1/e
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:48:50 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 13:48:50 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1/e
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:48:50 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:48:57 2024

GET /flight/1/e HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:48:57 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 13:48:58 2024

GET /flight/static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1/e
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:48:58 2024

HTTP/1.1 200 OK




Wed Jan  3 13:48:58 2024

GET /flight/static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1/e
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:48:58 2024

HTTP/1.1 200 OK




Wed Jan  3 13:48:58 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1/e
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:48:58 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 13:48:58 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1/e
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:48:58 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 13:48:58 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1/e
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:48:58 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:49:06 2024

GET /flight/5/e HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:49:06 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 13:49:06 2024

GET /flight/static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/5/e
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:49:06 2024

HTTP/1.1 200 OK




Wed Jan  3 13:49:06 2024

GET /flight/static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/5/e
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:49:06 2024

HTTP/1.1 200 OK




Wed Jan  3 13:49:06 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/5/e
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:49:06 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:49:06 2024

GET /flights/5 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/5/e
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:49:06 2024

HTTP/1.1 200 OK

[{"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}]


Wed Jan  3 13:49:06 2024

GET /tickets/5 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/5/e
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:49:06 2024

HTTP/1.1 200 OK

[{"ticket_id": "7", "flight_id": "5", "seat": "7", "price": "90.99", "owned": "0"}]


Wed Jan  3 13:49:10 2024

GET /flight/2/e HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:49:10 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 13:49:10 2024

GET /flight/static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/2/e
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:49:10 2024

HTTP/1.1 200 OK




Wed Jan  3 13:49:10 2024

GET /flight/static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/2/e
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:49:10 2024

HTTP/1.1 200 OK




Wed Jan  3 13:49:11 2024

GET /flights/2 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/2/e
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:49:11 2024

HTTP/1.1 200 OK

[{"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}]


Wed Jan  3 13:49:11 2024

GET /tickets/2 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/2/e
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:49:11 2024

HTTP/1.1 200 OK

[{"ticket_id": "3", "flight_id": "2", "seat": "3", "price": "200.99", "owned": "0"}]


Wed Jan  3 13:49:11 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/2/e
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:49:11 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:49:21 2024

GET /flight/2/e HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:49:21 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 13:49:22 2024

GET /flight/static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/2/e
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:49:22 2024

HTTP/1.1 200 OK




Wed Jan  3 13:49:22 2024

GET /flight/static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/2/e
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:49:22 2024

HTTP/1.1 200 OK




Wed Jan  3 13:49:22 2024

GET /flights/2 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/2/e
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:49:22 2024

HTTP/1.1 200 OK

[{"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}]


Wed Jan  3 13:49:22 2024

GET /tickets/2 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/2/e
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:49:22 2024

HTTP/1.1 200 OK

[{"ticket_id": "3", "flight_id": "2", "seat": "3", "price": "200.99", "owned": "0"}]


Wed Jan  3 13:49:22 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/2/e
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:49:22 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:49:27 2024

GET /exchange/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:49:27 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div class="main">
        <div id="ticket-info"></div>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>
  
        </div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        function logout() {
            localStorage.clear();
        }
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        // 
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "More";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    
    </script>
    
</html>


Wed Jan  3 13:49:28 2024

GET /exchange/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:49:28 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div class="main">
        <div id="ticket-info"></div>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>
  
        </div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        function logout() {
            localStorage.clear();
        }
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        // 
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "More";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    
    </script>
    
</html>


Wed Jan  3 13:49:32 2024

GET /exchange/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:49:32 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div class="main">
        <div id="ticket-info"></div>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>
  
        </div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        function logout() {
            localStorage.clear();
        }
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        // 
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "More";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    
    </script>
    
</html>


Wed Jan  3 13:49:33 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:49:33 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 13:49:33 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:49:33 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 13:49:33 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:49:33 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Wed Jan  3 13:49:33 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:49:33 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Wed Jan  3 13:49:33 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:49:33 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 13:49:33 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:49:33 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:56:05 2024

GET /exchange/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:56:05 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div class="main">
        <div id="ticket-info"></div>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>
  
        </div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        function logout() {
            localStorage.clear();
        }
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        // 
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "More";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    
    </script>
    
</html>


Wed Jan  3 13:56:06 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:56:06 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 13:56:06 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:56:06 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 13:56:06 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:56:06 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Wed Jan  3 13:56:06 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:56:06 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Wed Jan  3 13:56:06 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:56:06 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 13:56:06 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:56:06 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 13:56:12 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 13:56:12 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 13:56:12 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:56:12 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:56:12 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:56:12 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 13:56:12 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:56:12 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 13:56:12 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:56:12 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 13:56:12 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 13:56:12 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 14:06:49 2024

GET /exchange/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/6
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:06:49 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div class="main">
        <div id="ticket-info"></div>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>
  
        </div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        function logout() {
            localStorage.clear();
        }
        localStorage.setItem('ticket_id_old',id);
        const removedValue=localStorage.getItem('ticket_id_old');
        console.log(removedValue);
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        // 
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "More";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    
    </script>
    
</html>


Wed Jan  3 14:06:49 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:06:49 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:06:49 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:06:49 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:06:49 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:06:49 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Wed Jan  3 14:07:20 2024

GET /exchange/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:07:20 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div class="main">
        <div id="ticket-info"></div>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>
  
        </div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        function logout() {
            localStorage.clear();
        }
        // localStorage.setItem('ticket_id_old',id);
        // const removedValue=localStorage.getItem('ticket_id_old');
        // console.log(removedValue);
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        // 
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "More";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    
    </script>
    
</html>


Wed Jan  3 14:07:20 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:07:20 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:07:20 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:07:20 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:07:20 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:07:20 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Wed Jan  3 14:07:20 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:07:20 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Wed Jan  3 14:07:20 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:07:20 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:07:20 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:07:20 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 14:07:36 2024

GET /exchange/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:07:36 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div class="main">
        <div id="ticket-info"></div>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>
  
        </div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        function logout() {
            localStorage.clear();
        }
        localStorage.setItem('ticket_id_old',id);
        // const removedValue=localStorage.getItem('ticket_id_old');
        // console.log(removedValue);
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        // 
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "More";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    
    </script>
    
</html>


Wed Jan  3 14:07:36 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:07:36 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:07:36 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:07:36 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:07:37 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:07:37 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Wed Jan  3 14:07:38 2024

GET /exchange/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:07:38 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div class="main">
        <div id="ticket-info"></div>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>
  
        </div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        function logout() {
            localStorage.clear();
        }
        localStorage.setItem('ticket_id_old',id);
        // const removedValue=localStorage.getItem('ticket_id_old');
        // console.log(removedValue);
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        // 
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "More";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    
    </script>
    
</html>


Wed Jan  3 14:07:39 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:07:39 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:07:39 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:07:39 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:07:39 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:07:39 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Wed Jan  3 14:20:25 2024

GET /exchange/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/6
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:20:25 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div class="main">
        <div id="ticket-info"></div>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>
  
        </div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        function logout() {
            localStorage.clear();
        }
        localStorage.setItem('ticket_id_old',id.toString());
        // const removedValue=localStorage.getItem('ticket_id_old');
        // console.log(removedValue);
        const url = window.location.pathname;
        const id = url.split("/")[2];
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        // 
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "More";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    
    </script>
    
</html>


Wed Jan  3 14:20:26 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:20:26 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:20:26 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:20:26 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:20:26 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:20:26 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Wed Jan  3 14:22:00 2024

GET /info/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:22:00 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');

        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                 
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Wed Jan  3 14:22:02 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:22:02 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Wed Jan  3 14:22:02 2024

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/6
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:22:02 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 14:22:07 2024

GET /exchange/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/6
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:22:07 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div class="main">
        <div id="ticket-info"></div>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>
  
        </div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        function logout() {
            localStorage.clear();
        }
        
        // const removedValue=localStorage.getItem('ticket_id_old');
        // console.log(removedValue);
        const url = window.location.pathname;
        const id = url.split("/")[2];
        console.log(typeof id);
        localStorage.setItem('ticket_id_old',id.toString());
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        // 
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "More";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    
    </script>
    
</html>


Wed Jan  3 14:22:08 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:22:08 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:22:08 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:22:08 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:22:09 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:22:09 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Wed Jan  3 14:22:09 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:22:09 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Wed Jan  3 14:22:09 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:22:09 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:22:09 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:22:09 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 14:23:12 2024

GET /exchange/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:23:12 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div class="main">
        <div id="ticket-info"></div>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>
  
        </div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        function logout() {
            localStorage.clear();
        }
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        localStorage.setItem('ticket_id_old',id);

        const removedValue=localStorage.getItem('ticket_id_old');
        console.log(removedValue);
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        // 
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "More";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    
    </script>
    
</html>


Wed Jan  3 14:23:13 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:23:13 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:23:13 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:23:13 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:23:13 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:23:13 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Wed Jan  3 14:23:13 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:23:13 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Wed Jan  3 14:23:13 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:23:13 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:23:14 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:23:14 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 14:24:41 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:24:41 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];

        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau

            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 14:24:42 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:24:42 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 14:24:42 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:24:42 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 14:24:43 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:24:43 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 14:24:43 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:24:43 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:24:43 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:24:43 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 14:34:43 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:34:43 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const old_id = localStorage.getItem('ticket_id_old');
        console.log(typeof old_id);
        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            
            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 14:34:43 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:34:43 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 14:34:43 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:34:43 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 14:34:44 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:34:44 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:34:44 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:34:44 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 14:34:44 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:34:44 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 14:34:56 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:34:56 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const old_id = localStorage.getItem('ticket_id_old');
        console.log( old_id);
        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            
            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 14:34:56 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:34:56 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 14:34:56 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:34:56 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 14:34:57 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:34:57 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:34:57 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:34:57 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 14:34:57 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:34:57 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 14:40:09 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:40:09 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const old_id_string = localStorage.getItem('ticket_id_old');
        const old_id=parseInt(old_id_string,10);
        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            
            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                if(a){

                }else{
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                }
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 14:40:10 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:40:10 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 14:40:10 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:40:10 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 14:40:10 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:40:10 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:40:10 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:40:10 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 14:40:10 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:40:10 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 14:40:49 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:40:49 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const old_id_string = localStorage.getItem('ticket_id_old');
        const old_id=parseInt(old_id_string,10);
        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            
            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                if(a){

                }else{
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                }
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 14:40:50 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:40:50 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 14:40:50 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:40:50 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 14:40:50 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:40:50 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:40:50 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:40:50 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 14:40:50 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:40:50 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 14:41:18 2024

GET /exchange/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/6
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:41:18 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div class="main">
        <div id="ticket-info"></div>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>
  
        </div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        function logout() {
            localStorage.clear();
        }
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        // localStorage.setItem('ticket_id_old',id);
        localStorage.clear()
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        // 
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "More";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    
    </script>
    
</html>


Wed Jan  3 14:41:19 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:41:19 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:41:19 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:41:19 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:41:19 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:41:19 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Wed Jan  3 14:41:19 2024

GET /ticket/6 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:41:19 2024

HTTP/1.1 200 OK

[{"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "flight_id": "4", "seat": "6", "price": "120.99", "owned": "1"}]


Wed Jan  3 14:41:19 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:41:19 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:41:19 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/6
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:41:19 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 14:41:21 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/6
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:41:21 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const old_id_string = localStorage.getItem('ticket_id_old');
        const old_id=parseInt(old_id_string,10);
        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            
            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                if(a){

                }else{
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                }
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 14:41:22 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:41:22 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 14:41:22 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:41:22 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 14:41:22 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:41:22 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:41:22 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:41:22 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 14:41:22 2024

GET /unread/null HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:41:22 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 14:41:40 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:41:40 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 14:41:41 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:41:41 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:41:41 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:41:41 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:41:41 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:41:41 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:41:41 2024

GET /unread/null HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:41:41 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 14:41:42 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:41:42 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <head>
        
        <title>Bootstrap Example</title>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
        <link rel="stylesheet" href="../static/login.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    </head>
   
    <body>

        <section class="h-100 gradient-form" style="background-color: #eee;">
            <div class="container py-5 h-100">
              <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-xl-10">
                  <div class="card rounded-3 text-black">
                    <div class="row g-0">
                      <div class="col-lg-6">
                        <div class="card-body p-md-5 mx-md-4">
          
                          <div class="text-center">
                            <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/lotus.webp"
                              style="width: 185px;" alt="logo">
                            <h4 class="mt-1 mb-5 pb-1">We are The Lotus Team</h4>
                          </div>
          
                          <div>
                            <p>Please login to your account</p>
          
                            <div class="form-outline mb-4">
                              <input type="text" id="username" class="form-control"
                                placeholder="Username" name="username" >
                              <label class="form-label" for="form2Example11">Username</label>
                            </div>
          
                            <div class="form-outline mb-4">
                              <input type="password" id="password" class="form-control" name="password" placeholder="Password" >
                              <label class="form-label" for="form2Example22">Password</label>
                            </div>
          
                            <div class="text-center pt-1 mb-5 pb-1">
                              <button class="btn btn-primary btn-block fa-lg gradient-custom-2 mb-3" type="button" onclick="submit()">Log
                                in</button>
                              <a class="text-muted" href="#!">Forgot password?</a>
                            </div>
          
                            <div class="d-flex align-items-center justify-content-center pb-4">
                              <p class="mb-0 me-2">Don't have an account?</p>
                              <button type="button" class="btn btn-outline-danger""> <a  href="http://localhost:8001/register">Create new account</a></button>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="col-lg-6 d-flex align-items-center gradient-custom-2">
                        <div class="text-white px-3 py-4 p-md-5 mx-md-4">
                          <h4 class="mb-4">We are more than just a company</h4>
                          <p class="small mb-0">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
                            tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud
                            exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </section>
          <!-- <h1>login</h1>
          <input type="text" name="username" id="username" placeholder="Username">
          <input type="password" name="password" id="password" placeholder="Password">
          <button type="button" onclick="submit()">Submit</button> -->
        <script>
            function submit() {
              console.log("a");
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "multipart/form-data"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                    data = data.slice(0, -4)
                    console.log(data);
                    if (data != "") {
                        window.location.replace("http://localhost:8001");
                        localStorage.setItem("username", data);
                    }
                    else {
                        alert("Invalid username or password");
                    }
                })
            }
        </script>
    </body>
</html>


Wed Jan  3 14:41:43 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:41:43 2024

HTTP/1.1 200 OK

.gradient-custom-2 {
    /* fallback for old browsers */
    background: #fccb90;
    
    /* Chrome 10-25, Safari 5.1-6 */
    background: -webkit-linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);
    
    /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
    background: linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);
    }
    
    @media (min-width: 768px) {
    .gradient-form {
    height: 100vh !important;
    }
    }
    @media (min-width: 769px) {
    .gradient-custom-2 {
    border-top-right-radius: .3rem;
    border-bottom-right-radius: .3rem;
    }
    }


Wed Jan  3 14:41:49 2024

POST /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Content-Type: multipart/form-data
Content-Length: 25
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

username=abc&password=123
Wed Jan  3 14:41:49 2024

HTTP/1.1 200 OK

abc


Wed Jan  3 14:41:50 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:41:50 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 14:41:50 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:41:50 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:41:50 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:41:50 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:41:51 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:41:51 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:41:51 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:41:51 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 14:41:59 2024

GET /flight/7 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:41:59 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const old_id_string = localStorage.getItem('ticket_id_old');
        const old_id=parseInt(old_id_string,10);
        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            
            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                if(a){

                }else{
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                }
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 14:41:59 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/7
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:41:59 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 14:41:59 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/7
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:41:59 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 14:41:59 2024

GET /flights/7 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/7
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:41:59 2024

HTTP/1.1 200 OK

[{"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:41:59 2024

GET /tickets/7 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/7
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:41:59 2024

HTTP/1.1 200 OK

[{"ticket_id": "9", "flight_id": "7", "seat": "1", "price": "65.25", "owned": "0"}, {"ticket_id": "10", "flight_id": "7", "seat": "2", "price": "66.25", "owned": "0"}]


Wed Jan  3 14:42:00 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/7
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:42:00 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 14:42:04 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:42:04 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const old_id_string = localStorage.getItem('ticket_id_old');
        const old_id=parseInt(old_id_string,10);
        let tickets = [];
        let filteredTickets = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            
            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                if(a){

                }else{
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                }
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 14:42:05 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:42:05 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 14:42:05 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:42:05 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 14:42:05 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:42:05 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:42:05 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:42:05 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 14:42:05 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:42:05 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 14:42:31 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:42:31 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const old_id_string = localStorage.getItem('ticket_id_old');
        const old_id=parseInt(old_id_string,10);
        let tickets = [];
        let filteredTickets = [];
        console.log (old_id);
        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            
            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                if(a){

                }else{
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                }
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 14:42:31 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:42:31 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 14:42:31 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:42:31 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 14:42:32 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:42:32 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:42:32 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:42:32 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 14:42:32 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:42:32 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 14:43:14 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:43:14 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const old_id_string = localStorage.getItem('ticket_id_old');
        const old_id=parseInt(old_id_string,10);
        let tickets = [];
        let filteredTickets = [];
        console.log (old_id);
        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            
            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                if(old_id){

                }else{
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                }
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 14:43:14 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:43:14 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 14:43:14 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:43:14 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 14:43:14 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:43:14 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:43:14 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:43:14 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 14:43:14 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:43:14 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 14:43:47 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:43:47 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null || username == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Wed Jan  3 14:43:48 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:43:48 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:43:48 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:43:48 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:43:49 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:43:49 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 14:43:49 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:43:49 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Wed Jan  3 14:43:49 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:43:49 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "seat": "6", "price": "120.99"}]


Wed Jan  3 14:43:51 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:43:51 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');

        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                 
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Wed Jan  3 14:43:52 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:43:52 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Wed Jan  3 14:43:53 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:43:53 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div class="main">
        <div id="ticket-info"></div>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>
  
        </div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        function logout() {
            localStorage.clear();
        }
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        localStorage.setItem('ticket_id_old',id);
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        // 
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "More";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    
    </script>
    
</html>


Wed Jan  3 14:43:53 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:43:53 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:43:53 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:43:53 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 14:43:54 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:43:54 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Wed Jan  3 14:43:54 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:43:54 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Wed Jan  3 14:43:54 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:43:54 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:43:54 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:43:54 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 14:44:02 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 14:44:02 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const old_id_string = localStorage.getItem('ticket_id_old');
        const old_id=parseInt(old_id_string,10);
        let tickets = [];
        let filteredTickets = [];
        console.log (old_id);
        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            
            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                if(old_id){

                }else{
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                }
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 14:44:02 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:44:02 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 14:44:02 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:44:02 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 14:44:02 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:44:02 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 14:44:03 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:44:03 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 14:44:03 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 14:44:03 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 19:35:49 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin


Wed Jan  3 19:35:49 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flight-info">
                <div class="flight-info-column">Flight: <span id="flight"></span></div>
                <div class="flight-info-column">From: <span id="from"></span></div>
                <div class="flight-info-column">To: <span id="to"></span></div>
                <div class="flight-info-column">Airline: <span id="airline"></span></div>
                <div class="flight-info-column">Date: <span id="date"></span></div>
                <div class="flight-info-column">Time: <span id="time"></span></div>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>

    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const old_id_string = localStorage.getItem('ticket_id_old');
        const old_id=parseInt(old_id_string,10);
        const new_id_string='';
        let tickets = [];
        let filteredTickets = [];
        console.log (old_id);
        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            
            filteredTickets.forEach(ticket => {
                const a = document.createElement("a");
                a.className = "ticket";
                const ticketInfo = document.getElementById("ticket-info");
                if(old_id){
                    a.onclick=function(){
                        console.log(ticket.ticket_id);
                    }
                }else{
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
                }
                a.textContent = ticket.seat;
                if (ticket.owned == "1") {
                    a.className = "disabled";
                }
                ul.appendChild(a);
            });
        }

        fetch(`/flights/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

        fetch(`/tickets/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 19:35:49 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:35:49 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 19:35:49 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:35:49 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 19:35:49 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:35:49 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 19:35:49 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:35:49 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 19:35:49 2024

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:35:49 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 19:38:40 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 19:38:40 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
    </div>
</body>

<script>
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string = '';
    let tickets = [];
    let filteredTickets = [];
    console.log(old_id);
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) {
                a.onclick = function () {
                    alert('haha');
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
</script>

</html>


Wed Jan  3 19:38:40 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:38:40 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 19:38:40 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:38:40 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 19:38:40 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:38:40 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 19:38:40 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:38:40 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 19:38:40 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:38:40 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 19:39:14 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 19:39:14 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
    </div>
</body>

<script>
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string = '';
    let tickets = [];
    let filteredTickets = [];
    console.log(old_id);
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) {
                a.onclick = function () {
                    alert(ticket.ticket_id);
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
</script>

</html>


Wed Jan  3 19:39:14 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:39:14 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 19:39:14 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:39:14 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 19:39:14 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:39:14 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 19:39:14 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:39:14 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 19:39:14 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:39:14 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 19:39:46 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 19:39:46 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
    </div>
</body>

<script>
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string = '';
    let tickets = [];
    let filteredTickets = [];
    console.log(old_id);
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            // if (old_id) {
            //     a.onclick = function () {
            //         alert(ticket.ticket_id);
            //     }
            // } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            // }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
</script>

</html>


Wed Jan  3 19:39:47 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:39:47 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 19:39:47 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:39:47 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 19:39:47 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:39:47 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 19:39:47 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:39:47 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 19:39:47 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:39:47 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 19:39:49 2024

GET /buy/25 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 19:39:49 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info">
            <div class="ticket-info-column">Flight: <span id="flight"></span></div>
            <div class="ticket-info-column">From: <span id="from"></span></div>
            <div class="ticket-info-column">To: <span id="to"></span></div>
            <div class="ticket-info-column">Date: <span id="date"></span></div>
            <div class="ticket-info-column">Time: <span id="time"></span></div>
            <div class="ticket-info-column">Price: <span id="price"></span></div>
        </div>
        <div id="user-form">
            <label for="number">Credit Card</label>            
            <input type="text" name="number" id="number">

            <label for="number">Expiration Date</label>    
            <input type="date" name="expiration-date" id="expiration-date">

            <label for="security-code">Security Code</label>    
            <input type="text" name="security-code" id="security-code">

            <label for="full-name">Card Holder Name</label>
            <input type="text" name="full-name" id="full-name">
            <button type="button" onclick="submit()">Submit</button>
        </div>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        let ticket = null;

        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            document.getElementById("flight").innerText = ticket.flight_id;
            document.getElementById("from").innerText = ticket.from;
            document.getElementById("to").innerText = ticket.to;
            document.getElementById("date").innerText = ticket.date;
            document.getElementById("time").innerText = ticket.time;
            document.getElementById("price").innerText = ticket.price;
        }

        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            // console.log(data);
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })

        function submit() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    </script>
</html>


Wed Jan  3 19:39:49 2024

GET /ticket/25 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/buy/25
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:39:49 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}]


Wed Jan  3 19:40:49 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 19:40:49 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
    </div>
</body>

<script>
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string = '';
    let tickets = [];
    let filteredTickets = [];
    console.log(old_id);
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) {
                a.onclick = function () {
                    alert(typeof ticket.ticket_id);
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
</script>

</html>


Wed Jan  3 19:40:50 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:40:50 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 19:40:50 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:40:50 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 19:40:50 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:40:50 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 19:40:50 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:40:50 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 19:40:50 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 19:40:50 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:13:26 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:13:26 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string = '';
    const exchange_div=document.getElementById('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    // exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string=new_id_string+tiket.ticket_id;
                    exhange.exchange_div
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        if(old_id){
            exchange_div.style.display='block';
        }
    

</script>

</html>


Wed Jan  3 20:13:27 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:13:27 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:13:27 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:13:27 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:13:31 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:13:31 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string = '';
    const exchange_div=document.getElementById('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    // exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string=new_id_string+tiket.ticket_id;
                    exhange.exchange_div
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        if(old_id){
            exchange_div.style.display='block';
        }
    

</script>

</html>


Wed Jan  3 20:13:31 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:13:31 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:13:31 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:13:31 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:14:38 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:14:38 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string = '';
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    // exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string=new_id_string+tiket.ticket_id;
                    exhange.exchange_div
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        if(old_id){
            exchange_div.style.display='block';
        }
    

</script>

</html>


Wed Jan  3 20:14:38 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:14:38 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:14:38 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:14:38 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:14:38 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:14:38 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:14:39 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:14:39 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:14:39 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:14:39 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:14:56 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:14:56 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string = '';
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    // exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string=new_id_string+tiket.ticket_id;
                    exhange.exchange_div
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        // if(old_id){
        //     exchange_div.style.display='block';
        // }
    

</script>

</html>


Wed Jan  3 20:14:56 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:14:56 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:14:56 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:14:56 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:14:56 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:14:56 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:14:56 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:14:56 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:14:56 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:14:56 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:15:08 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:15:08 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string = '';
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    // exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string=new_id_string+tiket.ticket_id;
                    exhange.exchange_div
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        // if(old_id){
        //     exchange_div.style.display='block';
        // }
    

</script>

</html>


Wed Jan  3 20:15:08 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:08 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:15:08 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:08 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:15:08 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:08 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:15:08 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:08 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:15:08 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:08 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:15:15 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:15:15 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string = '';
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string=new_id_string+tiket.ticket_id;
                    exhange.exchange_div
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        // if(old_id){
        //     exchange_div.style.display='block';
        // }
    

</script>

</html>


Wed Jan  3 20:15:15 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:15 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:15:15 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:15 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:15:15 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:15 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:15:15 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:15 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:15:15 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:15 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:15:20 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:15:20 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string = '';
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string=new_id_string+tiket.ticket_id;
                    exhange.exchange_div
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        // if(old_id){
        //     exchange_div.style.display='block';
        // }
    

</script>

</html>


Wed Jan  3 20:15:20 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:15:20 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string = '';
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string=new_id_string+tiket.ticket_id;
                    exhange.exchange_div
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        // if(old_id){
        //     exchange_div.style.display='block';
        // }
    

</script>

</html>


Wed Jan  3 20:15:20 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:20 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:15:20 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:20 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:15:20 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:15:20 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string = '';
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string=new_id_string+tiket.ticket_id;
                    exhange.exchange_div
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        // if(old_id){
        //     exchange_div.style.display='block';
        // }
    

</script>

</html>


Wed Jan  3 20:15:20 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:20 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:15:20 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:20 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:15:20 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:20 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:15:21 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:21 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:15:21 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:21 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:15:26 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:15:26 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string = '';
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string=new_id_string+tiket.ticket_id;
                    exhange.exchange_div
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        // if(old_id){
        //     exchange_div.style.display='block';
        // }
    

</script>

</html>


Wed Jan  3 20:15:27 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:27 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:15:27 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:27 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:15:27 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:27 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:15:27 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:27 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:15:27 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:27 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:15:28 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:15:28 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string = '';
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string=new_id_string+tiket.ticket_id;
                    exhange.exchange_div
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        // if(old_id){
        //     exchange_div.style.display='block';
        // }
    

</script>

</html>


Wed Jan  3 20:15:28 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:28 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:15:28 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:28 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:15:28 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:15:28 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string = '';
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string=new_id_string+tiket.ticket_id;
                    exhange.exchange_div
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        // if(old_id){
        //     exchange_div.style.display='block';
        // }
    

</script>

</html>


Wed Jan  3 20:15:33 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:15:33 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string = '';
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string=new_id_string+tiket.ticket_id;
                    exhange.exchange_div
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        // if(old_id){
        //     exchange_div.style.display='block';
        // }
    

</script>

</html>


Wed Jan  3 20:15:33 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:33 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:15:33 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:33 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:15:33 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:33 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:15:33 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:33 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:15:33 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:15:33 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:19:47 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:19:47 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string = '';
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string=new_id_string+tiket.ticket_id;
                    exhange.exchange_div
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        const new_id= parseInt(new_id_string, 10);
        alert(new_id);
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 20:19:47 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:19:47 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:19:48 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:19:48 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:19:48 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:19:48 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:19:48 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:19:48 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:19:48 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:19:48 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:20:12 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:20:12 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string = '';
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string=new_id_string+tiket.ticket_id;
                    exhange.exchange_div
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        const new_id= parseInt(new_id_string, 10);
        if(new_id){
        alert(new_id);
        }
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 20:20:12 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:20:12 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:20:12 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:20:12 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:20:12 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:20:12 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:20:12 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:20:12 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:20:12 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:20:12 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:20:55 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:20:55 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string = '';
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string=new_id_string+tiket.ticket_id;
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        const new_id= parseInt(new_id_string, 10);
        if(new_id){
        alert(new_id);
        }
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 20:20:56 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:20:56 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:20:56 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:20:56 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:20:56 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:20:56 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:20:56 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:20:56 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:20:56 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:20:56 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:21:30 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:21:30 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string = '';
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    alert(tiket.ticket_id);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        const new_id= parseInt(new_id_string, 10);
        if(new_id){
        alert(new_id);
        }
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 20:21:31 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:21:31 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:21:31 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:21:31 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:21:31 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:21:31 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:21:31 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:21:31 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:21:31 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:21:31 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:21:48 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:21:48 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string = '';
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string=new_id_string+ticket.ticket_id;
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        const new_id= parseInt(new_id_string, 10);
        if(new_id){
        alert(new_id);
        }
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 20:21:48 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:21:48 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:21:48 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:21:48 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:21:49 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:21:49 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:21:49 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:21:49 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:21:49 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:21:49 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:23:17 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:23:17 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string = '';
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string=new_id_string+ticket.ticket_id;
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        const new_id= parseInt(new_id_string, 10);
        if(new_id){
        alert(new_id);
        }
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 20:23:18 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:23:18 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:23:18 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:23:18 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:23:18 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:23:18 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:23:18 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:23:18 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:23:18 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:23:18 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:23:19 2024

GET /favicon.ico HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: image/avif,image/webp,*/*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: image
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:23:19 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 20:23:56 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:23:56 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string = '';
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string=new_id_string+ticket.ticket_id;
                    alert(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        const new_id= parseInt(new_id_string, 10);
        if(new_id){
        alert(new_id);
        }
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 20:23:57 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:23:57 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:23:57 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:23:57 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:23:57 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:23:57 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:23:57 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:23:57 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:23:57 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:23:57 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:24:35 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:24:35 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string = '';
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    alert(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        const new_id= parseInt(new_id_string, 10);
        if(new_id){
        alert(new_id);
        }
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 20:24:35 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:24:35 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:24:35 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:24:35 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:24:35 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:24:35 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:24:35 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:24:35 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:24:35 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:24:35 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:24:50 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:24:50 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    alert(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        const new_id= parseInt(new_id_string, 10);
        if(new_id){
        alert(new_id);
        }
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 20:24:50 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:24:50 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:24:50 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:24:50 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:24:50 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:24:50 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:24:50 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:24:50 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:24:50 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:24:50 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:25:54 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:25:54 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        const new_id= parseInt(new_id_string, 10);
        if(new_id){
        alert("haha");
        }
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 20:25:54 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:25:54 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:25:54 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:25:54 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:25:54 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:25:54 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:25:54 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:25:54 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:25:54 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:25:54 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:27:07 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:27:07 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        const new_id= parseInt(new_id_string, 10);
        alert(new_id);
        if(new_id){
        alert("haha");
        }
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 20:27:07 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:27:07 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:27:07 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:27:07 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:27:07 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:27:07 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:27:07 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:27:07 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:27:07 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:27:07 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:37:05 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:37:05 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        while(new_id_string.length===0){
            console.log('chua chon ticket moi de doi');l
        }
        const new_id= parseInt(new_id_string, 10);
        alert(new_id);
        if(new_id_string!=''){
        alert("haha");
        }
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 20:37:05 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:37:05 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:37:05 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:37:05 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:37:06 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:37:06 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:37:06 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:37:06 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:37:06 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:37:06 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:37:51 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:37:51 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    var new_id_string ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        while(new_id_string.length===0){
            console.log('chua chon ticket moi de doi');l
        }
        const new_id= parseInt(new_id_string, 10);
        alert(new_id);
        if(new_id_string!=''){
        alert("haha");
        }
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 20:37:51 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:37:51 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:37:51 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:37:51 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:37:52 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:37:52 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:37:52 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:37:52 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:37:52 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:37:52 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:38:15 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:38:15 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        while(new_id_string.length===0){
            console.log('chua chon ticket moi de doi');l
        }
        const new_id= parseInt(new_id_string, 10);
        alert(new_id);
        if(new_id_string!=''){
        alert("haha");
        }
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 20:38:16 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:38:16 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:38:16 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:38:16 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:38:16 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:38:16 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:38:16 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:38:16 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:38:16 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:38:16 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:38:34 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:38:34 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        while(new_id_string.length===0){
            console.log('chua chon ticket moi de doi');
        }
        const new_id= parseInt(new_id_string, 10);
        alert(new_id);
        if(new_id_string!=''){
        alert("haha");
        }
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 20:38:35 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:38:35 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:38:35 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:38:35 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:38:35 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:38:35 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:38:35 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:38:35 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:38:35 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:38:35 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:40:01 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Jan  3 20:40:01 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 20:40:02 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:40:02 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 20:40:02 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:40:02 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 20:40:02 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:40:02 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:40:02 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:40:02 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:49:50 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Jan  3 20:49:50 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 20:49:50 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:49:50 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 20:49:50 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:49:50 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 20:49:50 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:49:50 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:49:50 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:49:50 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:49:54 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:49:54 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null || username == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Wed Jan  3 20:49:55 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:49:55 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 20:49:55 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:49:55 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 20:49:55 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:49:55 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:49:55 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:49:55 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "seat": "6", "price": "120.99"}]


Wed Jan  3 20:49:55 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:49:55 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Wed Jan  3 20:49:56 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:49:56 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');

        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                 
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Wed Jan  3 20:49:56 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:49:56 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Wed Jan  3 20:49:57 2024

GET /exchange/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:49:57 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>
        <div class="main">
        <div id="ticket-info"></div>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>
  
        </div>
        
    </body>
    <script>
        // head 
        const username = localStorage.getItem("username");

        document.getElementById("username").innerHTML = username;
        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        function logout() {
            localStorage.clear();
        }
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        localStorage.setItem('ticket_id_old',id);
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
            }
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        // 
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "More";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    
    </script>
    
</html>


Wed Jan  3 20:49:58 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:49:58 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 20:49:58 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:49:58 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 20:49:58 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:49:58 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Wed Jan  3 20:49:58 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:49:58 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Wed Jan  3 20:49:58 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:49:58 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:49:58 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:49:58 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:50:00 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:50:00 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        async function waitForNewId(){
            while(new_id_string.length===0){
                console.log('Doi ');
            }
        }
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 20:50:00 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:50:00 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:50:00 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:50:00 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:50:00 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:50:00 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:50:00 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:50:00 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:50:00 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:50:00 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:50:08 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:50:08 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    const new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        async function waitForNewId(){
            while(new_id_string.length===0){
                console.log('Doi ');
            }
        }
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 20:51:46 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:51:46 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        async function waitForNewId(){
            while(new_id_string.length===0){
                console.log('Doi ');
            }
        }
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 20:51:46 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:51:46 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:51:46 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:51:46 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:51:46 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:51:46 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:51:46 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:51:46 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:51:46 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:51:46 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:55:10 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:55:10 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        function wait(ms){
            return new Promise(resovlve=>setTimeout(resovlve,ms));
        };
        async function waitForNewId(){
            while(new_id_string.length===0){
                console.log('Doi ');
                await wait(1000);
            }
            alert('hahs');
        };
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 20:55:11 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:55:11 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:55:11 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:55:11 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:55:11 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:55:11 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:55:11 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:55:11 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:55:11 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:55:11 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:55:50 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:55:50 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
alert('haha')
        function wait(ms){
            return new Promise(resovlve=>setTimeout(resovlve,ms));
        };
        async function waitForNewId(){
            while(new_id_string.length===0){
                console.log('Doi ');
                await wait(1000);
            }
            alert('hahs');
        };
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 20:55:51 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:55:51 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:55:51 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:55:51 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:55:51 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:55:51 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:55:51 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:55:51 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:55:51 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:55:51 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 20:57:03 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 20:57:03 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }

    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        function wait(ms){
            return new Promise(resovlve=>setTimeout(resovlve,ms));
        };
        async function waitForNewId(){
            while(new_id_string.length===0){
                console.log('Doi ');
                await wait(1000);
            }
            alert('hahs');
        };
        waitForNewId();
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 20:57:03 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:57:03 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:57:03 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:57:03 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 20:57:03 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:57:03 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 20:57:03 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:57:03 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 20:57:04 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 20:57:04 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 21:06:14 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:06:14 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    // function xu ly khi nguoi dung chon 
    function pick(new_id){
        exchange_div.onclick = function(){
            var result = confirm('Ban da chac chan');
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    new_id
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 21:06:15 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:06:15 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:06:15 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:06:15 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:06:15 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:06:15 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:06:15 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:06:15 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 21:06:15 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:06:15 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 21:07:07 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:07:07 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    // function xu ly khi nguoi dung chon 
    function pick(){
        exchange_div.onclick = function(){
            var result = confirm('Ban da chac chan');
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    pick();
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 21:07:08 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:07:08 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:07:08 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:07:08 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:07:08 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:07:08 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:07:08 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:07:08 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 21:07:08 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:07:08 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 21:08:24 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:08:24 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        exchange_div.onclick = function(){
            var result = confirm('Ban da chac chan');
            if(result){
                alert(new_id_string);
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 21:08:25 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:08:25 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:08:25 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:08:25 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:08:25 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:08:25 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:08:25 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:08:25 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 21:08:25 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:08:25 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 21:16:34 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:16:34 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function exchange
    function exhange() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        exchange_div.onclick = function(){
            var result = confirm('Ban da chac chan');
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 21:16:35 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:16:35 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:16:35 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:16:35 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:16:35 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:16:35 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:16:35 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:16:35 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 21:16:35 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:16:35 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 21:19:04 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:19:04 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function exchange
    function exhange() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            fetch(`/ticket/${old_id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            alert(ticket.value);
        })
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        exchange_div.onclick = function(){
            var result = confirm('Ban da chac chan');
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 21:19:05 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:19:05 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:19:05 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:19:05 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:19:05 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:19:05 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:19:05 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:19:05 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 21:19:05 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:19:05 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 21:19:10 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:19:10 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Wed Jan  3 21:19:19 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:19:19 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function exchange
    function exhange() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            fetch(`/ticket/${old_id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[1];
            alert(ticket.value);
        })
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        exchange_div.onclick = function(){
            var result = confirm('Ban da chac chan');
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 21:19:20 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:19:20 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:19:20 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:19:20 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:19:21 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:19:21 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:19:21 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:19:21 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 21:19:21 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:19:21 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 21:19:25 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:19:25 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Wed Jan  3 21:21:27 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:21:27 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function exchange
    function exhange() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            fetch(`/ticket/${old_id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            alert(ticket[1]);
        })
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        exchange_div.onclick = function(){
            var result = confirm('Ban da chac chan');
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 21:21:28 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:21:28 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:21:28 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:21:28 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:21:28 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:21:28 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:21:28 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:21:28 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 21:21:28 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:21:28 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 21:21:33 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:21:33 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Wed Jan  3 21:22:05 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Wed Jan  3 21:22:05 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "block");
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    </script>
</html>


Wed Jan  3 21:22:05 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:05 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:22:05 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:05 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:22:05 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:05 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:22:05 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:05 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 21:22:07 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:22:07 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function exchange
    function exhange() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            fetch(`/ticket/${old_id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            alert(ticket[1]);
        })
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        exchange_div.onclick = function(){
            var result = confirm('Ban da chac chan');
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 21:22:07 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:07 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:22:07 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:07 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:22:07 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:07 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:22:07 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:07 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 21:22:07 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:07 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 21:22:10 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:22:10 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <body>
        <h1><span id="username"></span>'s tickets</h1>


        <a href="http://localhost:8001">home</a>
        <a href="http://localhost:8001/inventory" class="nav">inventory</a>
        <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

        <div>money: <span id="money"></span></div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        const username = localStorage.getItem("username");
        if (username == null || username == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Wed Jan  3 21:22:10 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:10 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:22:10 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:10 2024

HTTP/1.1 200 OK

#tickets {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Wed Jan  3 21:22:10 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:10 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-22", "time": "08:30", "airline": "Bamboo Airways", "ticket_id": "6", "seat": "6", "price": "120.99"}]


Wed Jan  3 21:22:10 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:10 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 21:22:10 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:10 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "9377.26", "type": "0"}]


Wed Jan  3 21:22:11 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:22:11 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');

        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                 
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Wed Jan  3 21:22:12 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:12 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Wed Jan  3 21:22:21 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:22:21 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <body>
        <div id="ticket-info"></div>
        <div>
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');

        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const ticketInfo = document.getElementById("ticket-info");
            for (let key in ticket) {
                const div = document.createElement("div");
                div.className = "ticket-info-column";
                div.innerHTML = ticket[key];
                ticketInfo.appendChild(div);
                console.log(typeof ticket[key]);
            }
                
                 
                 
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });
    </script>
    
</html>


Wed Jan  3 21:22:21 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:22:21 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Wed Jan  3 21:23:21 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:23:21 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Wed Jan  3 21:23:23 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:23:23 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function exchange
    function exhange() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            fetch(`/ticket/${old_id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            alert(ticket['username']);
        })
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        exchange_div.onclick = function(){
            var result = confirm('Ban da chac chan');
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 21:23:24 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:23:24 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:23:24 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:23:24 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:23:24 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:23:24 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:23:24 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:23:24 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 21:23:24 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:23:24 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 21:23:29 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:23:29 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Wed Jan  3 21:23:42 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:23:42 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function exchange
    function exhange() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            fetch(`/ticket/${old_id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            alert(data);
        })
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        exchange_div.onclick = function(){
            var result = confirm('Ban da chac chan');
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 21:23:42 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:23:42 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:23:42 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:23:42 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:23:43 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:23:43 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:23:43 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:23:43 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 21:23:43 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:23:43 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 21:23:47 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:23:47 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Wed Jan  3 21:24:12 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:24:12 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function exchange
    function exhange() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            fetch(`/ticket/${old_id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)[0];
            alert(typeof data);
        })
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        exchange_div.onclick = function(){
            var result = confirm('Ban da chac chan');
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 21:24:13 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:24:13 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:24:13 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:24:13 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:24:13 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:24:13 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:24:13 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:24:13 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 21:24:13 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:24:13 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 21:24:18 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:24:18 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Wed Jan  3 21:26:26 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:26:26 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function exchange
    function exhange() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            fetch(`/ticket/${old_id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = data.split(',');
            console.log(ticket);
        })
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        exchange_div.onclick = function(){
            var result = confirm('Ban da chac chan');
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 21:26:26 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:26:26 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:26:26 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:26:26 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:26:27 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:26:27 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:26:27 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:26:27 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 21:26:27 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:26:27 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 21:26:34 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:26:34 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Wed Jan  3 21:28:32 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:28:32 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function exchange
    function exhange() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            fetch(`/ticket/${old_id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)
            console.log(ticket);
        })
            let number = document.getElementById("number").value;
            let expirationDate = document.getElementById("expiration-date").value;
            let securityCode = document.getElementById("security-code").value;
            let fullName = document.getElementById("full-name").value;
            console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        exchange_div.onclick = function(){
            var result = confirm('Ban da chac chan');
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 21:28:32 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:28:32 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:28:32 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:28:32 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:28:32 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:28:32 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:28:32 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:28:32 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 21:28:32 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:28:32 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 21:28:39 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:28:39 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Wed Jan  3 21:29:02 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:29:02 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function exchange
    function exhange() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            fetch(`/ticket/${old_id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)
            console.log(ticket);
        })
            // let number = document.getElementById("number").value;
            // let expirationDate = document.getElementById("expiration-date").value;
            // let securityCode = document.getElementById("security-code").value;
            // let fullName = document.getElementById("full-name").value;
            // console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            window.location.replace("http://localhost:8001/notifications");
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        exchange_div.onclick = function(){
            var result = confirm('Ban da chac chan');
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 21:29:02 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:29:02 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:29:02 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:29:02 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:29:03 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:29:03 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:29:03 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:29:03 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 21:29:03 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:29:03 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 21:29:08 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:29:08 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Wed Jan  3 21:29:52 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:29:52 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function exchange
    function exhange() {
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            fetch(`/ticket/${old_id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)
            console.log(ticket);
        })
            // let number = document.getElementById("number").value;
            // let expirationDate = document.getElementById("expiration-date").value;
            // let securityCode = document.getElementById("security-code").value;
            // let fullName = document.getElementById("full-name").value;
            // console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            // const requestOptionsOwn = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            // }

            // const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            // const date = new Date();
            // const dateString = date.toISOString().split('T')[0];
            // const timeString = date.toLocaleTimeString('en-US', {
            //     hour12: false,
            //     hour: "numeric",
            //     minute: "numeric"
            // });

            // const requestOptionsNotification = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            // }
            
            // fetch("/own", requestOptionsOwn)
            // .then(response => {
            //     return(response.status);
            // })
            // .then(status => {
            //     if (status == 200) {
            //         fetch("/notification", requestOptionsNotification)
            //         .then(response => {
            //             return(response.status);
            //         })
            //         .then(status => {
            //             if (status == 200) {
            //                 alert("You have a new notification!");
            //                 window.location.replace("http://localhost:8001/notifications");
            //             }
            //         })
            //     }
            //     else {
            //         alert("Error");
            //     }
            // })
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        exchange_div.onclick = function(){
            var result = confirm('Ban da chac chan');
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 21:29:53 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:29:53 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:29:53 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:29:53 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:29:53 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:29:53 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:29:53 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:29:53 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 21:29:53 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:29:53 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 21:29:58 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:29:58 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Wed Jan  3 21:36:31 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:36:31 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function exchange
    function exhange() {
         let number ;
             let expirationDate ;
             let securityCode ;
        let fullName ;
         console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            fetch(`/own/${old_id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data);
            console.log(ticket);
            
        })
            
            
            const requestOptionsOwn = {
                method: "GET",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            // const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            // const date = new Date();
            // const dateString = date.toISOString().split('T')[0];
            // const timeString = date.toLocaleTimeString('en-US', {
            //     hour12: false,
            //     hour: "numeric",
            //     minute: "numeric"
            // });

            // const requestOptionsNotification = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            // }
            
            // fetch("/own", requestOptionsOwn)
            // .then(response => {
            //     return(response.status);
            // })
            // .then(status => {
            //     if (status == 200) {
            //         fetch("/notification", requestOptionsNotification)
            //         .then(response => {
            //             return(response.status);
            //         })
            //         .then(status => {
            //             if (status == 200) {
            //                 alert("You have a new notification!");
            //                 window.location.replace("http://localhost:8001/notifications");
            //             }
            //         })
            //     }
            //     else {
            //         alert("Error");
            //     }
            // })
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        exchange_div.onclick = function(){
            var result = confirm('Ban da chac chan');
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 21:36:32 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:36:32 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:36:32 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:36:32 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:36:32 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:36:32 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:36:32 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:36:32 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 21:36:32 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:36:32 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 21:36:36 2024

GET /own/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:36:36 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 21:36:56 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 21:36:56 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function exchange
    function exhange() {
         let number ;
             let expirationDate ;
             let securityCode ;
        let fullName ;
         console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            const username = localStorage.getItem("username");
            if (username == null) {
                window.location = "http://localhost:8001/login";
                return;
            }
            fetch(`/own/${old_id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data);
            console.log(ticket);
            
        })
            
            
            // const requestOptionsOwn = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&ticket_id=${id}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            // }

            // const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            // const date = new Date();
            // const dateString = date.toISOString().split('T')[0];
            // const timeString = date.toLocaleTimeString('en-US', {
            //     hour12: false,
            //     hour: "numeric",
            //     minute: "numeric"
            // });

            // const requestOptionsNotification = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            // }
            
            // fetch("/own", requestOptionsOwn)
            // .then(response => {
            //     return(response.status);
            // })
            // .then(status => {
            //     if (status == 200) {
            //         fetch("/notification", requestOptionsNotification)
            //         .then(response => {
            //             return(response.status);
            //         })
            //         .then(status => {
            //             if (status == 200) {
            //                 alert("You have a new notification!");
            //                 window.location.replace("http://localhost:8001/notifications");
            //             }
            //         })
            //     }
            //     else {
            //         alert("Error");
            //     }
            // })
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        exchange_div.onclick = function(){
            var result = confirm('Ban da chac chan');
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 21:36:56 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:36:56 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:36:56 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:36:56 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 21:36:57 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:36:57 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 21:36:57 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:36:57 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 21:36:57 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:36:57 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 21:37:06 2024

GET /own/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 21:37:06 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 22:10:51 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 22:10:51 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function ownOldToNew
    function ownOldToNew(){
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
        let number ;
        let expirationDate ;
        let securityCode ;
        let fullName ;

        fetch(`/own/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)
            console.log(ticket);
        });
            
            // console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            // const requestOptionsOwn = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&ticket_id=${new_id_string}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            // }

            // const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            // const date = new Date();
            // const dateString = date.toISOString().split('T')[0];
            // const timeString = date.toLocaleTimeString('en-US', {
            //     hour12: false,
            //     hour: "numeric",
            //     minute: "numeric"
            // });

            // const requestOptionsNotification = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            // }
            
            // fetch("/own", requestOptionsOwn)
            // .then(response => {
            //     return(response.status);
            // })
            // .then(status => {
            //     if (status == 200) {
            //         fetch("/notification", requestOptionsNotification)
            //         .then(response => {
            //             return(response.status);
            //         })
            //         .then(status => {
            //             if (status == 200) {
            //                 alert("You have a new notification!");
            //                 window.location.replace("http://localhost:8001/notifications");
            //             }
            //         })
            //     }
            //     else {
            //         alert("Error");
            //     }
            // })
    }
    function deleteOld(){

    }
    //function exchange
    function exhange() {
        ownOldToNew();
        deleteOld();
        
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        exchange_div.onclick = function(){
            var result = confirm('Ban da chac chan');
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 22:10:51 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:10:51 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 22:10:51 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:10:51 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 22:10:52 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:10:52 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 22:10:52 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:10:52 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 22:10:52 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:10:52 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 22:10:57 2024

GET /own/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:10:57 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 22:11:39 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 22:11:39 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function ownOldToNew
    function ownOldToNew(){
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
        let number ;
        let expirationDate ;
        let securityCode ;
        let fullName ;

        fetch(`/own/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)
            console.log(ticket);
        });
            
            // console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            // const requestOptionsOwn = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&ticket_id=${new_id_string}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            // }

            // const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            // const date = new Date();
            // const dateString = date.toISOString().split('T')[0];
            // const timeString = date.toLocaleTimeString('en-US', {
            //     hour12: false,
            //     hour: "numeric",
            //     minute: "numeric"
            // });

            // const requestOptionsNotification = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            // }
            
            // fetch("/own", requestOptionsOwn)
            // .then(response => {
            //     return(response.status);
            // })
            // .then(status => {
            //     if (status == 200) {
            //         fetch("/notification", requestOptionsNotification)
            //         .then(response => {
            //             return(response.status);
            //         })
            //         .then(status => {
            //             if (status == 200) {
            //                 alert("You have a new notification!");
            //                 window.location.replace("http://localhost:8001/notifications");
            //             }
            //         })
            //     }
            //     else {
            //         alert("Error");
            //     }
            // })
    }
    function deleteOld(){

    }
    //function exchange
    function exhange() {
        ownOldToNew();
        deleteOld();
        
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        exchange_div.onclick = function(){
            var result = confirm('Ban da chac chan');
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 22:11:39 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:11:39 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 22:11:39 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:11:39 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 22:11:40 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:11:40 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 22:11:40 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:11:40 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 22:11:40 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:11:40 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 22:11:44 2024

GET /own/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:11:44 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 22:18:20 2024

GET /own/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:18:20 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 22:18:21 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 22:18:21 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function ownOldToNew
    function ownOldToNew(){
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
        let number ;
        let expirationDate ;
        let securityCode ;
        let fullName ;

        fetch(`/own/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)
            console.log(ticket);
        });
            
            // console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            // const requestOptionsOwn = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&ticket_id=${new_id_string}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            // }

            // const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            // const date = new Date();
            // const dateString = date.toISOString().split('T')[0];
            // const timeString = date.toLocaleTimeString('en-US', {
            //     hour12: false,
            //     hour: "numeric",
            //     minute: "numeric"
            // });

            // const requestOptionsNotification = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            // }
            
            // fetch("/own", requestOptionsOwn)
            // .then(response => {
            //     return(response.status);
            // })
            // .then(status => {
            //     if (status == 200) {
            //         fetch("/notification", requestOptionsNotification)
            //         .then(response => {
            //             return(response.status);
            //         })
            //         .then(status => {
            //             if (status == 200) {
            //                 alert("You have a new notification!");
            //                 window.location.replace("http://localhost:8001/notifications");
            //             }
            //         })
            //     }
            //     else {
            //         alert("Error");
            //     }
            // })
    }
    function deleteOld(){

    }
    //function exchange
    function exhange() {
        ownOldToNew();
        deleteOld();
        
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        let ticket;
        fetch(`/ticket/${new_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
             ticket = JSON.parse(data)
        })
        exchange_div.onclick = function(){
            var result = confirm('Ban da chac chan');
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 22:18:21 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:18:21 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 22:18:21 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:18:21 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 22:18:22 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:18:22 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 22:18:22 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:18:22 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 22:18:22 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:18:22 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 22:18:31 2024

GET /ticket/33 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:18:31 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}]


Wed Jan  3 22:18:33 2024

GET /own/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:18:33 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 22:19:57 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 22:19:57 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function ownOldToNew
    function ownOldToNew(){
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
        let number ;
        let expirationDate ;
        let securityCode ;
        let fullName ;

        fetch(`/own/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)
            console.log(ticket);
        });
            
            // console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            // const requestOptionsOwn = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&ticket_id=${new_id_string}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            // }

            // const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            // const date = new Date();
            // const dateString = date.toISOString().split('T')[0];
            // const timeString = date.toLocaleTimeString('en-US', {
            //     hour12: false,
            //     hour: "numeric",
            //     minute: "numeric"
            // });

            // const requestOptionsNotification = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            // }
            
            // fetch("/own", requestOptionsOwn)
            // .then(response => {
            //     return(response.status);
            // })
            // .then(status => {
            //     if (status == 200) {
            //         fetch("/notification", requestOptionsNotification)
            //         .then(response => {
            //             return(response.status);
            //         })
            //         .then(status => {
            //             if (status == 200) {
            //                 alert("You have a new notification!");
            //                 window.location.replace("http://localhost:8001/notifications");
            //             }
            //         })
            //     }
            //     else {
            //         alert("Error");
            //     }
            // })
    }
    function deleteOld(){

    }
    //function exchange
    function exhange() {
        ownOldToNew();
        deleteOld();
        
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        let ticket;
        fetch(`/ticket/${new_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
             ticket = JSON.parse(data)
        })
        exchange_div.onclick = function(){
            var result = confirm(`${ticket} Ban da chac chan`);
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 22:19:57 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:19:57 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 22:19:57 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:19:57 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 22:19:58 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:19:58 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 22:19:58 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:19:58 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 22:19:58 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:19:58 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 22:19:59 2024

GET /ticket/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:19:59 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}]


Wed Jan  3 22:21:00 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 22:21:00 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function ownOldToNew
    function ownOldToNew(){
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
        let number ;
        let expirationDate ;
        let securityCode ;
        let fullName ;

        fetch(`/own/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)
            console.log(ticket);
        });
            
            // console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            // const requestOptionsOwn = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&ticket_id=${new_id_string}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            // }

            // const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            // const date = new Date();
            // const dateString = date.toISOString().split('T')[0];
            // const timeString = date.toLocaleTimeString('en-US', {
            //     hour12: false,
            //     hour: "numeric",
            //     minute: "numeric"
            // });

            // const requestOptionsNotification = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            // }
            
            // fetch("/own", requestOptionsOwn)
            // .then(response => {
            //     return(response.status);
            // })
            // .then(status => {
            //     if (status == 200) {
            //         fetch("/notification", requestOptionsNotification)
            //         .then(response => {
            //             return(response.status);
            //         })
            //         .then(status => {
            //             if (status == 200) {
            //                 alert("You have a new notification!");
            //                 window.location.replace("http://localhost:8001/notifications");
            //             }
            //         })
            //     }
            //     else {
            //         alert("Error");
            //     }
            // })
    }
    function deleteOld(){

    }
    //function exchange
    function exhange() {
        ownOldToNew();
        deleteOld();
        
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        let ticket;
        fetch(`/ticket/${new_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
             ticket = JSON.parse(data)
             alert(ticket);
        })
        exchange_div.onclick = function(){
            var result = confirm(`${ticket} Ban da chac chan`);
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 22:21:01 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin


Wed Jan  3 22:21:01 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function ownOldToNew
    function ownOldToNew(){
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
        let number ;
        let expirationDate ;
        let securityCode ;
        let fullName ;

        fetch(`/own/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)
            console.log(ticket);
        });
            
            // console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            // const requestOptionsOwn = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&ticket_id=${new_id_string}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            // }

            // const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            // const date = new Date();
            // const dateString = date.toISOString().split('T')[0];
            // const timeString = date.toLocaleTimeString('en-US', {
            //     hour12: false,
            //     hour: "numeric",
            //     minute: "numeric"
            // });

            // const requestOptionsNotification = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            // }
            
            // fetch("/own", requestOptionsOwn)
            // .then(response => {
            //     return(response.status);
            // })
            // .then(status => {
            //     if (status == 200) {
            //         fetch("/notification", requestOptionsNotification)
            //         .then(response => {
            //             return(response.status);
            //         })
            //         .then(status => {
            //             if (status == 200) {
            //                 alert("You have a new notification!");
            //                 window.location.replace("http://localhost:8001/notifications");
            //             }
            //         })
            //     }
            //     else {
            //         alert("Error");
            //     }
            // })
    }
    function deleteOld(){

    }
    //function exchange
    function exhange() {
        ownOldToNew();
        deleteOld();
        
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        let ticket;
        fetch(`/ticket/${new_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
             ticket = JSON.parse(data)
             alert(ticket);
        })
        exchange_div.onclick = function(){
            var result = confirm(`${ticket} Ban da chac chan`);
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 22:21:01 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:21:01 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 22:21:01 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:21:01 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 22:21:01 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:21:01 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 22:21:01 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:21:01 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 22:21:01 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:21:01 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 22:21:03 2024

GET /ticket/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:21:03 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}]


Wed Jan  3 22:21:47 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 22:21:47 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function ownOldToNew
    function ownOldToNew(){
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
        let number ;
        let expirationDate ;
        let securityCode ;
        let fullName ;

        fetch(`/own/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)
            console.log(ticket);
        });
            
            // console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            // const requestOptionsOwn = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&ticket_id=${new_id_string}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            // }

            // const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            // const date = new Date();
            // const dateString = date.toISOString().split('T')[0];
            // const timeString = date.toLocaleTimeString('en-US', {
            //     hour12: false,
            //     hour: "numeric",
            //     minute: "numeric"
            // });

            // const requestOptionsNotification = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            // }
            
            // fetch("/own", requestOptionsOwn)
            // .then(response => {
            //     return(response.status);
            // })
            // .then(status => {
            //     if (status == 200) {
            //         fetch("/notification", requestOptionsNotification)
            //         .then(response => {
            //             return(response.status);
            //         })
            //         .then(status => {
            //             if (status == 200) {
            //                 alert("You have a new notification!");
            //                 window.location.replace("http://localhost:8001/notifications");
            //             }
            //         })
            //     }
            //     else {
            //         alert("Error");
            //     }
            // })
    }
    function deleteOld(){

    }
    //function exchange
    function exhange() {
        ownOldToNew();
        deleteOld();
        
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        let ticket;
        fetch(`/ticket/${new_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
             ticket = JSON.parse(data)
             console.log(ticket);
        })
        exchange_div.onclick = function(){
            var result = confirm(`${ticket} Ban da chac chan`);
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 22:21:47 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:21:47 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 22:21:47 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:21:47 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 22:21:48 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:21:48 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 22:21:48 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:21:48 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 22:21:48 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:21:48 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 22:21:58 2024

GET /ticket/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:21:58 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}]


Wed Jan  3 22:23:28 2024

GET /own/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:23:28 2024

HTTP/1.1 404 Not Found

<!DOCTYPE html>
<html>
    <body>
        <h1>404 not found</h1>
    </body>
</html>


Wed Jan  3 22:25:26 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 22:25:26 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function ownOldToNew
    function ownOldToNew(){
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
        let number ;
        let expirationDate ;
        let securityCode ;
        let fullName ;

        fetch(`/own/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)
            console.log(ticket);
        });
            
            // console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            // const requestOptionsOwn = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&ticket_id=${new_id_string}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            // }

            // const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            // const date = new Date();
            // const dateString = date.toISOString().split('T')[0];
            // const timeString = date.toLocaleTimeString('en-US', {
            //     hour12: false,
            //     hour: "numeric",
            //     minute: "numeric"
            // });

            // const requestOptionsNotification = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            // }
            
            // fetch("/own", requestOptionsOwn)
            // .then(response => {
            //     return(response.status);
            // })
            // .then(status => {
            //     if (status == 200) {
            //         fetch("/notification", requestOptionsNotification)
            //         .then(response => {
            //             return(response.status);
            //         })
            //         .then(status => {
            //             if (status == 200) {
            //                 alert("You have a new notification!");
            //                 window.location.replace("http://localhost:8001/notifications");
            //             }
            //         })
            //     }
            //     else {
            //         alert("Error");
            //     }
            // })
    }
    function deleteOld(){

    }
    //function exchange
    function exhange() {
        ownOldToNew();
        deleteOld();
        
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        let ticket;
        
        exchange_div.onclick = function(){
            var result = confirm(`${ticket} Ban da chac chan`);
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    fetch(`/ticket/${new_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
             ticket = JSON.parse(data)
             console.log(ticket);
        })
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 22:25:27 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:25:27 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 22:25:27 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:25:27 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 22:25:27 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:25:27 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 22:25:27 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:25:27 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 22:25:27 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:25:27 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 22:25:29 2024

GET /ticket/25 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:25:29 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}]


Wed Jan  3 22:25:44 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 22:25:44 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function ownOldToNew
    function ownOldToNew(){
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
        let number ;
        let expirationDate ;
        let securityCode ;
        let fullName ;

        fetch(`/own/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)
            console.log(ticket);
        });
            
            // console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            // const requestOptionsOwn = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&ticket_id=${new_id_string}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            // }

            // const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            // const date = new Date();
            // const dateString = date.toISOString().split('T')[0];
            // const timeString = date.toLocaleTimeString('en-US', {
            //     hour12: false,
            //     hour: "numeric",
            //     minute: "numeric"
            // });

            // const requestOptionsNotification = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            // }
            
            // fetch("/own", requestOptionsOwn)
            // .then(response => {
            //     return(response.status);
            // })
            // .then(status => {
            //     if (status == 200) {
            //         fetch("/notification", requestOptionsNotification)
            //         .then(response => {
            //             return(response.status);
            //         })
            //         .then(status => {
            //             if (status == 200) {
            //                 alert("You have a new notification!");
            //                 window.location.replace("http://localhost:8001/notifications");
            //             }
            //         })
            //     }
            //     else {
            //         alert("Error");
            //     }
            // })
    }
    function deleteOld(){

    }
    //function exchange
    function exhange() {
        ownOldToNew();
        deleteOld();
        
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        let ticket;
        
        exchange_div.onclick = function(){
            var result = confirm(`${ticket} Ban da chac chan`);
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    fetch(`/ticket/${new_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
             ticket = JSON.parse(data)
             console.log(data);
        })
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 22:25:44 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:25:44 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 22:25:44 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:25:44 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 22:25:45 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:25:45 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 22:25:45 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:25:45 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 22:25:45 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:25:45 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 22:25:46 2024

GET /ticket/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:25:46 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}]


Wed Jan  3 22:26:43 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 22:26:43 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function ownOldToNew
    function ownOldToNew(){
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
        let number ;
        let expirationDate ;
        let securityCode ;
        let fullName ;

        fetch(`/own/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)
            console.log(ticket);
        });
            
            // console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            // const requestOptionsOwn = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&ticket_id=${new_id_string}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            // }

            // const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            // const date = new Date();
            // const dateString = date.toISOString().split('T')[0];
            // const timeString = date.toLocaleTimeString('en-US', {
            //     hour12: false,
            //     hour: "numeric",
            //     minute: "numeric"
            // });

            // const requestOptionsNotification = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            // }
            
            // fetch("/own", requestOptionsOwn)
            // .then(response => {
            //     return(response.status);
            // })
            // .then(status => {
            //     if (status == 200) {
            //         fetch("/notification", requestOptionsNotification)
            //         .then(response => {
            //             return(response.status);
            //         })
            //         .then(status => {
            //             if (status == 200) {
            //                 alert("You have a new notification!");
            //                 window.location.replace("http://localhost:8001/notifications");
            //             }
            //         })
            //     }
            //     else {
            //         alert("Error");
            //     }
            // })
    }
    function deleteOld(){

    }
    //function exchange
    function exhange() {
        ownOldToNew();
        deleteOld();
        
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        let ticket;
        
        exchange_div.onclick = function(){
            var result = confirm(`${ticket} Ban da chac chan`);
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    fetch(`/ticket/${new_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
             ticket = JSON.parse(data)
             console.log(data);
        })
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 22:26:44 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:26:44 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 22:26:44 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:26:44 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 22:26:44 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:26:44 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 22:26:44 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:26:44 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 22:26:44 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:26:44 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 22:26:46 2024

GET /ticket/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:26:46 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}]


Wed Jan  3 22:27:09 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 22:27:09 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function ownOldToNew
    function ownOldToNew(){
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
        let number ;
        let expirationDate ;
        let securityCode ;
        let fullName ;

        fetch(`/own/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)
            console.log(ticket);
        });
            
            // console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            // const requestOptionsOwn = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&ticket_id=${new_id_string}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            // }

            // const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            // const date = new Date();
            // const dateString = date.toISOString().split('T')[0];
            // const timeString = date.toLocaleTimeString('en-US', {
            //     hour12: false,
            //     hour: "numeric",
            //     minute: "numeric"
            // });

            // const requestOptionsNotification = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            // }
            
            // fetch("/own", requestOptionsOwn)
            // .then(response => {
            //     return(response.status);
            // })
            // .then(status => {
            //     if (status == 200) {
            //         fetch("/notification", requestOptionsNotification)
            //         .then(response => {
            //             return(response.status);
            //         })
            //         .then(status => {
            //             if (status == 200) {
            //                 alert("You have a new notification!");
            //                 window.location.replace("http://localhost:8001/notifications");
            //             }
            //         })
            //     }
            //     else {
            //         alert("Error");
            //     }
            // })
    }
    function deleteOld(){

    }
    //function exchange
    function exhange() {
        ownOldToNew();
        deleteOld();
        
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        let ticket;
        
        exchange_div.onclick = function(){
            var result = confirm(`${ticket} Ban da chac chan`);
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    fetch(`/ticket/${new_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
             ticket = JSON.parse(data)
             console.log(ticket);
        })
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 22:27:10 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:27:10 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 22:27:10 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:27:10 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 22:27:10 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:27:10 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 22:27:10 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:27:10 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 22:27:10 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:27:10 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 22:27:14 2024

GET /ticket/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:27:14 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}]


Wed Jan  3 22:28:13 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 22:28:13 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function ownOldToNew
    function ownOldToNew(){
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
        let number ;
        let expirationDate ;
        let securityCode ;
        let fullName ;

        fetch(`/own/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)
            console.log(ticket);
        });
            
            // console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            // const requestOptionsOwn = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&ticket_id=${new_id_string}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            // }

            // const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            // const date = new Date();
            // const dateString = date.toISOString().split('T')[0];
            // const timeString = date.toLocaleTimeString('en-US', {
            //     hour12: false,
            //     hour: "numeric",
            //     minute: "numeric"
            // });

            // const requestOptionsNotification = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            // }
            
            // fetch("/own", requestOptionsOwn)
            // .then(response => {
            //     return(response.status);
            // })
            // .then(status => {
            //     if (status == 200) {
            //         fetch("/notification", requestOptionsNotification)
            //         .then(response => {
            //             return(response.status);
            //         })
            //         .then(status => {
            //             if (status == 200) {
            //                 alert("You have a new notification!");
            //                 window.location.replace("http://localhost:8001/notifications");
            //             }
            //         })
            //     }
            //     else {
            //         alert("Error");
            //     }
            // })
    }
    function deleteOld(){

    }
    //function exchange
    function exhange() {
        ownOldToNew();
        deleteOld();
        
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        let ticket;
        
        exchange_div.onclick = function(){
            var result = confirm(`${ticket} Ban da chac chan`);
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    fetch(`/ticket/${new_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
             var ticket = JSON.parse(data)
             console.log(ticket);
        })
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 22:28:14 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:28:14 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 22:28:14 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:28:14 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 22:28:14 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:28:14 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 22:28:14 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:28:14 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 22:28:14 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:28:14 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 22:28:16 2024

GET /ticket/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:28:16 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}]


Wed Jan  3 22:28:37 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/1
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Wed Jan  3 22:28:37 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
<link rel="stylesheet" href="../static/flight.css">

<body>
    <h1>hello <span id="username"></span></h1>

    <a href="http://localhost:8001">home</a>
    <a href="http://localhost:8001/login" class="auth">login</a>
    <a href="http://localhost:8001/register" class="auth">register</a>
    <a href="http://localhost:8001/inventory" class="nav">inventory</a>
    <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
    <a href="http://localhost:8001" onclick="logout()" class="nav">logout</a>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <div id="exchange"> Exchange </div>
</body>

<script>
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    const old_id = parseInt(old_id_string, 10);
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    // exchange_div.style.display='none';
    exchange_div.className='disable';
// 1. xu ly trang flight cua flow mua ve  
    // hien thi elements tuy thuoc vao trang thai dang nhap
    const username = localStorage.getItem("username");
    const authElements = document.querySelectorAll(".auth");
    const navElements = document.querySelectorAll(".nav");
    if (username != null) {
        document.getElementById("username").innerHTML = username;
        authElements.forEach(item => item.style.display = "none");
        navElements.forEach(item => item.style.display = "block");
    }
    else {
        authElements.forEach(item => item.style.display = "block");
        navElements.forEach(item => item.style.display = "none");
    }

    // xoa data nguoi dung duoc luu trong ls
    function logout() {
        localStorage.clear();
    }
    //function ownOldToNew
    function ownOldToNew(){
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
        let number ;
        let expirationDate ;
        let securityCode ;
        let fullName ;

        fetch(`/own/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const ticket = JSON.parse(data)
            console.log(ticket);
        });
            
            // console.log(`number: ${number}\nexpirationDate: ${expirationDate},\nsecurityCode: ${securityCode}\nfullName: ${fullName}`);
            
            // const requestOptionsOwn = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&ticket_id=${new_id_string}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            // }

            // const content = `Boarding pass confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;

            // const date = new Date();
            // const dateString = date.toISOString().split('T')[0];
            // const timeString = date.toLocaleTimeString('en-US', {
            //     hour12: false,
            //     hour: "numeric",
            //     minute: "numeric"
            // });

            // const requestOptionsNotification = {
            //     method: "POST",
            //     headers: {
            //         "Content-Type": "text/html"
            //     },
            //     body: 
            //         `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            // }
            
            // fetch("/own", requestOptionsOwn)
            // .then(response => {
            //     return(response.status);
            // })
            // .then(status => {
            //     if (status == 200) {
            //         fetch("/notification", requestOptionsNotification)
            //         .then(response => {
            //             return(response.status);
            //         })
            //         .then(status => {
            //             if (status == 200) {
            //                 alert("You have a new notification!");
            //                 window.location.replace("http://localhost:8001/notifications");
            //             }
            //         })
            //     }
            //     else {
            //         alert("Error");
            //     }
            // })
    }
    function deleteOld(){

    }
    //function exchange
    function exhange() {
        ownOldToNew();
        deleteOld();
        
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        let ticket;
        
        exchange_div.onclick = function(){
            var result = confirm(`${ticket} Ban da chac chan`);
            if(result){
                exhange();
            }
            else{
                window.location.reload();
            }
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    fetch(`/ticket/${new_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
             var tickethaha = JSON.parse(data)
             console.log(tickethaha);
        })
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

    fetch(`/unread/${username}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Wed Jan  3 22:28:38 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:28:38 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 22:28:38 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:28:38 2024

HTTP/1.1 200 OK

h1 {
    color: red;
}

#tickets {
    padding: 0;
    width: 100%;
}

ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

a.disabled {
    color: #aaaaaa;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}


Wed Jan  3 22:28:38 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:28:38 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Wed Jan  3 22:28:38 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:28:38 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Wed Jan  3 22:28:38 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:28:38 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Wed Jan  3 22:28:39 2024

GET /ticket/29 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:120.0) Gecko/20100101 Firefox/120.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Wed Jan  3 22:28:39 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}]


