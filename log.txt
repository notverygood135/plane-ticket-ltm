Sun Dec 10 18:57:47 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Sun Dec 10 18:57:47 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="date" name="date" id="date" placeholder="Date">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let date = document.getElementById("date").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, date: ${date}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (date != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(flight.date) == Date.parse(date));
            }

            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                }
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Sun Dec 10 18:57:47 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Sun Dec 10 18:57:47 2023

static/index.cssHTTP/1.1 200 OK




Sun Dec 10 18:57:47 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Sun Dec 10 18:57:47 2023

static/index.cssHTTP/1.1 200 OK




Sun Dec 10 18:57:47 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Sun Dec 10 18:57:47 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-19", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-6-21", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-7-23", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-7-24", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-7-24", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-8-26", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-8-26", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-9-30", "airline": "United"}]


Sun Dec 10 18:59:14 2023

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Sun Dec 10 18:59:14 2023

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <body>
        <h1>hello <span id="username"></span></h1>

        <a href="http://localhost:8001/login" class="auth">login</a>
        <a href="http://localhost:8001/register" class="auth">register</a>
        <a href="http://localhost:8001" onclick="logout()" id="logout">logout</a>

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="date" name="date" id="date" placeholder="Date">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // show elements based on whether the user is logged in or not
        let username = localStorage.getItem("username");
        let authElements = document.querySelectorAll(".auth");
        let logoutElement = document.getElementById("logout");
        if (username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            logoutElement.style.display = "block";
        }
        else {
            authElements.forEach(item => item.style.display = "block");
            logoutElement.style.display = "none";
        }

        // clear user data in local storage
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let date = document.getElementById("date").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, date: ${date}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (date != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(flight.date) == Date.parse(date));
            }

            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // delete all the previous elements before adding new elements
            filteredFlights.forEach(flight => {
                const li = document.createElement("li");
                li.className = "flight";
                for (const key in flight) {
                    const span = document.createElement("span");
                    span.textContent = flight[key];
                    li.appendChild(span);
                }
                ul.appendChild(li);
            });
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Sun Dec 10 18:59:15 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Sun Dec 10 18:59:15 2023

static/index.cssHTTP/1.1 200 OK




Sun Dec 10 18:59:15 2023

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Sun Dec 10 18:59:15 2023

static/index.cssHTTP/1.1 200 OK




Sun Dec 10 18:59:15 2023

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Sun Dec 10 18:59:15 2023

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-19", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-5-20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-6-21", "airline": "VietJet Air"}, {"flight_id": "4", "from": "Hai Phong", "to": "Da Nang", "date": "2024-6-22", "airline": "Bamboo Airways"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-7-23", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-7-24", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-7-24", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-8-26", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-8-26", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-9-30", "airline": "United"}]


