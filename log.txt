Thu Jan  4 15:37:22 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Jan  4 15:37:22 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            
            <div id="navbar_list">
                
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>

            <div class="account">
                <div class="trigger" ><h1>Hello <span id="username"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");

            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        }
        else {
            authElements.forEach(item => item.style.display = "flex");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Jan  4 15:37:23 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:37:23 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan  4 15:37:23 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:37:23 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan  4 15:37:24 2024

GET /unread/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:37:24 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:37:24 2024

GET /user/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:37:24 2024

HTTP/1.1 200 OK

[{"username": "admin", "money": "1.00000000000119e+15", "type": "1"}]


Thu Jan  4 15:37:24 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:37:24 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Jan  4 15:37:29 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan  4 15:37:29 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
<body>
    <div id="navbar">
        <div class="logo">
            <a href="http://localhost:8001">
                <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
            </a>
        </div>
        <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        </div>
        <div class="account">
            <div class="trigger" ><h1>Hello <span id="username"></span></h1>
                <div>Balance: $<span id="money"></span></div>
            
            </div>
            <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

        </div> 
    </div>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <button id="exchange"> Exchange </button>
</body>

<script>
    //navbar
    const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      

        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
           var  fullName=own_data[0]['full_name'];
           const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${new_id_string}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Exchange ticket confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
        fetch(`/own/${old_id_string}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${old_id_string}&money=${+ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {

        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
        
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        
        
        exchange_div.onclick = function(){
         
        fetch(`/ticket/${new_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_new=JSON.parse(data);
             var result = confirm(`${data} Ban da chac chan?`);
             if(result){
                exchange(ticket_new);
            }
            else{
                window.location.reload();
            }
        })
            
           
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Thu Jan  4 15:37:29 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:37:29 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan  4 15:37:29 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:37:29 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan  4 15:37:29 2024

GET /unread/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:37:29 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:37:29 2024

GET /user/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:37:29 2024

HTTP/1.1 200 OK

[{"username": "admin", "money": "1.00000000000119e+15", "type": "1"}]


Thu Jan  4 15:37:29 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:37:29 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Thu Jan  4 15:37:29 2024

GET /unread/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:37:29 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:37:29 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:37:29 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "0"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Thu Jan  4 15:37:30 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan  4 15:37:30 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            
            <div id="navbar_list">
                
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>

            <div class="account">
                <div class="trigger" ><h1>Hello <span id="username"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");

            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        }
        else {
            authElements.forEach(item => item.style.display = "flex");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Jan  4 15:37:31 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:37:31 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan  4 15:37:31 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:37:31 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan  4 15:37:31 2024

GET /unread/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:37:31 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:37:31 2024

GET /user/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:37:31 2024

HTTP/1.1 200 OK

[{"username": "admin", "money": "1.00000000000119e+15", "type": "1"}]


Thu Jan  4 15:37:31 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:37:31 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Jan  4 15:37:44 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan  4 15:37:44 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
<body>
    <div id="navbar">
        <div class="logo">
            <a href="http://localhost:8001">
                <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
            </a>
        </div>
        <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        </div>
        <div class="account">
            <div class="trigger" ><h1>Hello <span id="username"></span></h1>
                <div>Balance: $<span id="money"></span></div>
            
            </div>
            <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

        </div> 
    </div>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <button id="exchange"> Exchange </button>
</body>

<script>
    //navbar
    const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      

        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
           var  fullName=own_data[0]['full_name'];
           const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${new_id_string}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Exchange ticket confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
        fetch(`/own/${old_id_string}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${old_id_string}&money=${+ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {

        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
        
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        
        
        exchange_div.onclick = function(){
         
        fetch(`/ticket/${new_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_new=JSON.parse(data);
             var result = confirm(`${data} Ban da chac chan?`);
             if(result){
                exchange(ticket_new);
            }
            else{
                window.location.reload();
            }
        })
            
           
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Thu Jan  4 15:37:44 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:37:44 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan  4 15:37:44 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:37:44 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan  4 15:37:44 2024

GET /unread/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:37:44 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:37:44 2024

GET /user/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:37:44 2024

HTTP/1.1 200 OK

[{"username": "admin", "money": "1.00000000000119e+15", "type": "1"}]


Thu Jan  4 15:37:45 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:37:45 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Thu Jan  4 15:37:45 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:37:45 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "0"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Thu Jan  4 15:37:45 2024

GET /unread/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:37:45 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:37:59 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan  4 15:37:59 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            
            <div id="navbar_list">
                
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>

            <div class="account">
                <div class="trigger" ><h1>Hello <span id="username"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");

            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        }
        else {
            authElements.forEach(item => item.style.display = "flex");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Jan  4 15:38:00 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:00 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan  4 15:38:00 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:00 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan  4 15:38:01 2024

GET /unread/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:01 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:38:01 2024

GET /user/admin HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:01 2024

HTTP/1.1 200 OK

[{"username": "admin", "money": "1.00000000000119e+15", "type": "1"}]


Thu Jan  4 15:38:01 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:01 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Jan  4 15:38:02 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan  4 15:38:02 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            
            <div id="navbar_list">
                
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>

            <div class="account">
                <div class="trigger" ><h1>Hello <span id="username"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");

            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        }
        else {
            authElements.forEach(item => item.style.display = "flex");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Jan  4 15:38:02 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:02 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan  4 15:38:02 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:02 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan  4 15:38:02 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:02 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Jan  4 15:38:05 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan  4 15:38:05 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <head>
        
        <title>Bootstrap Example</title>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
        <link rel="stylesheet" href="../static/login.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    </head>
   
    <body>

        <section class="h-100 gradient-form" style="background-color: #eee;">
            <div class="container py-5 h-100">
              <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-xl-10">
                  <div class="card rounded-3 text-black">
                    <div class="row g-0">
                      <div class="col-lg-6">
                        <div class="card-body p-md-5 mx-md-4">
          
                          <div class="text-center">
                            <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/lotus.webp"
                              style="width: 185px;" alt="logo">
                            <h4 class="mt-1 mb-5 pb-1">We are The Lotus Team</h4>
                          </div>
          
                          <div>
                            <p>Please login to your account</p>
          
                            <div class="form-outline mb-4">
                              <input type="text" id="username" class="form-control"
                                placeholder="Username" name="username" >
                              <label class="form-label" for="form2Example11">Username</label>
                            </div>
          
                            <div class="form-outline mb-4">
                              <input type="password" id="password" class="form-control" name="password" placeholder="Password" >
                              <label class="form-label" for="form2Example22">Password</label>
                            </div>
          
                            <div class="text-center pt-1 mb-5 pb-1">
                              <button class="btn btn-primary btn-block fa-lg gradient-custom-2 mb-3" type="button" onclick="submit()">Log
                                in</button>
                              <a class="text-muted" href="#!">Forgot password?</a>
                            </div>
          
                            <div class="d-flex align-items-center justify-content-center pb-4">
                              <p class="mb-0 me-2">Don't have an account?</p>
                              <button type="button" class="btn btn-outline-danger""> <a  href="http://localhost:8001/register">Create new account</a></button>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="col-lg-6 d-flex align-items-center gradient-custom-2">
                        <div class="text-white px-3 py-4 p-md-5 mx-md-4">
                          <h4 class="mb-4">We are more than just a company</h4>
                          <p class="small mb-0">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
                            tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud
                            exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </section>
          <!-- <h1>login</h1>
          <input type="text" name="username" id="username" placeholder="Username">
          <input type="password" name="password" id="password" placeholder="Password">
          <button type="button" onclick="submit()">Submit</button> -->
        <script>
          localStorage.removeItem('ticket_id_old');
            function submit() {
              console.log("a");
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "multipart/form-data"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                  console.log(data);
                    if (data[0] != "[") {
                      alert("Invalid username or password");
                      return;
                    }
                    const loggedInUser = JSON.parse(data)[0];
                    if (loggedInUser.type == "1") {
                      window.location.replace("http://localhost:8001/manage/flights");
                    }
                    else if (loggedInUser.type == "0") {
                      window.location.replace("http://localhost:8001");
                    }
                    localStorage.setItem("username", loggedInUser.username);
                })
            }
        </script>
    </body>
</html>


Thu Jan  4 15:38:05 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:05 2024

HTTP/1.1 200 OK

.gradient-custom-2 {
    /* fallback for old browsers */
    background: #fccb90;
    
    /* Chrome 10-25, Safari 5.1-6 */
    background: -webkit-linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);
    
    /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
    background: linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);
    }
    
    @media (min-width: 768px) {
    .gradient-form {
    height: 100vh !important;
    }
    }
    @media (min-width: 769px) {
    .gradient-custom-2 {
    border-top-right-radius: .3rem;
    border-bottom-right-radius: .3rem;
    }
    }


Thu Jan  4 15:38:09 2024

POST /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/login
Content-Type: multipart/form-data
Content-Length: 25
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

username=abc&password=123
Thu Jan  4 15:38:09 2024

HTTP/1.1 200 OK

[{"username": "abc", "password": "123", "money": "6984.585", "type": "0"}]


Thu Jan  4 15:38:09 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan  4 15:38:09 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            
            <div id="navbar_list">
                
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>

            <div class="account">
                <div class="trigger" ><h1>Hello <span id="username"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");

            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        }
        else {
            authElements.forEach(item => item.style.display = "flex");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Jan  4 15:38:09 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:09 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan  4 15:38:09 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:09 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan  4 15:38:10 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:10 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Jan  4 15:38:10 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:10 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Thu Jan  4 15:38:10 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:10 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "6984.585", "type": "0"}]


Thu Jan  4 15:38:12 2024

GET /notifications HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan  4 15:38:12 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/notifications.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>

            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="username"></span></h1></div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">Logout</a></div>

            </div> 
        </div>


        <button onclick="clearNotifications()">Clear</button>
        <ul id="notifications"></ul>
    </body>
    <script>
         //navbar
         const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        

        const notificationsElement = document.getElementById("notifications");

        fetch(`/notification/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const notifications = JSON.parse(data);
            notifications.forEach(notification => {
                const li = document.createElement("li");
                li.className = "notification";
                li.innerText = notification.content;

                const div = document.createElement("div");
                div.className = "datetime";
                div.innerText = `${notification.date} ${notification.time}`;
                li.appendChild(div);
                notificationsElement.appendChild(li);
            });
        })

        fetch(`/read/${username}`, {
            method: "PUT"
        })

        function clearNotifications() {
            fetch(`/notification/${username}`, {
                method: "DELETE",
            })
            .then(response => {
                return(response.text());
            })
            
            notificationsElement.innerText = "";
        }
    </script>
</html>


Thu Jan  4 15:38:12 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:12 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan  4 15:38:12 2024

GET /static/notifications.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:12 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
    
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan  4 15:38:12 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:12 2024

HTTP/1.1 200 OK

[{"count": "1"}]


Thu Jan  4 15:38:12 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:12 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "6984.585", "type": "0"}]


Thu Jan  4 15:38:13 2024

PUT /read/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin
Content-Length: 0


Thu Jan  4 15:38:13 2024

HTTP/1.1 200 OK




Thu Jan  4 15:38:13 2024

GET /notification/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/notifications
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:13 2024

HTTP/1.1 200 OK

[{"username": "abc", "content": "Boarding pass confirmed\nDear abc,\nCongratulations! Your boarding pass for Bamboo Airways, Flight #4, departing on 2024-06-22 at 08:30, from Hai Phong to Da Nang has been secured. Your seat: 5.\nSafe travels!\n\nYour boarding pass number: 5", "date": "2024-01-04", "time": "14:57"}, {"username": "abc", "content": "Dear abc,\nFlight #4, from Hai Phong to Da Nang has been rescheduled to another time:\n08:50, 2024-06-26\nWe apologise for any inconvenience this may cause you\nSafe travels!", "date": "2024-01-04", "time": "15:09"}, {"username": "abc", "content": "", "date": "2024-01-04", "time": "15:11"}]


Thu Jan  4 15:38:15 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/notifications
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan  4 15:38:15 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="username"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        

        //navbar
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        
        
        if (username == null || username == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Thu Jan  4 15:38:15 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:15 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan  4 15:38:15 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:15 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan  4 15:38:16 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:16 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:38:16 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:16 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "6984.585", "type": "0"}]


Thu Jan  4 15:38:16 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:16 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:38:16 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:16 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "6984.585", "type": "0"}]


Thu Jan  4 15:38:16 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:16 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "27", "seat": "8", "price": "101.25"}]


Thu Jan  4 15:38:21 2024

GET /info/27 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan  4 15:38:21 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="username"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        });
    </script>
    
</html>


Thu Jan  4 15:38:22 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/27
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:22 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan  4 15:38:22 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/27
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:22 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan  4 15:38:23 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:23 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:38:23 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:23 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "6984.585", "type": "0"}]


Thu Jan  4 15:38:23 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:23 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:38:23 2024

GET /ticket/27 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:23 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}]


Thu Jan  4 15:38:25 2024

GET /exchange/27 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/27
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan  4 15:38:25 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/exchange.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="username"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>
        <div class="main">
        <div id="ticket-info">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>
  
        </div>
        
    </body>
    <script>
       //navbar
       const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        
        const url = window.location.pathname;
        const id = url.split("/")[2];
        localStorage.setItem('ticket_id_old',id);
        let ticket = {};

        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
        })
        
        // 
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "More";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
    
    </script>
    
</html>


Thu Jan  4 15:38:25 2024

GET /static/exchange.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/27
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:25 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info, #ticket-info{
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan  4 15:38:25 2024

GET /static/exchange.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/27
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:25 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info, #ticket-info{
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan  4 15:38:25 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:25 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:38:26 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:26 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "6984.585", "type": "0"}]


Thu Jan  4 15:38:26 2024

GET /ticket/27 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:26 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}]


Thu Jan  4 15:38:26 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:26 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Jan  4 15:38:26 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/exchange/27
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:26 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:38:32 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/exchange/27
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan  4 15:38:32 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
<body>
    <div id="navbar">
        <div class="logo">
            <a href="http://localhost:8001">
                <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
            </a>
        </div>
        <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        </div>
        <div class="account">
            <div class="trigger" ><h1>Hello <span id="username"></span></h1>
                <div>Balance: $<span id="money"></span></div>
            
            </div>
            <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

        </div> 
    </div>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <button id="exchange"> Exchange </button>
</body>

<script>
    //navbar
    const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      

        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
           var  fullName=own_data[0]['full_name'];
           const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${new_id_string}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Exchange ticket confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
        fetch(`/own/${old_id_string}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${old_id_string}&money=${+ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {

        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
        
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        
        
        exchange_div.onclick = function(){
         
        fetch(`/ticket/${new_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_new=JSON.parse(data);
             var result = confirm(`${data} Ban da chac chan?`);
             if(result){
                exchange(ticket_new);
            }
            else{
                window.location.reload();
            }
        })
            
           
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Thu Jan  4 15:38:32 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:32 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan  4 15:38:32 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:32 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan  4 15:38:32 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:32 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:38:32 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:32 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "6984.585", "type": "0"}]


Thu Jan  4 15:38:32 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:32 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:38:32 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:32 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Thu Jan  4 15:38:32 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:32 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "0"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Thu Jan  4 15:38:41 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:41 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "0"}]


Thu Jan  4 15:38:44 2024

GET /own/27 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:44 2024

HTTP/1.1 200 OK

[{"username": "abc", "ticket_id": "27", "full_name": "", "number": "", "security_code": "", "expiration_date": ""}]


Thu Jan  4 15:38:44 2024

GET /ticket/27 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:44 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "1"}]


Thu Jan  4 15:38:44 2024

POST /own HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Content-Type: text/html
Content-Length: 75
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

username=abc&ticket_id=1&full_name=&number=&security_code=&expiration_date=
Thu Jan  4 15:38:44 2024

HTTP/1.1 200 OK

OK


Thu Jan  4 15:38:44 2024

DELETE /own/27 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Content-Type: text/html
Content-Length: 25
Origin: http://localhost:8001
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin

ticket_id=27&money=101.25
Thu Jan  4 15:38:44 2024

HTTP/1.1 200 OK

OK


Thu Jan  4 15:38:44 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan  4 15:38:44 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="username"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        

        //navbar
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        
        
        if (username == null || username == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Thu Jan  4 15:38:45 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:45 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan  4 15:38:45 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:45 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan  4 15:38:45 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:45 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:38:45 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:45 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "6783.085", "type": "0"}]


Thu Jan  4 15:38:45 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:45 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}]


Thu Jan  4 15:38:45 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:45 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:38:45 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:45 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "6783.085", "type": "0"}]


Thu Jan  4 15:38:50 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan  4 15:38:50 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            
            <div id="navbar_list">
                
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>

            <div class="account">
                <div class="trigger" ><h1>Hello <span id="username"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");

            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        }
        else {
            authElements.forEach(item => item.style.display = "flex");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Jan  4 15:38:50 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:50 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan  4 15:38:50 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:50 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan  4 15:38:51 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:51 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:38:51 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:51 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "6783.085", "type": "0"}]


Thu Jan  4 15:38:51 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:51 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Jan  4 15:38:52 2024

GET /flight/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan  4 15:38:52 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/flight.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
<body>
    <div id="navbar">
        <div class="logo">
            <a href="http://localhost:8001">
                <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
            </a>
        </div>
        <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
        </div>
        <div class="account">
            <div class="trigger" ><h1>Hello <span id="username"></span></h1>
                <div>Balance: $<span id="money"></span></div>
            
            </div>
            <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

        </div> 
    </div>

    <div id="flights-info">
        <div id="flight-info">
            <div class="flight-info-column">Flight: <span id="flight"></span></div>
            <div class="flight-info-column">From: <span id="from"></span></div>
            <div class="flight-info-column">To: <span id="to"></span></div>
            <div class="flight-info-column">Airline: <span id="airline"></span></div>
            <div class="flight-info-column">Date: <span id="date"></span></div>
            <div class="flight-info-column">Time: <span id="time"></span></div>
        </div>
        <ul id="tickets"></ul>
        
    </div>
    <button id="exchange"> Exchange </button>
</body>

<script>
    //navbar
    const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
   
    const url = window.location.pathname;
    const id = url.split("/")[2];
    const old_id_string = localStorage.getItem('ticket_id_old');
    
    let new_id_string='' ;
    const exchange_div=document.querySelector('#exchange');
    let tickets = [];
    let filteredTickets = [];
    exchange_div.style.display='none';
    
// 1. xu ly trang flight cua flow mua ve  
    
    //function ownOldToNew
    function ownOldToNew(ticket){
        const username = localStorage.getItem("username");
        if (username == null) {
            window.location = "http://localhost:8001/login";
            return;
        }
      

        fetch(`/own/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            
            var own_data = JSON.parse(data);

            var number=own_data[0].number;
            var expirationDate=own_data[0]['expiration_date'];
            var securityCode=own_data[0]['security_code'];
           var  fullName=own_data[0]['full_name'];
           const requestOptionsOwn = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&ticket_id=${new_id_string}&full_name=${fullName}&number=${number}&security_code=${securityCode}&expiration_date=${expirationDate}`
            }

            const content = `Exchange ticket confirmed\\nDear ${username},\\nCongratulations! Your boarding pass for ${ticket.airline}, Flight #${ticket.flight_id}, departing on ${ticket.date} at ${ticket.time}, from ${ticket.from} to ${ticket.to} has been secured. Your seat: ${ticket.seat}.\\nSafe travels!\\n\\nYour boarding pass number: ${ticket.ticket_id}`;
    
            const date = new Date();
            const dateString = date.toISOString().split('T')[0];
            const timeString = date.toLocaleTimeString('en-US', {
                hour12: false,
                hour: "numeric",
                minute: "numeric"
            });

            const requestOptionsNotification = {
                method: "POST",
                headers: {
                    "Content-Type": "text/html"
                },
                body: 
                    `username=${username}&content=${content}&date=${dateString}&time=${timeString}`
            }
            
            fetch("/own", requestOptionsOwn)
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    fetch("/notification", requestOptionsNotification)
                    .then(response => {
                        return(response.status);
                    })
                    .then(status => {
                        if (status == 200) {
                            alert("You have a new notification!");
                            
                        }
                    })
                }
                else {
                    alert("Error");
                }
            })
            
        });
            
       
            
            
    }
    function deleteOld(ticket_new){
        fetch(`/ticket/${old_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_old=JSON.parse(data);
            console.log(`3.${old_id_string}`);
        fetch(`/own/${old_id_string}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${old_id_string}&money=${+ticket_old[0].price}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    localStorage.removeItem('ticket_id_old');
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        })
        
       
          

    }
    //function exchange
    function exchange(ticketnew) {

        ownOldToNew(ticketnew);
        deleteOld(ticketnew)
        
        }
    // function xu ly khi nguoi dung chon 
    function pick(new_id_string){
        
        
        exchange_div.onclick = function(){
         
        fetch(`/ticket/${new_id_string}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            console.log(data);
            var ticket_new=JSON.parse(data);
             var result = confirm(`${data} Ban da chac chan?`);
             if(result){
                exchange(ticket_new);
            }
            else{
                window.location.reload();
            }
        })
            
           
        }
    }
    function renderTickets() {
        const ul = document.getElementById("tickets");
        ul.innerHTML = ""; // xoa cac element da co de them tu dau

        filteredTickets.forEach(ticket => {
            const a = document.createElement("a");
            a.className = "ticket";
            const ticketInfo = document.getElementById("ticket-info");
            if (old_id_string!==null) { // neu co old_id 
                a.onclick = function () {
                    new_id_string='';
                    new_id_string=new_id_string+ticket.ticket_id;
                    console.log(ticket.ticket_id);
                    
                    pick(new_id_string);
                    
                }
            } else {
                a.setAttribute("href", `http://localhost:8001/buy/${ticket.ticket_id}`);
            }
            a.textContent = ticket.seat;
            if (ticket.owned == "1") {
                a.className = "disabled";
            }
            ul.appendChild(a);
        });
    }

    fetch(`/flights/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            const flightData = JSON.parse(data)[0];
            document.getElementById("flight").innerText = flightData.flight_id;
            document.getElementById("from").innerText = flightData.from;
            document.getElementById("to").innerText = flightData.to;
            document.getElementById("airline").innerText = flightData.airline;
            document.getElementById("date").innerText = flightData.date;
            document.getElementById("time").innerText = flightData.time;
        })

    fetch(`/tickets/${id}`, {
        method: "GET",
    })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return (response.text());
        })
        .then(data => {
            console.log(data);
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })
//2. xu ly trang flight cua doi ve 
        
        if(old_id_string.length!==null){
            exchange_div.style.display='block';

        }

    

</script>

</html>


Thu Jan  4 15:38:53 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:53 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan  4 15:38:53 2024

GET /static/flight.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:53 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}


/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flight-info {
    margin: 1rem;
}

a {
    text-decoration: none;
}

ul {
    display: grid;
    margin: 1rem;
    width: 50vw;
    height: 20vw;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

ul a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    
}

ul a:hover {
    background: #52a3cc;
    cursor: pointer;
}

a.disabled {
    background: #aaaaaa;
    color: black;
    pointer-events: none;
    cursor: default;
    text-decoration: none;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 1.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}


Thu Jan  4 15:38:53 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:53 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:38:53 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:53 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "6783.085", "type": "0"}]


Thu Jan  4 15:38:53 2024

GET /flights/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:53 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}]


Thu Jan  4 15:38:53 2024

GET /tickets/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:53 2024

HTTP/1.1 200 OK

[{"ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}, {"ticket_id": "2", "flight_id": "1", "seat": "2", "price": "101.25", "owned": "1"}, {"ticket_id": "22", "flight_id": "1", "seat": "3", "price": "100.25", "owned": "1"}, {"ticket_id": "23", "flight_id": "1", "seat": "4", "price": "100.25", "owned": "0"}, {"ticket_id": "24", "flight_id": "1", "seat": "5", "price": "101.21", "owned": "0"}, {"ticket_id": "25", "flight_id": "1", "seat": "6", "price": "101.25", "owned": "0"}, {"ticket_id": "26", "flight_id": "1", "seat": "7", "price": "101.25", "owned": "0"}, {"ticket_id": "27", "flight_id": "1", "seat": "8", "price": "101.25", "owned": "0"}, {"ticket_id": "28", "flight_id": "1", "seat": "9", "price": "101.25", "owned": "0"}, {"ticket_id": "29", "flight_id": "1", "seat": "10", "price": "200.25", "owned": "0"}, {"ticket_id": "30", "flight_id": "1", "seat": "11", "price": "200.25", "owned": "0"}, {"ticket_id": "31", "flight_id": "1", "seat": "12", "price": "200.25", "owned": "0"}, {"ticket_id": "32", "flight_id": "1", "seat": "13", "price": "200.25", "owned": "0"}, {"ticket_id": "33", "flight_id": "1", "seat": "14", "price": "200.25", "owned": "0"}, {"ticket_id": "34", "flight_id": "1", "seat": "15", "price": "200.25", "owned": "0"}, {"ticket_id": "35", "flight_id": "1", "seat": "16", "price": "200.25", "owned": "0"}]


Thu Jan  4 15:38:53 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/flight/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:38:53 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:39:02 2024

GET /inventory HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/flight/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan  4 15:39:02 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/inventory.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>Hello <span id="username"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="tickets-info">
            <div id="tickets-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
            </div>
            <div id="tickets-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
                <span>Ticket</span>
                <span>Seat</span>
                <span>Price</span>
            </div>
            <ul id="tickets"></ul>
        </div>
    </body>
    <script>
        

        //navbar
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        
        
        if (username == null || username == "") {
            window.location = "http://localhost:8001/login"
        }
        document.getElementById("username").innerHTML = username;
        
        let tickets = [];
        let filteredTickets = [];

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredTickets = tickets;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredTickets = filteredTickets.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderTickets();
        }

        function renderTickets() {
            const ul = document.getElementById("tickets");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredTickets.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";                                                                                                                                                                                                                                                                     
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/info/${ticket.ticket_id}`);
                a.innerHTML = "Info";
                li.appendChild(a);                                                                                                                                                                                                            +
                ul.appendChild(li);
            });
        }

        fetch(`/inventory/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            tickets = JSON.parse(data);
            filteredTickets = tickets;
            renderTickets();
        })

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        })

        fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        function logout() {
            localStorage.clear();
        }
    </script>
</html>


Thu Jan  4 15:39:02 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:39:02 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan  4 15:39:02 2024

GET /static/inventory.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:39:02 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#tickets-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#tickets-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #tickets-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr 1fr 2fr 1fr;
}

#tickets-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan  4 15:39:03 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:39:03 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:39:03 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:39:03 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "6783.085", "type": "0"}]


Thu Jan  4 15:39:03 2024

GET /inventory/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:39:03 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "seat": "1", "price": "100.25"}]


Thu Jan  4 15:39:03 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:39:03 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:39:03 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/inventory
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:39:03 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "6783.085", "type": "0"}]


Thu Jan  4 15:39:04 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/inventory
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan  4 15:39:04 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="username"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        });
    </script>
    
</html>


Thu Jan  4 15:39:04 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:39:04 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan  4 15:39:04 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:39:04 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan  4 15:39:04 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:39:04 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:39:04 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:39:04 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "6783.085", "type": "0"}]


Thu Jan  4 15:39:04 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:39:04 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Thu Jan  4 15:39:04 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:39:04 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:40:54 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Jan  4 15:40:54 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="username"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        });
    </script>
    
</html>


Thu Jan  4 15:40:54 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:40:54 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#down {
    color: black;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan  4 15:40:54 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:40:54 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#down {
    color: black;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan  4 15:40:55 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:40:55 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:40:55 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:40:55 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:40:55 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:40:55 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "6783.085", "type": "0"}]


Thu Jan  4 15:40:55 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:40:55 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Thu Jan  4 15:41:25 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Jan  4 15:41:25 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="username"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        });
    </script>
    
</html>


Thu Jan  4 15:41:25 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:41:25 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#down {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan  4 15:41:25 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:41:25 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#down {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan  4 15:41:26 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:41:26 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:41:26 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:41:26 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "6783.085", "type": "0"}]


Thu Jan  4 15:41:26 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:41:26 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Thu Jan  4 15:41:26 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:41:26 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:42:02 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Jan  4 15:42:02 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="username"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:100,
                width:100,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        });
    </script>
    
</html>


Thu Jan  4 15:42:03 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:42:03 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan  4 15:42:03 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:42:03 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan  4 15:42:03 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:42:03 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:42:03 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:42:03 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "6783.085", "type": "0"}]


Thu Jan  4 15:42:03 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:42:03 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Thu Jan  4 15:42:03 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:42:03 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:42:42 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Jan  4 15:42:42 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="username"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:300,
                width:300,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        });
    </script>
    
</html>


Thu Jan  4 15:42:42 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:42:42 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan  4 15:42:42 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:42:42 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan  4 15:42:42 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:42:42 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:42:42 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:42:42 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "6783.085", "type": "0"}]


Thu Jan  4 15:42:42 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:42:42 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Thu Jan  4 15:42:42 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:42:42 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:42:55 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Jan  4 15:42:55 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="username"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:5000,
                width:300,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        });
    </script>
    
</html>


Thu Jan  4 15:42:55 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:42:55 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan  4 15:42:55 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:42:55 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan  4 15:42:55 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:42:55 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:42:55 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:42:55 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "6783.085", "type": "0"}]


Thu Jan  4 15:42:55 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:42:55 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Thu Jan  4 15:42:55 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:42:55 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:43:05 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Jan  4 15:43:05 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="username"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:300,
                width:300,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        });
    </script>
    
</html>


Thu Jan  4 15:43:05 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:43:05 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan  4 15:43:05 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:43:05 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan  4 15:43:05 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:43:05 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:43:05 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:43:05 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "6783.085", "type": "0"}]


Thu Jan  4 15:43:05 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:43:05 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Thu Jan  4 15:43:06 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:43:06 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:43:51 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Jan  4 15:43:51 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="username"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:300,
                width:300,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        });
    </script>
    
</html>


Thu Jan  4 15:43:51 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:43:51 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan  4 15:43:51 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:43:51 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan  4 15:43:51 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:43:51 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:43:51 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:43:51 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "6783.085", "type": "0"}]


Thu Jan  4 15:43:51 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:43:51 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Thu Jan  4 15:43:51 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:43:51 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:51:26 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Jan  4 15:51:26 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="username"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:200,
                width:200,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        });
    </script>
    
</html>


Thu Jan  4 15:51:26 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:51:26 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan  4 15:51:26 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:51:26 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}


Thu Jan  4 15:51:26 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:51:26 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:51:26 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:51:26 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "6783.085", "type": "0"}]


Thu Jan  4 15:51:26 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:51:26 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:51:26 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:51:26 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Thu Jan  4 15:55:07 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Jan  4 15:55:07 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="username"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info print">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:200,
                width:200,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        });
    </script>
    
</html>


Thu Jan  4 15:55:07 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:55:07 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    #print {
        visibility: visible;
    }
}


Thu Jan  4 15:55:07 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:55:07 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    #print {
        visibility: visible;
    }
}


Thu Jan  4 15:55:08 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:55:08 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:55:08 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:55:08 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "6783.085", "type": "0"}]


Thu Jan  4 15:55:08 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:55:08 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Thu Jan  4 15:55:08 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:55:08 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:55:40 2024

GET /info/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1


Thu Jan  4 15:55:40 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/info.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            <div id="navbar_list">
            <a href="http://localhost:8001">home</a>
            <a href="http://localhost:8001/login" class="auth">login</a>
            <a href="http://localhost:8001/register" class="auth">register</a>
            <a href="http://localhost:8001/inventory" class="nav">inventory</a>
            <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>
            <div class="account">
                <div class="trigger" ><h1>hello <span id="username"></span></h1>
                    <div>money: <span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        <div id="ticket-info" class="print">
            <div>Flight: <span id="flight"></span></div>
            <div>From: <span id="from"></span></div>
            <div>To: <span id="to"></span></div>
            <div>Date: <span id="date"></span></div>
            <div>Time: <span id="time"></span></div>
            <div>Airline: <span id="airline"></span></div>
            <div>Ticket: <span id="ticket"></span></div>
            <div>Seat: <span id="seat"></span></div>
            <div>Price: <span id="price"></span></div>
        </div>
        <div id="button-container">
            <button type="button" onclick="cancel()">Cancel</button>
            <button type="button" ><a id="exchange"style="text-decoration: none;">Exchange</a></button>
            <button type="button" onclick="print()">Print</button>
            <button type="button" id="generate" >QRcode</button>
        </div>
       
        <div class="body_qr"></div>
        <div id="down"> <a href="" id="download" download="QR_Code.png" style="text-decoration: none;">Download</a></div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    </body>
    <script>
        //navbar
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");
            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })
        }
        function logout() {
            localStorage.clear();
        }
        //
        const url = window.location.pathname;
        const id = url.split("/")[2];
        const generate= document.getElementById('generate');
        const qrcodebox = document.querySelector('.body_qr');
        const down= document.querySelector('#down');
        const exchange=document.querySelector('#exchange');
        let ticket = {};
        // them thuoc tinh href
        exchange.setAttribute("href", `http://localhost:8001/exchange/${id}`);
     
        function renderTicket(ticket) {
            const flightId = document.getElementById("flight");
            const from = document.getElementById("from");
            const to = document.getElementById("to");
            const date = document.getElementById("date");
            const time = document.getElementById("time");
            const airline = document.getElementById("airline");
            const ticketId = document.getElementById("ticket");
            const seat = document.getElementById("seat");
            const price = document.getElementById("price");

            flightId.innerText = ticket.flight_id;
            from.innerText = ticket.from;
            to.innerText = ticket.to;
            date.innerText = ticket.date;
            time.innerText = ticket.time;
            airline.innerText = ticket.airline;
            ticketId.innerText = ticket.ticket_id;
            seat.innerText = ticket.seat;
            price.innerText = ticket.price;
        }
        
        fetch(`/ticket/${id}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            ticket = JSON.parse(data)[0];
            renderTicket(ticket);
            textGen(ticket);
        })
        
        function cancel() {
            fetch(`/own/${id}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "text/html"
                },
                body: `ticket_id=${id}&money=${-ticket.price / 2}`
            })
            .then(response => {
                return(response.status);
            })
            .then(status => {
                if (status == 200) {
                    window.location.replace("http://localhost:8001/inventory");
                }
                else {
                    alert("Error");
                }
            });
        }

        

        function print_ticket() {
            window.print();
        }
        //tao ma qr
        //dat hidden cho button download
        down.style.visibility='hidden';
        //lay info cho qr
        var qrInfo='';
        function textGen(ticket){
        
            for (let key in ticket) {
               
                qrInfo =qrInfo +ticket[key];
              
            }
            //bat su kien click tren nut tao qrcode
            generate.addEventListener('click',(e)=>{
            e.preventDefault();
            isEmpty(qrInfo);     
            down.style.visibility='visible'; // hien thi button download khi da hien thi qrcode

        });
        }
        //kiem tra info rong hay ko
        function isEmpty(qrInfo){
            qrInfo.length>0?generateQRCode(qrInfo):alert('no information');
        }
        //gennerate qr
        function generateQRCode(qrInfo){
            
            qrcodebox.innerHTML="";
            new QRCode(qrcodebox,{
                text:qrInfo,
                height:200,
                width:200,
                colorLight:"#fff",
                colorDark:"#000"
            });

        }
        //dowload qr
        download.addEventListener('click',()=>{
            let img=document.querySelector('.body_qr img');
            if(img !== null){
                let imgAtrr=img.getAttribute('src');
                
                    download.setAttribute("href",imgAtrr);
            }
        });

        fetch(`/unread/${username}`, {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            const unread = document.getElementById("unread");
            unread.innerText = JSON.parse(data)[0].count;
        });
    </script>
    
</html>


Thu Jan  4 15:55:40 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:55:40 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan  4 15:55:40 2024

GET /static/info.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:55:40 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

.logo img {
    max-height: 10vh;
}
/* navbar */

#ticket-info {
    margin: 1rem;
}

a {
    text-decoration: none;
    color: white;
}

#download {
    color: black !important;
}

#button-container {
    display: flex;
}

button {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 3rem;
    width: 10rem;
    margin: 0.5rem;
    background: #3399cc;
    color: white;
    font-size: 1.2rem;
    font-weight: 700;
    border: none;
}

button:hover {
    background: #52a3cc;
    cursor: pointer;
}

li {
    padding: 1rem;
    border-bottom: #aaaaaa solid 1px;
}

@media print {
    body {
        visibility: hidden;
    }

    .print {
        visibility: visible;
    }
}


Thu Jan  4 15:55:40 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:55:40 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:55:40 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:55:40 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "6783.085", "type": "0"}]


Thu Jan  4 15:55:40 2024

GET /ticket/1 HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:55:40 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines", "ticket_id": "1", "flight_id": "1", "seat": "1", "price": "100.25", "owned": "1"}]


Thu Jan  4 15:55:40 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/info/1
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:55:40 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:56:12 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/info/1
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan  4 15:56:12 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            
            <div id="navbar_list">
                
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>

            <div class="account">
                <div class="trigger" ><h1>Hello <span id="username"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");

            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        }
        else {
            authElements.forEach(item => item.style.display = "flex");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Jan  4 15:56:13 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:56:13 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan  4 15:56:13 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:56:13 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan  4 15:56:13 2024

GET /unread/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:56:13 2024

HTTP/1.1 200 OK

[{"count": "0"}]


Thu Jan  4 15:56:13 2024

GET /user/abc HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:56:13 2024

HTTP/1.1 200 OK

[{"username": "abc", "money": "6783.085", "type": "0"}]


Thu Jan  4 15:56:13 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:56:13 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Jan  4 15:56:17 2024

GET / HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan  4 15:56:17 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="../static/index.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <body>
        <div id="navbar">
            <div class="logo">
                <a href="http://localhost:8001">
                    <img src="https://img.freepik.com/premium-vector/eagle-logo-design_7888-349.jpg?w=2000" ></img>
                </a>
            </div>
            
            <div id="navbar_list">
                
                <a href="http://localhost:8001">home</a>
                <a href="http://localhost:8001/login" class="auth">login</a>
                <a href="http://localhost:8001/register" class="auth">register</a>
                <a href="http://localhost:8001/inventory" class="nav">inventory</a>
                <a href="http://localhost:8001/notifications" class="nav">notifications(<span id="unread"></span>)</a>
            
            </div>

            <div class="account">
                <div class="trigger" ><h1>Hello <span id="username"></span></h1>
                    <div>Balance: $<span id="money"></span></div>
                
                </div>
                <div class="menu"><a href="http://localhost:8001" onclick="logout()" class="nav">logout</a></div>

            </div> 
        </div>

        

        <div id="flights-info">
            <div id="flights-search">
                <input type="text" name="from" id="from" placeholder="From">
                <input type="text" name="to" id="to" placeholder="To">
                <input type="airline" name="airline" id="airline" placeholder="Airline">
                <input type="datetime-local" name="datetime" id="datetime">
                <button type="button" onclick="filter()">Filter</button>
                <select name="sort" id="sort" onchange="sortFlights()">
                    <option value="flight">Flight</option>
                    <option value="time">Time</option>
                    <option value="airline">Airline</option>
                </select>
            </div>
            <div id="flights-column">
                <span>Flight</span>
                <span>From</span>
                <span>To</span>
                <span>Date</span>
                <span>Time</span>
                <span>Airline</span>
            </div>
            <ul id="flights"></ul>
        </div>

    </body>

    <script>
        let flights = [];
        let filteredFlights = [];

        // hien thi elements tuy thuoc vao trang thai dang nhap
        const username = localStorage.getItem("username");
        const authElements = document.querySelectorAll(".auth");
        const navElements = document.querySelectorAll(".nav");
        if (username != "" && username != null) {
            document.getElementById("username").innerHTML = username;
            authElements.forEach(item => item.style.display = "none");
            navElements.forEach(item => item.style.display = "flex");

            fetch(`/unread/${username}`, {
                method: "GET",
            })
            .then(response => {
                return(response.text());
            })
            .then(data => {
                const user = JSON.parse(data)[0];
                const unread = document.getElementById("unread");
                unread.innerText = user.count;
                const money = document.getElementById("money");
            })
            fetch(`/user/${username}`, {
            method: "GET"
        })
        .then(response => {
            return response.text();
        })
        .then(data => {
            const user = JSON.parse(data)[0];
            const money = document.getElementById("money");
            money.innerText = user.money;
        })

        }
        else {
            authElements.forEach(item => item.style.display = "flex");
            navElements.forEach(item => item.style.display = "none");
        }

        // xoa data nguoi dung duoc luu trong ls
        function logout() {
            localStorage.clear();
        }

        function filter() {
            let from = document.getElementById("from").value;
            let to = document.getElementById("to").value;
            let airline = document.getElementById("airline").value;
            let datetime= document.getElementById("datetime").value;
            filteredFlights = flights;
            console.log(`from: ${from}, to: ${to}, datetime: ${datetime}`);
            if (from != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.from.includes(from));
            }
            if (to != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.to.includes(to));
            }
            if (airline != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    flight.airline.includes(airline));
            }
            if (datetime != "") {
                filteredFlights = filteredFlights.filter(flight => 
                    Date.parse(datetime)== Date.parse(`${flight.date}T${flight.time}:00`));
            }
            renderFlights();
        }

        function renderFlights() {
            const ul = document.getElementById("flights");
            ul.innerHTML = ""; // xoa cac element da co de them tu dau
            filteredFlights.forEach(ticket => {
                const li = document.createElement("li");
                li.className = "ticket";
                for (const key in ticket) {
                    const span = document.createElement("span");
                    span.textContent = ticket[key];
                    li.appendChild(span);
                }
                const a = document.createElement("a");
                a.setAttribute("href", `http://localhost:8001/flight/${ticket.flight_id}`);
                a.innerHTML = "Book";
                li.appendChild(a);
                ul.appendChild(li);
            });
        }

        function sortFlights() {
            const select = document.getElementById("sort").value;
            console.log(select);
            switch (select) {
                case "flight":
                    filteredFlights.sort((a, b) => {
                        return a.flight_id > b.flight_id;
                    })
                    break;
                case "time":
                    console.log("sorting by time");
                    filteredFlights.sort((a, b) => {
                        return Date.parse(`${a.date}T${a.time}:00`) > Date.parse(`${b.date}T${b.time}:00`)
                    })
                    break;
                case "airline":
                    filteredFlights.sort((a, b) => {
                        return a.airline > b.airline;
                    })
                    break;
                default:
                    break;
            }
            renderFlights();
        }

        fetch("/flights", {
            method: "GET",
        })
        .then(response => {
            return(response.text());
        })
        .then(data => {
            flights = JSON.parse(data);
            filteredFlights = flights;
            renderFlights();
        })
    </script>
</html>


Thu Jan  4 15:56:18 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:56:18 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan  4 15:56:18 2024

GET /static/index.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:56:18 2024

HTTP/1.1 200 OK

* {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
}

/* navbar */
#navbar{
    display: grid;
    width: 100vw;
    grid-template-columns: 10% 70% 20%;
}

#navbar .logo{
    display: flex;
    align-items: center;
}

#navbar_list{
    height: 10vh;
    display: flex;
    align-items: center;
    
    justify-content: space-around;
    box-shadow: #aaaaaa 0 2px 2px;

}
#navbar_list a {
    
    align-items: center;
    color: black;
    text-transform: capitalize;
}

#navbar_list a:hover {
    
    height: 10vh;
    background: #eeeeee;
}

a {
    text-decoration: none;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.account {
    display: flex;
    height: 10vh;
    padding: 0 1rem;
    box-shadow: #aaaaaa 0 2px 2px;
    flex-direction: column;
    justify-content: center; /* Đặt menu ở đầu trục chính (chiều dọc) */
}

.menu {
    display: none;
    background-color: #f1f1f1;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    width: auto;
    width: 20vw;
}

.menu a {
    display: block;
    padding: 12px 16px;
    text-decoration: none;
    color: #333;
    
}

.menu a:hover {
    background-color: #ddd;
}

.trigger {
    display: flex;
    gap: 1vw;
    cursor: pointer;
}
.trigger:hover + .menu,
.menu:hover {
    display: block;
}

.logo {
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: #aaaaaa 0 2px 2px;
}

img {
    max-height: 10vh;
}
/* navbar */

#flights-info {
    margin: 1rem;
}

ul {
    border: #aaaaaa solid 1px;
    border-bottom: none;
}

#flights-column {
    height: 3rem;
    padding: 0.5rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    border: #aaaaaa solid 1px;
}

li {
    height: 3rem;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: #aaaaaa solid 1px;
}

li a {
    height: 100%;
    background: #3399cc;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

li a:hover {
    background: #52a3cc;
}

#flights {
    padding: 0;
    width: 100%;
}

li, #flights-column {
    display: grid;
    grid-template-columns: 1fr 3fr 3fr 2fr 1.5fr 3fr 1fr;
}

#flights-column span, li span {
    margin: 0 10px;
    display: flex;
    justify-content: center;
}


Thu Jan  4 15:56:18 2024

GET /flights HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://localhost:8001/
Connection: keep-alive
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:56:18 2024

HTTP/1.1 200 OK

[{"flight_id": "1", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-19", "time": "19:50", "airline": "Vietnam Airlines"}, {"flight_id": "2", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "19:20", "airline": "Vietnam Airlines"}, {"flight_id": "3", "from": "Hanoi", "to": "Da Nang", "date": "2024-06-21", "time": "07:10", "airline": "VietJet Air"}, {"flight_id": "5", "from": "Hai Phong", "to": "Hue", "date": "2024-07-23", "time": "13:00", "airline": "Bamboo Airways"}, {"flight_id": "6", "from": "Vinh", "to": "Hanoi", "date": "2024-07-24", "time": "16:50", "airline": "Vietnam Airlines"}, {"flight_id": "7", "from": "Vinh", "to": "Ho Chi Minh City", "date": "2024-07-24", "time": "04:50", "airline": "Vietnam Airlines"}, {"flight_id": "8", "from": "Long Thanh", "to": "Hanoi", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "9", "from": "Long Thanh", "to": "Vinh", "date": "2024-08-26", "time": "09:10", "airline": "VietJet Air"}, {"flight_id": "10", "from": "Ho Chi Minh City", "to": "New York", "date": "2024-09-30", "time": "01:30", "airline": "United"}, {"flight_id": "11", "from": "Hanoi", "to": "Ho Chi Minh City", "date": "2024-05-20", "time": "18:30", "airline": "VietJet Air"}, {"flight_id": "12", "from": "Hai Phong", "to": "Da Nang", "date": "2024-06-03", "time": "08:30", "airline": "Vietnam Airlines"}]


Thu Jan  4 15:56:19 2024

GET /login HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1


Thu Jan  4 15:56:19 2024

HTTP/1.1 200 OK

<!DOCTYPE html>
<html>
    <head>
        
        <title>Bootstrap Example</title>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
        <link rel="stylesheet" href="../static/login.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    </head>
   
    <body>

        <section class="h-100 gradient-form" style="background-color: #eee;">
            <div class="container py-5 h-100">
              <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-xl-10">
                  <div class="card rounded-3 text-black">
                    <div class="row g-0">
                      <div class="col-lg-6">
                        <div class="card-body p-md-5 mx-md-4">
          
                          <div class="text-center">
                            <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/lotus.webp"
                              style="width: 185px;" alt="logo">
                            <h4 class="mt-1 mb-5 pb-1">We are The Lotus Team</h4>
                          </div>
          
                          <div>
                            <p>Please login to your account</p>
          
                            <div class="form-outline mb-4">
                              <input type="text" id="username" class="form-control"
                                placeholder="Username" name="username" >
                              <label class="form-label" for="form2Example11">Username</label>
                            </div>
          
                            <div class="form-outline mb-4">
                              <input type="password" id="password" class="form-control" name="password" placeholder="Password" >
                              <label class="form-label" for="form2Example22">Password</label>
                            </div>
          
                            <div class="text-center pt-1 mb-5 pb-1">
                              <button class="btn btn-primary btn-block fa-lg gradient-custom-2 mb-3" type="button" onclick="submit()">Log
                                in</button>
                              <a class="text-muted" href="#!">Forgot password?</a>
                            </div>
          
                            <div class="d-flex align-items-center justify-content-center pb-4">
                              <p class="mb-0 me-2">Don't have an account?</p>
                              <button type="button" class="btn btn-outline-danger""> <a  href="http://localhost:8001/register">Create new account</a></button>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="col-lg-6 d-flex align-items-center gradient-custom-2">
                        <div class="text-white px-3 py-4 p-md-5 mx-md-4">
                          <h4 class="mb-4">We are more than just a company</h4>
                          <p class="small mb-0">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
                            tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud
                            exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </section>
          <!-- <h1>login</h1>
          <input type="text" name="username" id="username" placeholder="Username">
          <input type="password" name="password" id="password" placeholder="Password">
          <button type="button" onclick="submit()">Submit</button> -->
        <script>
          localStorage.removeItem('ticket_id_old');
            function submit() {
              console.log("a");
                let username = document.getElementById("username").value;
                let password = document.getElementById("password").value;
                console.log(`username: ${username}, password: ${password}`);
                fetch("/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "multipart/form-data"
                    },
                    body: `username=${username}&password=${password}`
                })
                .then(response => {
                    return(response.text());
                })
                .then(data => {
                  console.log(data);
                    if (data[0] != "[") {
                      alert("Invalid username or password");
                      return;
                    }
                    const loggedInUser = JSON.parse(data)[0];
                    if (loggedInUser.type == "1") {
                      window.location.replace("http://localhost:8001/manage/flights");
                    }
                    else if (loggedInUser.type == "0") {
                      window.location.replace("http://localhost:8001");
                    }
                    localStorage.setItem("username", loggedInUser.username);
                })
            }
        </script>
    </body>
</html>


Thu Jan  4 15:56:20 2024

GET /static/login.css HTTP/1.1
Host: localhost:8001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0
Accept: text/css,*/*;q=0.1
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Referer: http://localhost:8001/login
Sec-Fetch-Dest: style
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: same-origin


Thu Jan  4 15:56:20 2024

HTTP/1.1 200 OK

.gradient-custom-2 {
    /* fallback for old browsers */
    background: #fccb90;
    
    /* Chrome 10-25, Safari 5.1-6 */
    background: -webkit-linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);
    
    /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
    background: linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);
    }
    
    @media (min-width: 768px) {
    .gradient-form {
    height: 100vh !important;
    }
    }
    @media (min-width: 769px) {
    .gradient-custom-2 {
    border-top-right-radius: .3rem;
    border-bottom-right-radius: .3rem;
    }
    }


